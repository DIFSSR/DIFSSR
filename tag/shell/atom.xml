<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>千里稻花应秀色 • Posts by &#34;shell&#34; tag</title>
    <link href="http://example.com" />
    <updated>2021-09-14T00:19:12.000Z</updated>
    <category term="C" />
    <category term="大数据" />
    <category term="Shell" />
    <category term="Python" />
    <category term="MapReduce" />
    <category term="Hexo" />
    <category term="安全" />
    <category term="鸿蒙" />
    <category term="单片机" />
    <category term="平台" />
    <category term="机器学习" />
    <entry>
        <id>http://example.com/2021/09/14/Linux%20Shell/Linux%20Shell%E5%9F%BA%E7%A1%80/</id>
        <title>Linux Shell基础</title>
        <link rel="alternate" href="http://example.com/2021/09/14/Linux%20Shell/Linux%20Shell%E5%9F%BA%E7%A1%80/"/>
        <content type="html">&lt;h2 id=&#34;1-shell基础&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-shell基础&#34;&gt;&lt;/a&gt; 1 Shell基础&lt;/h2&gt;
&lt;p&gt;什么是shell？目前常用的操作系统（Windows、U/L、Android、iOS等）都带有图形界面，然 而，早期的计算机并没有图形界面，人们只能使用命令来控制计算机。其实，真 正能够控制计算机硬件（CPU、内存、显示器）的只有操作系统内核（Kernel）， 图形界面和命令行都是架设在用户和内核之间的桥梁，是为了方便用户控制计算 机而存在的。Shell 也是一种编程语言，主要用来开发一些实用的、自动化的小工具，例如，检测计算机的硬件参数、搭建Web运行环境、日志分析等。对Linux运维工程师来说，Shell更是必须掌握的技能。Shell使自动化管理服务器集群成为可能，否则用户只能一个一个地登录所有的服务器，对每一台服务器进行相同的设置，而这些服务器可能有成百上千之多，用户会在重复性的工作上浪费大量时间。&lt;/p&gt;
&lt;h3 id=&#34;11查看shell版本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#11查看shell版本&#34;&gt;&lt;/a&gt; 1.1查看Shell版本&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat /ect/shells&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/sbin/nologin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/sbin/nologin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;12-shell变量类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#12-shell变量类型&#34;&gt;&lt;/a&gt; 1.2 Shell变量类型&lt;/h3&gt;
&lt;p&gt;Shell变量分为四类，分别为自定义变量、环境变量、位置变量和预定义变量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据工作要求临时定义的变量称为自定义变量&lt;/li&gt;
&lt;li&gt;环境变量一般是指用export内置命令导出的变量，用于定义Shell的运行环境，保证Shell命令的正确执行 只使用 不定义&lt;/li&gt;
&lt;li&gt;从命令行、函数或脚本执行等处传递参数时，$0、$1称为特殊位置变量&lt;/li&gt;
&lt;li&gt;预定义变量是在 bash 中已有的变量，可以直接使用，如&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;@&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;、&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;@、&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;*等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;121-自定义变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#121-自定义变量&#34;&gt;&lt;/a&gt; 1.2.1 自定义变量&lt;/h4&gt;
&lt;p&gt;自定义变量可以理解为局部变量或普通变量，只能在创建它们的Shell函数或Shell脚本中使用，自定义变量的说明如表所示。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;定义自定义变量&lt;/th&gt;
&lt;th&gt;变量名=变量值，字母下划线开头，区分大小写&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;使用自定义变量&lt;/td&gt;
&lt;td&gt;$变量名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看自定义变量&lt;/td&gt;
&lt;td&gt;echo$变量名 set(所有变量)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;取消自定义变量&lt;/td&gt;
&lt;td&gt;unset 变量名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;自定义变量使用范围&lt;/td&gt;
&lt;td&gt;仅在当前Shell中有效&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;分支结构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;host=www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if ping -c1 $host &amp;amp;&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;network ok&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;bad network&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;122环境变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#122环境变量&#34;&gt;&lt;/a&gt; 1.2.2环境变量&lt;/h4&gt;
&lt;p&gt;环境变量也可称为全局变量，可以在创建它们的Shell及其派生出来的任意子进程Shell中使用。环境变量的说明如表所示。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;查看&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo $PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PATH=$PATH:/bin/new&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export PATH&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;123位置变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#123位置变量&#34;&gt;&lt;/a&gt; 1.2.3位置变量&lt;/h4&gt;
&lt;p&gt;在Shell中存在一些位置变量。位置变量用于在命令行、函数或脚本中传递参数，其变量名不用自己定义，其作用也是固定的。执行脚本时，通过在脚本后面给出具体的参数（多个参数用空格隔开）对相应的位置变量进行赋值。&lt;br /&gt;
$0代表命令本身，$1-$9代表接收的第1~9个参数，&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;以&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;上&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;需&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;要&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;用&lt;/mi&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;括&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;起&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;来&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;，&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;如&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;10以上需要用{}括起来，如&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;以&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;上&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;需&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;要&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;用&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;括&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;起&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;来&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;如&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{10}代表接收的第10个参数。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[hadoop@master shell]$ cat ping06.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ping -c1 $1 &amp;amp;&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ $? -eq &amp;quot;0&amp;quot; ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;network to $1 is ok&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;bad network to $1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[hadoop@master shell]$ sh ping06.sh www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;network to www.baidu.com is ok&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;124预定义变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#124预定义变量&#34;&gt;&lt;/a&gt; 1.2.4预定义变量&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;$0&lt;/th&gt;
&lt;th&gt;脚本名&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$*&lt;/td&gt;
&lt;td&gt;所有参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$@&lt;/td&gt;
&lt;td&gt;所有参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$#&lt;/td&gt;
&lt;td&gt;参数的个数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$$&lt;/td&gt;
&lt;td&gt;当前进程PID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$!&lt;/td&gt;
&lt;td&gt;上一个进程PID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$?&lt;/td&gt;
&lt;td&gt;上一个命令返回值，0代表成功&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[hadoop@master shell]$ ls &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[1] 6950&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[hadoop@master shell]$ ip.txt  ping03.sh  ping04.sh  ping05.sh  ping06.sh  ping07.sh  read&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[1]+  完成                  ls --color=auto&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[hadoop@master shell]$ $!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-bash: 6950: 未找到命令&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[hadoop@master shell]$ cat ping07.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ $# -eq 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;usage: `basename $0` filename&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	exit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ ! -f $1 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;filename error&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	exit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for ip in `cat $1`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ping -c1 $ip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[hadoop@master shell]$ sh ping07.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;usage: ping07.sh filename&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[hadoop@master shell]$ sh ping07.sh ip.txt &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;13变量的赋值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#13变量的赋值&#34;&gt;&lt;/a&gt; 1.3变量的赋值&lt;/h3&gt;
&lt;h4 id=&#34;131显式赋值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#131显式赋值&#34;&gt;&lt;/a&gt; 1.3.1显式赋值&lt;/h4&gt;
&lt;p&gt;在Shell中，当第一次使用某变量名时，实际上就已经给变量赋值了。显式赋值的&lt;br /&gt;
格式为”变量名=变量值”。为了避免歧义，显式赋值时__禁止在等号两边添加空格__，&lt;br /&gt;
这跟常见的编程语言有所不同。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;a=3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;变量缺省为字符串类型&lt;/li&gt;
&lt;li&gt;变量值中有空格需要使用引号&lt;/li&gt;
&lt;li&gt;使用变量值进行赋值  name=“welcome to $place”&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;132从键盘赋值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#132从键盘赋值&#34;&gt;&lt;/a&gt; 1.3.2从键盘赋值&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;read -p &amp;quot;Please enter a ip:&amp;quot; ip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Please enter a ip:1.1.1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo $ip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1.1.1.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;133使用位置变量赋值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#133使用位置变量赋值&#34;&gt;&lt;/a&gt; 1.3.3使用位置变量赋值&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat test.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo $1 $2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh test.sh hello world&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hello world&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;134利用命令替换进行赋值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#134利用命令替换进行赋值&#34;&gt;&lt;/a&gt; 1.3.4利用命令替换进行赋值&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;today=`date +%F`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo today&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2021-10-2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;touch `date +%F`_file.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;双引号弱引用，单引号为强引用&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[hadoop@master shell]$ cat ping04.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;host=www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ping -c1 $host &amp;amp;&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ $? -eq 0 ] &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;network to $host is ok&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;bad network to $host&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;14变量的运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#14变量的运算&#34;&gt;&lt;/a&gt; 1.4变量的运算&lt;/h3&gt;
&lt;h4 id=&#34;141expr数值运算命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#141expr数值运算命令&#34;&gt;&lt;/a&gt; 1.4.1.expr数值运算命令&lt;/h4&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;echo 1 + 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 + 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;expr 1 + 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = `expr $name1 \* $name2`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo $res&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;在使用expr时，需要注意运算符及用于计算的数字两边必须有空格，否则会执行失败。&lt;/li&gt;
&lt;li&gt;expr 支持乘法运算，在使用乘号 * 时必须用反斜杠转义，即 \*&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;142或数值运算命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#142或数值运算命令&#34;&gt;&lt;/a&gt; 1.4.2.“$(())”或“[]”数值运算命令&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;双小括号 “$(())” 的作用是进行整数运算和数值比较，格式为“ ((表达式))”&lt;/li&gt;
&lt;li&gt;操作数、运算符两侧可以有空格&lt;/li&gt;
&lt;li&gt;括号内 $ 符合可省略&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;num1=10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;num2=20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sum=$((num1+num2))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo $sum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sum=$[ num1+num2 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo $sum&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;可以使用加减乘除幂&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;143let数值运算命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#143let数值运算命令&#34;&gt;&lt;/a&gt; 1.4.3.let数值运算命令&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;let数值符号可以直接进行计算，不需要使用 $ 符号。&lt;/li&gt;
&lt;li&gt;let运算命令的语法格式为：let 赋值表达式&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let num=1+2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo $num&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;调试模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bash -vx test.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;144shell小数运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#144shell小数运算&#34;&gt;&lt;/a&gt; 1.4.4Shell小数运算&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;bc是Unix/Linux下的计算器，它还可以作为命令进行小数运算。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;2^4&amp;quot;|bc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;scale=2;6/4&amp;quot;|bc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1.50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;15-变量的删除和替换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#15-变量的删除和替换&#34;&gt;&lt;/a&gt; 1.5 变量的删除和替换&lt;/h3&gt;
&lt;p&gt;Linux提供了一些可以直接对变量进行操作的符号。通过这些符号，变量中的部分内容可以被删除、替换和替代。在Shell变量中，变量的删除、替换和替代也是非常重要的。通过简单的操作修改变量，可以减少代码的行数并提高可读性。&lt;/p&gt;
&lt;h4 id=&#34;151-变量的删除&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#151-变量的删除&#34;&gt;&lt;/a&gt; 1.5.1 变量的删除&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;变量删除的操作方式，如表所示。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;${变量名#关键字符}&lt;/td&gt;
&lt;td&gt;如果变量内容从头开始的数据符合“关键字符”，则将符合的最短数据删除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;${变量名##关键字符}&lt;/td&gt;
&lt;td&gt;如果变量内容从头开始的数据符合“关键字符”，则将符合的最长数据删除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;${变量名%关键字符}&lt;/td&gt;
&lt;td&gt;如果变量内容从尾开始的数据符合“关键字符”，则将符合的最短数据删除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;${变量名%%关键字符}&lt;/td&gt;
&lt;td&gt;如果变量内容从尾开始的数据符合“关键字符”，则将符合的最长数据删除&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# url=www.bing.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;www.bing.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;#url&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;www.bing.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url#*.&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bing.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url##*.&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url%.*&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;www.bing&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url%%.*&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;索引和切片&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url:0:5&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;www.b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url:5:5&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ing.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url:5:&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url:5&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ing.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;152-变量的替换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#152-变量的替换&#34;&gt;&lt;/a&gt; 1.5.2 变量的替换&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;${变量名/旧字符串/新字符串}&lt;/td&gt;
&lt;td&gt;表示若变量内容符和【旧字符串】则第一个【旧字符串】会被【新字符串】替换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;${变量名//旧字符串/新字符串}&lt;/td&gt;
&lt;td&gt;表示若变量内容符和【旧字符串】则全部的【旧字符串】会被【新字符串】替换&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url/bing/baidu&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url/b/B&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;www.Bing.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url/w/W&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Www.bing.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url//w/W&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;WWW.bing.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;153变量的替代&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#153变量的替代&#34;&gt;&lt;/a&gt; 1.5.3变量的替代&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;给Shell变量设置默认值的格式为”${变量名-新的变量名}”，如果变量名没有被赋值，会使用”新的变量值”替代，如果变量已被赋值（包括空值），则该值不会被替代。&lt;/li&gt;
&lt;li&gt;变量替代常用于为变量设置缺省值。例如，在连接数据库时，需要使用端口，这个端口可以是预先设置的具体端口，也可以是用户输入的端口。假如用户没有输入具体的端口号，脚本中就使用预先设置的端口。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# unset url&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;url-www.heuet.edu.cn&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;www.heuet.edu.cn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# host=hadoop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;host-www.heuet.edu.cn&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hadoop&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# var=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;var-www.heuet.edu.cn&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# unset var1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# var2=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# var3=333&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;var1-111&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;var1:-111&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;var2:-111&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $&amp;#123;var3:-111&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;333&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="Shell" />
        <updated>2021-09-14T00:19:12.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/09/14/Linux%20Shell/Linux%20Shell%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95/</id>
        <title>Linux Shell条件测试</title>
        <link rel="alternate" href="http://example.com/2021/09/14/Linux%20Shell/Linux%20Shell%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
        <content type="html">&lt;h2 id=&#34;2-shell条件测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-shell条件测试&#34;&gt;&lt;/a&gt; 2 Shell条件测试&lt;/h2&gt;
&lt;h3 id=&#34;21-文件测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#21-文件测试&#34;&gt;&lt;/a&gt; 2.1 文件测试&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在Shell编程中，通常使用 test 命令进行条件测试&lt;/li&gt;
&lt;li&gt;语法形式为“test &amp;lt;测试表达式&amp;gt;”。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# test -d /home&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# test -d /homo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 ~]# echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;test 条件测试在脚本中的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat test_mysqlback.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/usr/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;back_dir=~/mysql_back&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if ! test -d $back_dir;then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	mkdir -p $back_dir&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;开始备份...&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# chmod +x test_mysqlback.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# bash -vx test_mysqlback.sh &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;除 test 外，还可以使用中括号或双中括号进行条件测试&lt;/li&gt;
&lt;li&gt;中括号 [ 是Shell的内置命令，不是标点符号&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ -d /home ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ -d /homo ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# type -a [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ 是 shell 内嵌&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[ 是 /usr/bin/[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [[ -d /home ]];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;文件测试操作符&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-d&lt;/td&gt;
&lt;td&gt;测试是否为目录(Directory)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-a&lt;/td&gt;
&lt;td&gt;测试目录或文件是否存在(Exist）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-f&lt;/td&gt;
&lt;td&gt;测试是否为文件(File)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-r&lt;/td&gt;
&lt;td&gt;测试当前用户是否可读（read)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-w&lt;/td&gt;
&lt;td&gt;测试当前用户是否可写(write）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-x&lt;/td&gt;
&lt;td&gt;测试当前用户是否可执行（cxcutc）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# ll host.txt &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r--. 1 root root 102 11月  2 15:41 host.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ -r host.txt ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# chmod -r host.txt &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# ll host.txt &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--w-------. 1 root root 102 11月  2 15:41 host.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ -r host.txt ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ -w host.txt ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ -x host.txt ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;22-整数测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#22-整数测试&#34;&gt;&lt;/a&gt; 2.2 整数测试&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;整数测试通常用于数值之间的运算，其语法格式为 [ 整数1 操作符 整数2 ]&lt;/li&gt;
&lt;li&gt;或 test 整数1 操作符 整数2。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作符&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-eq&lt;/td&gt;
&lt;td&gt;等于（Equal）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-ne&lt;/td&gt;
&lt;td&gt;不等于(Not Equal)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-gt&lt;/td&gt;
&lt;td&gt;大于(Greater Than)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-lt&lt;/td&gt;
&lt;td&gt;小于(Lesser Than)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-le&lt;/td&gt;
&lt;td&gt;小于或等于(Lesser or Equal)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-ge&lt;/td&gt;
&lt;td&gt;大于或等于(Greater or Equal)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;整数测试在脚本中的应用：创建新用户&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat create_user01.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;read -p &amp;quot;Input a username: &amp;quot; user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id $user &amp;amp;&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ $? -eq 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;user $user already exsits.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	useradd $user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if [ $? -eq 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		echo &amp;quot;$user created.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;整数测试在脚本中的应用：磁盘可用空间告警&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat disk_use.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;. /etc/profile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;disk_use=`df -Th |grep &amp;#x27;/$&amp;#x27;|awk &amp;#x27;&amp;#123;print $(NF-1)&amp;#125;&amp;#x27;|awk -F&amp;quot;%&amp;quot; &amp;#x27;&amp;#123;print $1&amp;#125;&amp;#x27;`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ $disk_use -ge 5 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;`date +%F&amp;quot; &amp;quot;%T` disk used: $&amp;#123;disk_use&amp;#125;%&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# ./disk_use.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2021-12-06 14:53:46 disk used: 42%&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;整数测试在脚本中的应用：内存可用空间告警&lt;/li&gt;
&lt;li&gt;shell 语法检查：bash -n &lt;a href=&#34;http://xxx.sh&#34;&gt;xxx.sh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat mem_use.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mem_used=`free -m |grep &amp;#x27;^M&amp;#x27; |awk &amp;#x27;&amp;#123;print $3&amp;#125;&amp;#x27;`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mem_total=`free -m |grep &amp;#x27;^M&amp;#x27; |awk &amp;#x27;&amp;#123;print $2&amp;#125;&amp;#x27;`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mem_percent=$[mem_used*100/mem_total]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;var_file=`date +%F`.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ $mem_percent -ge 10 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;`date +%F&amp;quot; &amp;quot;%T` memory used: $&amp;#123;mem_percent&amp;#125;%&amp;quot; &amp;gt;$var_file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# ./mem_use.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat 2021-12-06.log &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2021-12-06 14:54:44 memory used: 79%&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;23-字符串测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#23-字符串测试&#34;&gt;&lt;/a&gt; 2.3 字符串测试&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;字符串测试操作符的作用包括比较字符串是否相同、测试字符串的长度是否为0。书写表达式为[ 字符串1 = 字符串2 ]、[ 字符串1 ！= 字符串2 ]或[ -z 字符串 ]。字符串测试运算符如表所示。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-z&lt;/td&gt;
&lt;td&gt;判断字符串长度是否为0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-n&lt;/td&gt;
&lt;td&gt;判断字符串长度是否为非0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!&lt;/td&gt;
&lt;td&gt;判断两个字符串是否不相等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;判断两个字符串是否相等&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ $USER = root ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ $USER = hadoop ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ $USER != hadoop ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;双引号的作用&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ &amp;quot;$USER&amp;quot; != hadoop ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ &amp;quot;$USER&amp;quot; = root ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# echo $username&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ $username = root ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-bash: [: =: 期待一元表达式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ &amp;quot;$username&amp;quot; = root ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;字符串长度测试：空串、未定义变量的长度都是 0&lt;/li&gt;
&lt;li&gt;字符串必须使用双引号&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# var=&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# echo $&amp;#123;#var&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ -z $var ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ -n $var ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ -z &amp;quot;$var&amp;quot; ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ -n &amp;quot;$var&amp;quot; ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;字符串测试在脚本中的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat install.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ $user ! = root ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;Permission Denied&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	exit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;yum install httpd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;以上是安装服务的脚本，判断变量user的值是否为root，如果为root则安装httpd，&lt;br /&gt;
如果不是root，则显示”你没有权限”。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;24-逻辑运算符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#24-逻辑运算符&#34;&gt;&lt;/a&gt; 2.4 逻辑运算符&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在Shell条件测试中，使用逻辑运算符实现复杂的条件测试，逻辑运算符用于操作两个变量。逻辑运算符语法格式。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[ 表达式1 ] 操作符 [ 表达式2 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;or&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;命令1 操作符 命令2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;逻辑操作符&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-a 或 &amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;判断操作符两边均为真，结果为真，否则为假，”逻辑与”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-o 或 ||&lt;/td&gt;
&lt;td&gt;判断操作符两边一边为真，结果为真，否则为假，”逻辑或”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!&lt;/td&gt;
&lt;td&gt;判断操作符两边均为假，结果为真，否则为假，”逻辑否”&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;-a和&amp;amp;&amp;amp;的运算规则。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ 1 -lt 2 -a 5 -gt 10 ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [ 1 -lt 2 -o 5 -gt 10 ];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [[ 1 -lt 2 &amp;amp;&amp;amp; 5 -gt 10 ]];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# [[ 1 -lt 2 || 5 -gt 10 ]];echo $?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;应用：创建批量用户&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat user_add.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;read -p &amp;quot;Please input a username: &amp;quot; user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id $user &amp;amp;&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ $? -eq 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;user $user already exists.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	useradd $user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if [ $? -eq 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		echo &amp;quot;user created.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;应用：创建批量用户&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;case-条件语句&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#case-条件语句&#34;&gt;&lt;/a&gt; case 条件语句&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;case条件语句相当于多分支的if/elif/else条件语句&lt;/li&gt;
&lt;li&gt;case条件语句比if语句更加简洁工整，故常应用在实现系统服务启动脚本等应用场景中。&lt;/li&gt;
&lt;li&gt;在Shell编程中，case语句有固定的语法格式。其语法格式为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;case 变量值 in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  条件表达式1）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    代码块1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ；；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  条件表达式2）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    代码块2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ；；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  条件表达式3）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    代码块3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ；；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  *）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    默认代码块&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;esac&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;条件表达式匹配如表所示。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;条件表达式&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;任意字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;任意单个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[abc]&lt;/td&gt;
&lt;td&gt;其中之一&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[a-z]&lt;/td&gt;
&lt;td&gt;区间之一&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;td&gt;多重选择&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;case条件语句案例实战&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat user_del.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; delete user&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;read -p &amp;quot;Input a username: &amp;quot; user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id $user &amp;amp;&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ $? -ne 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;no such user: $user&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	exit 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;read -p &amp;quot;Are you sure?[y/n]: &amp;quot; action&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;case &amp;quot;$action&amp;quot; in&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;y|Y|yes|YES)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	userdel -r $user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;user $user deleted. &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;error! &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	exit 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;esac&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="Shell" />
        <updated>2021-09-14T00:19:12.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/09/14/Linux%20Shell/Linux%20Shell%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/</id>
        <title>Linux Shell循环结构</title>
        <link rel="alternate" href="http://example.com/2021/09/14/Linux%20Shell/Linux%20Shell%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
        <content type="html">&lt;h2 id=&#34;3-循环结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-循环结构&#34;&gt;&lt;/a&gt; 3 循环结构&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Shell语言支持四种循环语句：for、while、until、select&lt;/li&gt;
&lt;li&gt;工作中常用的是 for、while、until&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;for循环语法结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#for循环语法结构&#34;&gt;&lt;/a&gt; for循环语法结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;for循环主要用于确定次数的循环&lt;/li&gt;
&lt;li&gt;第一种for循环的语法结构如下所示：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;for 变量名 in 取值列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	循环体&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;for循环语句实现批量主机ping探测&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat for_ping.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for name in baidu 163 hao123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	host=www.$name.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ping -c1 -w1 $host &amp;amp;&amp;gt; /dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if [ $? -eq 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		echo &amp;quot;$host&amp;quot; | tee -a host.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wait&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;Mission Completed.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;for循环语句实现文件中批量用户创建&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat users_from_file.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;IFS=$&amp;#x27;\n&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for line in `cat $1`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ $&amp;#123;#line&amp;#125; -eq 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;continue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user=`echo &amp;quot;$line&amp;quot; | awk &amp;#x27;&amp;#123;print $1&amp;#125;&amp;#x27;`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pass=`echo &amp;quot;$line&amp;quot; | awk &amp;#x27;&amp;#123;print $2&amp;#125;&amp;#x27;`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id $user &amp;amp;&amp;gt;/dev/nuil&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ $? -eq 0 ] ;then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;user $user already exists&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;useradd $user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;$pass&amp;quot; | passwd --stdin $user &amp;amp;&amp;gt; /dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ $? -eq 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;$user created&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;while循环语句语法结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#while循环语句语法结构&#34;&gt;&lt;/a&gt; while循环语句语法结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;while循环语句的基本语法为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;while 条件测试&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    循环体&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;while循环语句会对条件测试进行判断，如果条件测试成立时，则执行do和done之间的循环体，直到条件测试不成立才停止循环。&lt;/li&gt;
&lt;li&gt;while循环语句实现批量用户创建&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat while_user.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while read line&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if [ $&amp;#123;#line&amp;#125; -eq 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		echo &amp;quot;NULL&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		continue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	user=`echo $line | awk &amp;#x27;&amp;#123;print $1&amp;#125;&amp;#x27;`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	pass=`echo $line | awk &amp;#x27;&amp;#123;print $2&amp;#125;&amp;#x27;`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	id $user &amp;amp;&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if [ $? -eq 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		echo &amp;quot;user $user already exists.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		useradd $user&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		echo &amp;quot;$pass&amp;quot;| passwd --stdin $user &amp;amp;&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if [ $? -eq 0 ] ;then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			echo &amp;quot;$user created .&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done &amp;lt; $1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;until循环语句语法结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#until循环语句语法结构&#34;&gt;&lt;/a&gt; until循环语句语法结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;until循环语句基本语法为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;until 条件测试&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	循环体&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;until循环语句是在条件表达式不成立时，进入循环体执行指令，条件表达式成立时，终止循环。until的应用场景很罕见。&lt;/li&gt;
&lt;li&gt;until循环语句测试远程主机可达性&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat until_ping.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;host=www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;until ping -c1 -w1 $host &amp;amp;&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sleep 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;$host up. &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="Shell" />
        <updated>2021-09-14T00:19:12.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/09/14/Linux%20Shell/Linux%20Shell%E8%BF%9B%E9%98%B6/</id>
        <title>Linux Shell进阶</title>
        <link rel="alternate" href="http://example.com/2021/09/14/Linux%20Shell/Linux%20Shell%E8%BF%9B%E9%98%B6/"/>
        <content type="html">&lt;h2 id=&#34;4-并发控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-并发控制&#34;&gt;#&lt;/a&gt; 4 并发控制&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;默认情况下，Shell 命令是串行方式自上而下执行的，但如果有大量的命令需要执行，串行就会浪费大量的时间，这就需要采用并发执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;41-利用后台执行实现并发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#41-利用后台执行实现并发&#34;&gt;#&lt;/a&gt; 4.1 利用后台执行实现并发&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat back_ping.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in &amp;#123;1..254&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ip=10.10.10.$i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ping -c1 -w1 $ip &amp;amp;&amp;gt; /dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	if [ $? -eq 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		echo &amp;quot;$ip is up.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		echo &amp;quot;$ip is down.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wait&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;Mission Completed&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;利用管道实现并发控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用管道实现并发控制&#34;&gt;#&lt;/a&gt; 利用管道实现并发控制&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用 Linux 管道文件特性制作队列，可以控制并发数量。&lt;/li&gt;
&lt;li&gt;管道分为命名管道和匿名管道。&lt;/li&gt;
&lt;li&gt;创建命名管道文件命令是 mkfifo&lt;/li&gt;
&lt;li&gt;命名管道可跨终端实现数据交换&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat 255_ping.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;thread=5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tmp_fifofile=/tmp/$$.fifo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mkfifo $tmp_fifofile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exec 8&amp;lt;&amp;gt;$tmp_fifofile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rm $tmp_fifofile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in `seq $thread`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;gt;&amp;amp;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in &amp;#123;1..254&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	read -u 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ip=10.0.0.$i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		ping -c1 -w1 $ip &amp;amp;&amp;gt;/dev/null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if [ $? -eq 0 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			echo &amp;quot;$ip is up.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		else&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			echo &amp;quot;$ip is down . &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		echo &amp;gt;&amp;amp;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wait&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exec 8&amp;gt;&amp;amp;-&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;misson completed.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;5-shell-数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-shell-数组&#34;&gt;#&lt;/a&gt; 5 Shell 数组&lt;/h2&gt;
&lt;h3 id=&#34;51-shell数组的基本概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#51-shell数组的基本概念&#34;&gt;#&lt;/a&gt; 5.1 Shell 数组的基本概念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;用于区分不同元素的编号称为数组下标。&lt;/li&gt;
&lt;li&gt;数组的元素有时也称为下标变量。&lt;/li&gt;
&lt;li&gt;数组分为普通数组和关联数组&lt;/li&gt;
&lt;li&gt;普通数组中的索引是整数，关联数组的数组索引可以用文本。&lt;/li&gt;
&lt;li&gt;关联数组使用之前需要声明&lt;/li&gt;
&lt;li&gt;关联数组由键值对组成。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;511-普通数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#511-普通数组&#34;&gt;#&lt;/a&gt; 5.1.1 普通数组&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;普通数组中：数组元素的索引（下标）从 0 开始编号，获取数组中的元素要利用索引（下标）。索引（下标）可以是算术表达式，其结果必须是一个整数。&lt;/li&gt;
&lt;li&gt;普通数组定义。&lt;/li&gt;
&lt;li&gt;下标从 0 开始&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# books=(linux shell awk openstack docker)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# echo $&amp;#123;books[3]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openstack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;512-关联数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#512-关联数组&#34;&gt;#&lt;/a&gt; 5.1.2 关联数组&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;关联数组和普通数组所不同的是，它的索引下标可以是任意的整数和字符串。&lt;/li&gt;
&lt;li&gt;关联数组定义。eg: info=([name]=tianyun [sex]=male [age]=36 [height]=170 [skill]=cloud)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;513-数组声明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#513-数组声明&#34;&gt;#&lt;/a&gt; 5.1.3 数组声明&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;关联数组需要先声明后使用。&lt;/li&gt;
&lt;li&gt;通常情况下 Shell 解释器隐式声明普通数组。&lt;/li&gt;
&lt;li&gt;声明普通数组的方法为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;declare -a array&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;声明关联数组的方法为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;declare -A array&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;52-shell数组的定义&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#52-shell数组的定义&#34;&gt;#&lt;/a&gt; 5.2 Shell 数组的定义&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在 Linux Shell 中，定义一个数组有多种方法，需要先按照命令规则给数组命名，然后再定义数组的值。数组的定义方法有直接定义数组、下标定义数组、间接定义数组和从文件中读入定义数组，接下来详细介绍定义数组的方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;521-直接定义数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#521-直接定义数组&#34;&gt;#&lt;/a&gt; 5.2.1 直接定义数组&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;直接定义数组是用小括号将变量值括起来赋值给数组变量，每个变量值之间要用空隔进行分隔。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# books=(linux shell awk openstack docker)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# echo $&amp;#123;books[3]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openstack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;522-下标定义数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#522-下标定义数组&#34;&gt;#&lt;/a&gt; 5.2.2 下标定义数组&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;下标定义数组是用小括号将变量值括起来，同时采用键值对的形式赋值。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;array_name=([1]=value1 [2]=value2 [3]=value3 ...)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;此种方法为 key-value 键值对的形式，小括号里对应的数字为数组下标，等号后面的内容为下标对应的数组变量的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# declare -A info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# info=([name]=tianyun [sex]=male [age]=36 [height]=170 [skill]=cloud)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# echo $&amp;#123;info[name]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tianyun&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# echo $&amp;#123;info[skill]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cloud&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;523-间接定义数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#523-间接定义数组&#34;&gt;#&lt;/a&gt; 5.2.3 间接定义数组&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;间接定义数组是分别通过定义数组的方法来定义。其语法格式为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;array_name[0]=value1;array_name[1]=value2;array_name[2]=value3 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;此种方法要求一次赋一个值，比较复杂。具体如下所示。&lt;/li&gt;
&lt;li&gt;间接定义数组。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# array[0]=pear&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# array[1]=apple&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# array[2]=orange&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# echo $&amp;#123;array[1]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apple&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# echo &amp;quot;You are the $&amp;#123;array[1]&amp;#125; of my eye.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;You are the apple of my eye.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;524-从文件中读入定义数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#524-从文件中读入定义数组&#34;&gt;#&lt;/a&gt; 5.2.4 从文件中读入定义数组&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;从文件中读入定义数组是使用命令的输出结果作为数组的内容。其语法格式为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;array_name=($&amp;#123;命令&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;数组名=($(`变量名`))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;或者&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;array_name=(`命令`)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;数组名=(`变量值`)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;这种方法要求一次赋多个值。&lt;/li&gt;
&lt;li&gt;从文件中读入定义数组。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# array=(`cat /etc/passwd`)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# echo $&amp;#123;array[*]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root:x:0:0:root:/root:/bin/bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;53-shell数组的遍历及赋值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#53-shell数组的遍历及赋值&#34;&gt;#&lt;/a&gt; 5.3 Shell 数组的遍历及赋值&lt;/h3&gt;
&lt;h4 id=&#34;531-常见的访问shell数组表达式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#531-常见的访问shell数组表达式&#34;&gt;#&lt;/a&gt; 5.3.1 常见的访问 Shell 数组表达式&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;表列出了常见访问数组的表达式。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;语法&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td !array[*]=&#34;&#34;&gt;echo $&lt;/td&gt;
&lt;td&gt;访问数组所有索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td !array[@]=&#34;&#34;&gt;echo $&lt;/td&gt;
&lt;td&gt;访问数组所有索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td array[*]=&#34;&#34;&gt;echo $&lt;/td&gt;
&lt;td&gt;访问数组所有值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td array[@]=&#34;&#34;&gt;echo $&lt;/td&gt;
&lt;td&gt;访问数组所有值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td id=&#34;array[@]&#34;&gt;echo $&lt;/td&gt;
&lt;td&gt;统计数组元素个数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td array[0]=&#34;&#34;&gt;echo $&lt;/td&gt;
&lt;td&gt;访问数组中的第一个元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td array[@]:1=&#34;&#34;&gt;echo $&lt;/td&gt;
&lt;td&gt;从数组下标 1 开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td array[@]:1:2=&#34;&#34;&gt;echo $&lt;/td&gt;
&lt;td&gt;从数组下标 1 开始，访问两个元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td id=&#34;array[#]&#34;&gt;echo $&lt;/td&gt;
&lt;td&gt;第 #个元素的字符个数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td id=&#34;array&#34;&gt;echo $&lt;/td&gt;
&lt;td&gt;第 0 个元素的字符个数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td array[#]=&#34;&#34;&gt;echo $&lt;/td&gt;
&lt;td&gt;显示第 #个元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td array=&#34;&#34;&gt;echo $&lt;/td&gt;
&lt;td&gt;显示第 0 个与元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;532-while循环实现shell数组的遍历&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#532-while循环实现shell数组的遍历&#34;&gt;#&lt;/a&gt; 5.3.2 while 循环实现 Shell 数组的遍历&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;以 host 文件的每一行作为数组的一个元素来赋值，并对该数组进行遍历。具体如下所示。&lt;/li&gt;
&lt;li&gt;while 循环实现 Shell 数组的遍历。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat array_host_while.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while read line&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	hosts[++i]=$line&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done &amp;lt;/etc/hosts&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;hosts first : $&amp;#123;hosts[1]&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in $&amp;#123;!hosts[@]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;$i: $&amp;#123;hosts[i]&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;while 读入 /etc/hosts 文件的每一行并把它显示出来，hosts [++i]=&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;这个表达式完成数组的赋值操作，&lt;/mtext&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;line这个表达式完成数组的赋值操作，&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;这&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;个&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;表&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;达&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;式&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;完&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;成&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;数&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;组&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;赋&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;值&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;操&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;作&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{!hosts [@]} 这个表达式获得数组的索引，${hosts [i]} 这个表达式完成了数组的遍历。&lt;/li&gt;
&lt;li&gt;执行结果如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# ./array_host_while.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hosts first : 127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1: 127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2: ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4: 172.18.*.* as&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5: 172.18.*.* hdp-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6: 172.18.*.* hdp-2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7: 172.18.*.* hdp-3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;533-for循环实现shell数组的遍历&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#533-for循环实现shell数组的遍历&#34;&gt;#&lt;/a&gt; 5.3.3 for 循环实现 Shell 数组的遍历&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;当一个脚本需要传入的参数较多时，可以使用 for 循环进行参数遍历。具体如下例所示。&lt;/li&gt;
&lt;li&gt;for 循环实现 Shell 数组的遍历。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat array_host_for.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; array&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OLD_IFS=$IFS&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;IFS=$&amp;#x27;\n&amp;#x27; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for line in `cat /etc/hosts`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hosts[++j]=$line&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for i in $&amp;#123;!hosts[@]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;$i: $&amp;#123;hosts[i]&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;定义一个数组 hosts 以 /etc/hosts 每一行内容作为数组的元素进行遍历。&lt;/li&gt;
&lt;li&gt;执行结果如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# ./array_host_for.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1: 127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2: ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4: 172.18.*.* as&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5: 172.18.*.* hdp-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6: 172.18.*.* hdp-2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7: 172.18.*.* hdp-3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;6-shell函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-shell函数&#34;&gt;#&lt;/a&gt; 6 Shell 函数&lt;/h2&gt;
&lt;h3 id=&#34;61-shell函数的概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#61-shell函数的概念&#34;&gt;#&lt;/a&gt; 6.1 Shell 函数的概念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;函数是由若干条 Shell 命令组成的语句块，实现代码重用和模块化编程，它不是一个单独的进程，不能独立运行，它只是 Shell 程序的一部分。&lt;/li&gt;
&lt;li&gt;Shell 函数和 Shell 程序比较相似，区别在于：Shell 程序在子 Shell 中运行，而 Shell 函数在当前 Shell 中运行，因此在当前 Shell 中，函数可以对 Shell 变量进行修改。&lt;/li&gt;
&lt;li&gt;函数可以提高程序的可读性和重用性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;62-shell函数的语法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#62-shell函数的语法&#34;&gt;#&lt;/a&gt; 6.2 Shell 函数的语法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Shell 函数的语法格式为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;函数名()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	代码块&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;or&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function 函数名 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	代码块&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;关键字 function 表示定义一个函数，可以省略，其后是函数名，两个大括号之间是函数体。创建的函数可以在别的脚本中被调用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;63-shell函数的调用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#63-shell函数的调用&#34;&gt;#&lt;/a&gt; 6.3 Shell 函数的调用&lt;/h3&gt;
&lt;h4 id=&#34;631-shell函数的传参介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#631-shell函数的传参介绍&#34;&gt;#&lt;/a&gt; 6.3.1 Shell 函数的传参介绍&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;最基本的语法格式为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;函数名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;带有参数的语法格式为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;函数名 参数1 参数2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Shell 的位置参数（$1、$2、…）可以作为函数的参数来使用。其中，$1 表示第一个参数，$2 表示第二个参数。&lt;/li&gt;
&lt;li&gt;当 n≥10 时，需要使用 ${n} 来获取参数。例如，获取第十个参数不能用&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mtext&gt;，需要用&lt;/mtext&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;10，需要用&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;需&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;要&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {10}。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;64-shell函数的应用实战&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#64-shell函数的应用实战&#34;&gt;#&lt;/a&gt; 6.4 Shell 函数的应用实战&lt;/h3&gt;
&lt;h4 id=&#34;641-脚本中调用shell函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#641-脚本中调用shell函数&#34;&gt;#&lt;/a&gt; 6.4.1 脚本中调用 Shell 函数&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;函数必须在使用前需要先被定义。因此，在脚本中使用函数时，必须在脚本开始前定义函数，调用函数仅使用函数名即可&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# ./function.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5的阶乘是: 120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat function.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;factorial()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	factorial=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for((i=1;i&amp;lt;=5;i++))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		factorial=$[$factorial * $i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	done&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;5的阶乘是: $factorial&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;factorial&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;接下来使用带有可以传参调用的函数来写一个计算阶乘的脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# ./function.sh 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5的阶乘是: 120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat function.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;factorial()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	factorial=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for((i=1;i&amp;lt;=$1;i++))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		factorial=$[$factorial * $i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	done&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;5的阶乘是: $factorial&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;factorial $1 &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;函数的位置参数与脚本的位置参数&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# ./position_func.sh 2 3 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result is : 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat position_func.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;if [ $# -ne 3 ];then&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;usage: `basename $0` p1 p2 p3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	exit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fun()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;$[$1*$2*$3]&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;result&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result=`fun $1 $2 $3`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;result is : $result&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;642-shell函数的返回值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#642-shell函数的返回值&#34;&gt;#&lt;/a&gt; 6.4.2 Shell 函数的返回值&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;函数有两种返回值，分别为执行结果的返回值和退出状态码。&lt;/li&gt;
&lt;li&gt;函数的退出状态码取决于函数中执行的最后一条命令的退出状态码。&lt;/li&gt;
&lt;li&gt;自定义退出状态码的语法格式为：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;return 0 无错误返回&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return 1-255 有错误返回&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;退出状态码使用 return 保留字返回&lt;/li&gt;
&lt;li&gt;return 的返回值只能是 0~255 的一个整数&lt;/li&gt;
&lt;li&gt;执行结果的返回值不使用 return&lt;/li&gt;
&lt;li&gt;执行结果的返回值将保存到变量 “$?” 中&lt;/li&gt;
&lt;li&gt;函数执行结果的的返回值。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# ./return.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Enter a Number: 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fun2 return value: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat return.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fun2()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	read -p &amp;quot;Enter a Number: &amp;quot; num&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	let 2*num&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fun2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;echo &amp;quot;fun2 return value: $?&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;643-shell函数数组变量的传参&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#643-shell函数数组变量的传参&#34;&gt;#&lt;/a&gt; 6.4.3 Shell 函数数组变量的传参&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;向函数中传递数组&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# ./array_func.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@hdp-1 shell]# cat array_func.sh &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;num=(1 2 3 4 5)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;array()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	result=1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	for i in &amp;quot;$@&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		result=$[$result*$i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	done&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	echo &amp;quot;$result&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;array $&amp;#123;num[@]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="Shell" />
        <updated>2021-09-14T00:19:12.000Z</updated>
    </entry>
</feed>
