{
    "version": "https://jsonfeed.org/version/1",
    "title": "千里稻花应秀色 • All posts by \"平台\" category",
    "description": "blogs by SSR",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/09/14/Linux%20Shell/",
            "url": "http://example.com/2021/09/14/Linux%20Shell/",
            "title": "Linux Shell(一)",
            "date_published": "2021-09-14T00:19:12.000Z",
            "content_html": "<p>什么是 shell？目前常用的操作系统（Windows、U/L、Android、iOS 等）都带有图形界面，然 而，早期的计算机并没有图形界面，人们只能使用命令来控制计算机。其实，真 正能够控制计算机硬件（CPU、内存、显示器）的只有操作系统内核（Kernel）， 图形界面和命令行都是架设在用户和内核之间的桥梁，是为了方便用户控制计算 机而存在的。Shell 也是一种编程语言，主要用来开发一些实用的、自动化的小工具，例如，检测计算机的硬件参数、搭建 Web 运行环境、日志分析等。对 Linux 运维工程师来说，Shell 更是必须掌握的技能。Shell 使自动化管理服务器集群成为可能，否则用户只能一个一个地登录所有的服务器，对每一台服务器进行相同的设置，而这些服务器可能有成百上千之多，用户会在重复性的工作上浪费大量时间。</p>\n<h3 id=\"11查看shell版本\"><a class=\"markdownIt-Anchor\" href=\"#11查看shell版本\">#</a> 1.1 查看 Shell 版本</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /ect/shells</span><br><span class=\"line\">/bin/sh</span><br><span class=\"line\">/bin/bash</span><br><span class=\"line\">/sbin/nologin</span><br><span class=\"line\">/usr/bin/sh</span><br><span class=\"line\">/usr/bin/bash</span><br><span class=\"line\">/usr/sbin/nologin</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-shell变量类型\"><a class=\"markdownIt-Anchor\" href=\"#12-shell变量类型\">#</a> 1.2 Shell 变量类型</h3>\n<p>Shell 变量分为四类，分别为自定义变量、环境变量、位置变量和预定义变量。</p>\n<ul>\n<li>根据工作要求临时定义的变量称为自定义变量</li>\n<li>环境变量一般是指用 export 内置命令导出的变量，用于定义 Shell 的运行环境，保证 Shell 命令的正确执行 只使用 不定义</li>\n<li>从命令行、函数或脚本执行等处传递参数时，$0、$1 称为特殊位置变量</li>\n<li>预定义变量是在 bash 中已有的变量，可以直接使用，如<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">@</mi><mtext>、</mtext></mrow><annotation encoding=\"application/x-tex\">@、</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">@</span><span class=\"mord cjk_fallback\">、</span></span></span></span>* 等。</li>\n</ul>\n<h4 id=\"121-自定义变量\"><a class=\"markdownIt-Anchor\" href=\"#121-自定义变量\">#</a> 1.2.1 自定义变量</h4>\n<p>自定义变量可以理解为局部变量或普通变量，只能在创建它们的 Shell 函数或 Shell 脚本中使用，自定义变量的说明如表所示。</p>\n<table>\n<thead>\n<tr>\n<th>定义自定义变量</th>\n<th>变量名 = 变量值，字母下划线开头，区分大小写</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>使用自定义变量</td>\n<td>$ 变量名</td>\n</tr>\n<tr>\n<td>查看自定义变量</td>\n<td>echo$ 变量名 set (所有变量)</td>\n</tr>\n<tr>\n<td>取消自定义变量</td>\n<td>unset 变量名</td>\n</tr>\n<tr>\n<td>自定义变量使用范围</td>\n<td>仅在当前 Shell 中有效</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">分支结构</span></span><br><span class=\"line\">host=www.baidu.com</span><br><span class=\"line\">if ping -c1 $host &amp;&gt;/dev/null</span><br><span class=\"line\">then</span><br><span class=\"line\">\techo &quot;network ok&quot;</span><br><span class=\"line\">else</span><br><span class=\"line\">\techo &quot;bad network&quot;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"122环境变量\"><a class=\"markdownIt-Anchor\" href=\"#122环境变量\">#</a> 1.2.2 环境变量</h4>\n<p>环境变量也可称为全局变量，可以在创建它们的 Shell 及其派生出来的任意子进程 Shell 中使用。环境变量的说明如表所示。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看</span></span><br><span class=\"line\">echo $PATH</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">修改</span></span><br><span class=\"line\">PATH=$PATH:/bin/new</span><br><span class=\"line\">export PATH</span><br></pre></td></tr></table></figure>\n<h4 id=\"123位置变量\"><a class=\"markdownIt-Anchor\" href=\"#123位置变量\">#</a> 1.2.3 位置变量</h4>\n<p>在 Shell 中存在一些位置变量。位置变量用于在命令行、函数或脚本中传递参数，其变量名不用自己定义，其作用也是固定的。执行脚本时，通过在脚本后面给出具体的参数（多个参数用空格隔开）对相应的位置变量进行赋值。<br>\n$0 代表命令本身，$1-$9 代表接收的第 1~9 个参数，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>10</mn><mtext>以上需要用</mtext><mrow></mrow><mtext>括起来，如</mtext></mrow><annotation encoding=\"application/x-tex\">10以上需要用{}括起来，如</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord cjk_fallback\">以</span><span class=\"mord cjk_fallback\">上</span><span class=\"mord cjk_fallback\">需</span><span class=\"mord cjk_fallback\">要</span><span class=\"mord cjk_fallback\">用</span><span class=\"mord\"></span><span class=\"mord cjk_fallback\">括</span><span class=\"mord cjk_fallback\">起</span><span class=\"mord cjk_fallback\">来</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">如</span></span></span></span> {10} 代表接收的第 10 个参数。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[hadoop@master shell]$ cat ping06.sh </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">ping -c1 $1 &amp;&gt;/dev/null</span><br><span class=\"line\"></span><br><span class=\"line\">if [ $? -eq &quot;0&quot; ];then</span><br><span class=\"line\">\techo &quot;network to $1 is ok&quot;</span><br><span class=\"line\">else</span><br><span class=\"line\">\techo &quot;bad network to $1&quot;</span><br><span class=\"line\">fi</span><br><span class=\"line\">[hadoop@master shell]$ sh ping06.sh www.baidu.com</span><br><span class=\"line\">network to www.baidu.com is ok</span><br></pre></td></tr></table></figure>\n<h4 id=\"124预定义变量\"><a class=\"markdownIt-Anchor\" href=\"#124预定义变量\">#</a> 1.2.4 预定义变量</h4>\n<table>\n<thead>\n<tr>\n<th>$0</th>\n<th>脚本名</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$*</td>\n<td>所有参数</td>\n</tr>\n<tr>\n<td>$@</td>\n<td>所有参数</td>\n</tr>\n<tr>\n<td>$#</td>\n<td>参数的个数</td>\n</tr>\n<tr>\n<td>$$</td>\n<td>当前进程 PID</td>\n</tr>\n<tr>\n<td>$!</td>\n<td>上一个进程 PID</td>\n</tr>\n<tr>\n<td>$?</td>\n<td>上一个命令返回值，0 代表成功</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[hadoop@master shell]$ ls &amp;</span><br><span class=\"line\">[1] 6950</span><br><span class=\"line\">[hadoop@master shell]$ ip.txt  ping03.sh  ping04.sh  ping05.sh  ping06.sh  ping07.sh  read</span><br><span class=\"line\"></span><br><span class=\"line\">[1]+  完成                  ls --color=auto</span><br><span class=\"line\">[hadoop@master shell]$ $!</span><br><span class=\"line\">-bash: 6950: 未找到命令</span><br><span class=\"line\"></span><br><span class=\"line\">[hadoop@master shell]$ cat ping07.sh </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">if [ $# -eq 0 ];then</span><br><span class=\"line\">\techo &quot;usage: `basename $0` filename&quot;</span><br><span class=\"line\">\texit</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\">if [ ! -f $1 ];then</span><br><span class=\"line\">\techo &quot;filename error&quot;</span><br><span class=\"line\">\texit</span><br><span class=\"line\">fi</span><br><span class=\"line\">for ip in `cat $1`</span><br><span class=\"line\">do </span><br><span class=\"line\">\tping -c1 $ip</span><br><span class=\"line\">done</span><br><span class=\"line\">[hadoop@master shell]$ sh ping07.sh </span><br><span class=\"line\">usage: ping07.sh filename</span><br><span class=\"line\">[hadoop@master shell]$ sh ping07.sh ip.txt </span><br></pre></td></tr></table></figure>\n<h3 id=\"13变量的赋值\"><a class=\"markdownIt-Anchor\" href=\"#13变量的赋值\">#</a> 1.3 变量的赋值</h3>\n<h4 id=\"131显式赋值\"><a class=\"markdownIt-Anchor\" href=\"#131显式赋值\">#</a> 1.3.1 显式赋值</h4>\n<p>在 Shell 中，当第一次使用某变量名时，实际上就已经给变量赋值了。显式赋值的<br>\n格式为” 变量名 = 变量值”。为了避免歧义，显式赋值时__禁止在等号两边添加空格__，<br>\n这跟常见的编程语言有所不同。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>变量缺省为字符串类型</li>\n<li>变量值中有空格需要使用引号</li>\n<li>使用变量值进行赋值  name=“welcome to $place”</li>\n</ul>\n<h4 id=\"132从键盘赋值\"><a class=\"markdownIt-Anchor\" href=\"#132从键盘赋值\">#</a> 1.3.2 从键盘赋值</h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read -p &quot;Please enter a ip:&quot; ip</span><br><span class=\"line\">Please enter a ip:1.1.1.1</span><br><span class=\"line\">echo $ip</span><br><span class=\"line\">1.1.1.1</span><br></pre></td></tr></table></figure>\n<h4 id=\"133使用位置变量赋值\"><a class=\"markdownIt-Anchor\" href=\"#133使用位置变量赋值\">#</a> 1.3.3 使用位置变量赋值</h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat test.sh</span><br><span class=\"line\">echo $1 $2</span><br><span class=\"line\">sh test.sh hello world</span><br><span class=\"line\">hello world</span><br></pre></td></tr></table></figure>\n<h4 id=\"134利用命令替换进行赋值\"><a class=\"markdownIt-Anchor\" href=\"#134利用命令替换进行赋值\">#</a> 1.3.4 利用命令替换进行赋值</h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">today=`date +%F`</span><br><span class=\"line\">echo today</span><br><span class=\"line\">2021-10-2</span><br><span class=\"line\">touch `date +%F`_file.txt</span><br></pre></td></tr></table></figure>\n<p>双引号弱引用，单引号为强引用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[hadoop@master shell]$ cat ping04.sh </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">host=www.baidu.com</span><br><span class=\"line\">ping -c1 $host &amp;&gt;/dev/null</span><br><span class=\"line\">if [ $? -eq 0 ] </span><br><span class=\"line\">then</span><br><span class=\"line\">\techo &quot;network to $host is ok&quot;</span><br><span class=\"line\">else</span><br><span class=\"line\">\techo &quot;bad network to $host&quot;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h3 id=\"14变量的运算\"><a class=\"markdownIt-Anchor\" href=\"#14变量的运算\">#</a> 1.4 变量的运算</h3>\n<h4 id=\"141expr数值运算命令\"><a class=\"markdownIt-Anchor\" href=\"#141expr数值运算命令\">#</a> 1.4.1.expr 数值运算命令</h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo 1 + 3</span><br><span class=\"line\">1 + 3</span><br><span class=\"line\">expr 1 + 3</span><br><span class=\"line\">4</span><br><span class=\"line\">res = `expr $name1 \\* $name2`</span><br><span class=\"line\">echo $res</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在使用 expr 时，需要注意运算符及用于计算的数字两边必须有空格，否则会执行失败。</li>\n<li>expr 支持乘法运算，在使用乘号 * 时必须用反斜杠转义，即 \\*</li>\n</ul>\n<h4 id=\"142或数值运算命令\"><a class=\"markdownIt-Anchor\" href=\"#142或数值运算命令\">#</a> 1.4.2.“$(())” 或 “[]” 数值运算命令</h4>\n<ul>\n<li>双小括号 “$(())” 的作用是进行整数运算和数值比较，格式为 “ ((表达式))”</li>\n<li>操作数、运算符两侧可以有空格</li>\n<li>括号内 $ 符合可省略</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num1=10</span><br><span class=\"line\">num2=20</span><br><span class=\"line\">sum=$((num1+num2))</span><br><span class=\"line\">echo $sum</span><br><span class=\"line\">30</span><br><span class=\"line\">sum=$[ num1+num2 ]</span><br><span class=\"line\">echo $sum</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">可以使用加减乘除幂</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"143let数值运算命令\"><a class=\"markdownIt-Anchor\" href=\"#143let数值运算命令\">#</a> 1.4.3.let 数值运算命令</h4>\n<ul>\n<li>let 数值符号可以直接进行计算，不需要使用 $ 符号。</li>\n<li>let 运算命令的语法格式为：let 赋值表达式</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let num=1+2</span><br><span class=\"line\">echo $num</span><br><span class=\"line\">3</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">调试模式</span></span><br><span class=\"line\">bash -vx test.sh</span><br></pre></td></tr></table></figure>\n<h4 id=\"144shell小数运算\"><a class=\"markdownIt-Anchor\" href=\"#144shell小数运算\">#</a> 1.4.4Shell 小数运算</h4>\n<ul>\n<li>bc 是 Unix/Linux 下的计算器，它还可以作为命令进行小数运算。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;2^4&quot;|bc</span><br><span class=\"line\">16</span><br><span class=\"line\">echo &quot;scale=2;6/4&quot;|bc</span><br><span class=\"line\">1.50</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "shell"
            ]
        }
    ]
}